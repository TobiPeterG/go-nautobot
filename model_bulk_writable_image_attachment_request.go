/*
API Documentation

Source of truth and network automation platform

API version: 2.3.2 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
	"os"
	"fmt"
)

// checks if the BulkWritableImageAttachmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkWritableImageAttachmentRequest{}

// BulkWritableImageAttachmentRequest Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type BulkWritableImageAttachmentRequest struct {
	Id string `json:"id"`
	ContentType string `json:"content_type"`
	ObjectId string `json:"object_id"`
	Image *os.File `json:"image"`
	ImageHeight int32 `json:"image_height"`
	ImageWidth int32 `json:"image_width"`
	Name *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BulkWritableImageAttachmentRequest BulkWritableImageAttachmentRequest

// NewBulkWritableImageAttachmentRequest instantiates a new BulkWritableImageAttachmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkWritableImageAttachmentRequest(id string, contentType string, objectId string, image *os.File, imageHeight int32, imageWidth int32) *BulkWritableImageAttachmentRequest {
	this := BulkWritableImageAttachmentRequest{}
	this.Id = id
	this.ContentType = contentType
	this.ObjectId = objectId
	this.Image = image
	this.ImageHeight = imageHeight
	this.ImageWidth = imageWidth
	return &this
}

// NewBulkWritableImageAttachmentRequestWithDefaults instantiates a new BulkWritableImageAttachmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkWritableImageAttachmentRequestWithDefaults() *BulkWritableImageAttachmentRequest {
	this := BulkWritableImageAttachmentRequest{}
	return &this
}

// GetId returns the Id field value
func (o *BulkWritableImageAttachmentRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BulkWritableImageAttachmentRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BulkWritableImageAttachmentRequest) SetId(v string) {
	o.Id = v
}

// GetContentType returns the ContentType field value
func (o *BulkWritableImageAttachmentRequest) GetContentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value
// and a boolean to check if the value has been set.
func (o *BulkWritableImageAttachmentRequest) GetContentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContentType, true
}

// SetContentType sets field value
func (o *BulkWritableImageAttachmentRequest) SetContentType(v string) {
	o.ContentType = v
}

// GetObjectId returns the ObjectId field value
func (o *BulkWritableImageAttachmentRequest) GetObjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value
// and a boolean to check if the value has been set.
func (o *BulkWritableImageAttachmentRequest) GetObjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectId, true
}

// SetObjectId sets field value
func (o *BulkWritableImageAttachmentRequest) SetObjectId(v string) {
	o.ObjectId = v
}

// GetImage returns the Image field value
func (o *BulkWritableImageAttachmentRequest) GetImage() *os.File {
	if o == nil {
		var ret *os.File
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *BulkWritableImageAttachmentRequest) GetImageOk() (**os.File, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *BulkWritableImageAttachmentRequest) SetImage(v *os.File) {
	o.Image = v
}

// GetImageHeight returns the ImageHeight field value
func (o *BulkWritableImageAttachmentRequest) GetImageHeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ImageHeight
}

// GetImageHeightOk returns a tuple with the ImageHeight field value
// and a boolean to check if the value has been set.
func (o *BulkWritableImageAttachmentRequest) GetImageHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageHeight, true
}

// SetImageHeight sets field value
func (o *BulkWritableImageAttachmentRequest) SetImageHeight(v int32) {
	o.ImageHeight = v
}

// GetImageWidth returns the ImageWidth field value
func (o *BulkWritableImageAttachmentRequest) GetImageWidth() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ImageWidth
}

// GetImageWidthOk returns a tuple with the ImageWidth field value
// and a boolean to check if the value has been set.
func (o *BulkWritableImageAttachmentRequest) GetImageWidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageWidth, true
}

// SetImageWidth sets field value
func (o *BulkWritableImageAttachmentRequest) SetImageWidth(v int32) {
	o.ImageWidth = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BulkWritableImageAttachmentRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableImageAttachmentRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BulkWritableImageAttachmentRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BulkWritableImageAttachmentRequest) SetName(v string) {
	o.Name = &v
}

func (o BulkWritableImageAttachmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkWritableImageAttachmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["content_type"] = o.ContentType
	toSerialize["object_id"] = o.ObjectId
	toSerialize["image"] = o.Image
	toSerialize["image_height"] = o.ImageHeight
	toSerialize["image_width"] = o.ImageWidth
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BulkWritableImageAttachmentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"content_type",
		"object_id",
		"image",
		"image_height",
		"image_width",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBulkWritableImageAttachmentRequest := _BulkWritableImageAttachmentRequest{}

	err = json.Unmarshal(data, &varBulkWritableImageAttachmentRequest)

	if err != nil {
		return err
	}

	*o = BulkWritableImageAttachmentRequest(varBulkWritableImageAttachmentRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "content_type")
		delete(additionalProperties, "object_id")
		delete(additionalProperties, "image")
		delete(additionalProperties, "image_height")
		delete(additionalProperties, "image_width")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBulkWritableImageAttachmentRequest struct {
	value *BulkWritableImageAttachmentRequest
	isSet bool
}

func (v NullableBulkWritableImageAttachmentRequest) Get() *BulkWritableImageAttachmentRequest {
	return v.value
}

func (v *NullableBulkWritableImageAttachmentRequest) Set(val *BulkWritableImageAttachmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkWritableImageAttachmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkWritableImageAttachmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkWritableImageAttachmentRequest(val *BulkWritableImageAttachmentRequest) *NullableBulkWritableImageAttachmentRequest {
	return &NullableBulkWritableImageAttachmentRequest{value: val, isSet: true}
}

func (v NullableBulkWritableImageAttachmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkWritableImageAttachmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


