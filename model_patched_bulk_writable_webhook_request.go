/*
 * API Documentation
 *
 * Source of truth and network automation platform
 *
 * API version: 2.2.5 (2.2)
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package go-nautobot

// Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedBulkWritableWebhookRequest struct {
	Id string `json:"id"`
	ContentTypes []string `json:"content_types,omitempty"`
	Name string `json:"name,omitempty"`
	// Call this webhook when a matching object is created.
	TypeCreate bool `json:"type_create,omitempty"`
	// Call this webhook when a matching object is updated.
	TypeUpdate bool `json:"type_update,omitempty"`
	// Call this webhook when a matching object is deleted.
	TypeDelete bool `json:"type_delete,omitempty"`
	// A POST will be sent to this URL when the webhook is called.
	PayloadUrl string `json:"payload_url,omitempty"`
	Enabled bool `json:"enabled,omitempty"`
	HttpMethod *HttpMethodEnum `json:"http_method,omitempty"`
	// The complete list of official content types is available <a href=\"https://www.iana.org/assignments/media-types/media-types.xhtml\">here</a>.
	HttpContentType string `json:"http_content_type,omitempty"`
	// User-supplied HTTP headers to be sent with the request in addition to the HTTP content type. Headers should be defined in the format <code>Name: Value</code>. Jinja2 template processing is supported with the same context as the request body (below).
	AdditionalHeaders string `json:"additional_headers,omitempty"`
	// Jinja2 template for a custom request body. If blank, a JSON object representing the change will be included. Available context data includes: <code>event</code>, <code>model</code>, <code>timestamp</code>, <code>username</code>, <code>request_id</code>, and <code>data</code>.
	BodyTemplate string `json:"body_template,omitempty"`
	// When provided, the request will include a 'X-Hook-Signature' header containing a HMAC hex digest of the payload body using the secret as the key. The secret is not transmitted in the request.
	Secret string `json:"secret,omitempty"`
	// Enable SSL certificate verification. Disable with caution!
	SslVerification bool `json:"ssl_verification,omitempty"`
	// The specific CA certificate file to use for SSL verification. Leave blank to use the system defaults.
	CaFilePath string `json:"ca_file_path,omitempty"`
}
