/*
API Documentation

Source of truth and network automation platform

API version: 2.3.2 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
)

// checks if the PatchedWritableCableRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedWritableCableRequest{}

// PatchedWritableCableRequest Base class to use for serializers based on OrganizationalModel or PrimaryModel.  Can also be used for models derived from BaseModel, so long as they support custom fields, notes, and relationships.
type PatchedWritableCableRequest struct {
	TerminationAType *string `json:"termination_a_type,omitempty"`
	TerminationBType *string `json:"termination_b_type,omitempty"`
	TerminationAId *string `json:"termination_a_id,omitempty"`
	TerminationBId *string `json:"termination_b_id,omitempty"`
	Type *PatchedWritableCableRequestType `json:"type,omitempty"`
	Label *string `json:"label,omitempty"`
	// RGB color in hexadecimal (e.g. 00ff00)
	Color *string `json:"color,omitempty" validate:"regexp=^[0-9a-f]{6}$"`
	Length NullableInt32 `json:"length,omitempty"`
	LengthUnit *PatchedWritableCableRequestLengthUnit `json:"length_unit,omitempty"`
	Status *BulkWritableCableRequestStatus `json:"status,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	Relationships *map[string]BulkWritableCableRequestRelationshipsValue `json:"relationships,omitempty"`
	Tags []BulkWritableCableRequestStatus `json:"tags,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedWritableCableRequest PatchedWritableCableRequest

// NewPatchedWritableCableRequest instantiates a new PatchedWritableCableRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedWritableCableRequest() *PatchedWritableCableRequest {
	this := PatchedWritableCableRequest{}
	return &this
}

// NewPatchedWritableCableRequestWithDefaults instantiates a new PatchedWritableCableRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedWritableCableRequestWithDefaults() *PatchedWritableCableRequest {
	this := PatchedWritableCableRequest{}
	return &this
}

// GetTerminationAType returns the TerminationAType field value if set, zero value otherwise.
func (o *PatchedWritableCableRequest) GetTerminationAType() string {
	if o == nil || IsNil(o.TerminationAType) {
		var ret string
		return ret
	}
	return *o.TerminationAType
}

// GetTerminationATypeOk returns a tuple with the TerminationAType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCableRequest) GetTerminationATypeOk() (*string, bool) {
	if o == nil || IsNil(o.TerminationAType) {
		return nil, false
	}
	return o.TerminationAType, true
}

// HasTerminationAType returns a boolean if a field has been set.
func (o *PatchedWritableCableRequest) HasTerminationAType() bool {
	if o != nil && !IsNil(o.TerminationAType) {
		return true
	}

	return false
}

// SetTerminationAType gets a reference to the given string and assigns it to the TerminationAType field.
func (o *PatchedWritableCableRequest) SetTerminationAType(v string) {
	o.TerminationAType = &v
}

// GetTerminationBType returns the TerminationBType field value if set, zero value otherwise.
func (o *PatchedWritableCableRequest) GetTerminationBType() string {
	if o == nil || IsNil(o.TerminationBType) {
		var ret string
		return ret
	}
	return *o.TerminationBType
}

// GetTerminationBTypeOk returns a tuple with the TerminationBType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCableRequest) GetTerminationBTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TerminationBType) {
		return nil, false
	}
	return o.TerminationBType, true
}

// HasTerminationBType returns a boolean if a field has been set.
func (o *PatchedWritableCableRequest) HasTerminationBType() bool {
	if o != nil && !IsNil(o.TerminationBType) {
		return true
	}

	return false
}

// SetTerminationBType gets a reference to the given string and assigns it to the TerminationBType field.
func (o *PatchedWritableCableRequest) SetTerminationBType(v string) {
	o.TerminationBType = &v
}

// GetTerminationAId returns the TerminationAId field value if set, zero value otherwise.
func (o *PatchedWritableCableRequest) GetTerminationAId() string {
	if o == nil || IsNil(o.TerminationAId) {
		var ret string
		return ret
	}
	return *o.TerminationAId
}

// GetTerminationAIdOk returns a tuple with the TerminationAId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCableRequest) GetTerminationAIdOk() (*string, bool) {
	if o == nil || IsNil(o.TerminationAId) {
		return nil, false
	}
	return o.TerminationAId, true
}

// HasTerminationAId returns a boolean if a field has been set.
func (o *PatchedWritableCableRequest) HasTerminationAId() bool {
	if o != nil && !IsNil(o.TerminationAId) {
		return true
	}

	return false
}

// SetTerminationAId gets a reference to the given string and assigns it to the TerminationAId field.
func (o *PatchedWritableCableRequest) SetTerminationAId(v string) {
	o.TerminationAId = &v
}

// GetTerminationBId returns the TerminationBId field value if set, zero value otherwise.
func (o *PatchedWritableCableRequest) GetTerminationBId() string {
	if o == nil || IsNil(o.TerminationBId) {
		var ret string
		return ret
	}
	return *o.TerminationBId
}

// GetTerminationBIdOk returns a tuple with the TerminationBId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCableRequest) GetTerminationBIdOk() (*string, bool) {
	if o == nil || IsNil(o.TerminationBId) {
		return nil, false
	}
	return o.TerminationBId, true
}

// HasTerminationBId returns a boolean if a field has been set.
func (o *PatchedWritableCableRequest) HasTerminationBId() bool {
	if o != nil && !IsNil(o.TerminationBId) {
		return true
	}

	return false
}

// SetTerminationBId gets a reference to the given string and assigns it to the TerminationBId field.
func (o *PatchedWritableCableRequest) SetTerminationBId(v string) {
	o.TerminationBId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PatchedWritableCableRequest) GetType() PatchedWritableCableRequestType {
	if o == nil || IsNil(o.Type) {
		var ret PatchedWritableCableRequestType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCableRequest) GetTypeOk() (*PatchedWritableCableRequestType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PatchedWritableCableRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given PatchedWritableCableRequestType and assigns it to the Type field.
func (o *PatchedWritableCableRequest) SetType(v PatchedWritableCableRequestType) {
	o.Type = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *PatchedWritableCableRequest) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCableRequest) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *PatchedWritableCableRequest) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *PatchedWritableCableRequest) SetLabel(v string) {
	o.Label = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *PatchedWritableCableRequest) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCableRequest) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *PatchedWritableCableRequest) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *PatchedWritableCableRequest) SetColor(v string) {
	o.Color = &v
}

// GetLength returns the Length field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableCableRequest) GetLength() int32 {
	if o == nil || IsNil(o.Length.Get()) {
		var ret int32
		return ret
	}
	return *o.Length.Get()
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableCableRequest) GetLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Length.Get(), o.Length.IsSet()
}

// HasLength returns a boolean if a field has been set.
func (o *PatchedWritableCableRequest) HasLength() bool {
	if o != nil && o.Length.IsSet() {
		return true
	}

	return false
}

// SetLength gets a reference to the given NullableInt32 and assigns it to the Length field.
func (o *PatchedWritableCableRequest) SetLength(v int32) {
	o.Length.Set(&v)
}
// SetLengthNil sets the value for Length to be an explicit nil
func (o *PatchedWritableCableRequest) SetLengthNil() {
	o.Length.Set(nil)
}

// UnsetLength ensures that no value is present for Length, not even an explicit nil
func (o *PatchedWritableCableRequest) UnsetLength() {
	o.Length.Unset()
}

// GetLengthUnit returns the LengthUnit field value if set, zero value otherwise.
func (o *PatchedWritableCableRequest) GetLengthUnit() PatchedWritableCableRequestLengthUnit {
	if o == nil || IsNil(o.LengthUnit) {
		var ret PatchedWritableCableRequestLengthUnit
		return ret
	}
	return *o.LengthUnit
}

// GetLengthUnitOk returns a tuple with the LengthUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCableRequest) GetLengthUnitOk() (*PatchedWritableCableRequestLengthUnit, bool) {
	if o == nil || IsNil(o.LengthUnit) {
		return nil, false
	}
	return o.LengthUnit, true
}

// HasLengthUnit returns a boolean if a field has been set.
func (o *PatchedWritableCableRequest) HasLengthUnit() bool {
	if o != nil && !IsNil(o.LengthUnit) {
		return true
	}

	return false
}

// SetLengthUnit gets a reference to the given PatchedWritableCableRequestLengthUnit and assigns it to the LengthUnit field.
func (o *PatchedWritableCableRequest) SetLengthUnit(v PatchedWritableCableRequestLengthUnit) {
	o.LengthUnit = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PatchedWritableCableRequest) GetStatus() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Status) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCableRequest) GetStatusOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PatchedWritableCableRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given BulkWritableCableRequestStatus and assigns it to the Status field.
func (o *PatchedWritableCableRequest) SetStatus(v BulkWritableCableRequestStatus) {
	o.Status = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *PatchedWritableCableRequest) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCableRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *PatchedWritableCableRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *PatchedWritableCableRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *PatchedWritableCableRequest) GetRelationships() map[string]BulkWritableCableRequestRelationshipsValue {
	if o == nil || IsNil(o.Relationships) {
		var ret map[string]BulkWritableCableRequestRelationshipsValue
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCableRequest) GetRelationshipsOk() (*map[string]BulkWritableCableRequestRelationshipsValue, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *PatchedWritableCableRequest) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given map[string]BulkWritableCableRequestRelationshipsValue and assigns it to the Relationships field.
func (o *PatchedWritableCableRequest) SetRelationships(v map[string]BulkWritableCableRequestRelationshipsValue) {
	o.Relationships = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PatchedWritableCableRequest) GetTags() []BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Tags) {
		var ret []BulkWritableCableRequestStatus
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCableRequest) GetTagsOk() ([]BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PatchedWritableCableRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []BulkWritableCableRequestStatus and assigns it to the Tags field.
func (o *PatchedWritableCableRequest) SetTags(v []BulkWritableCableRequestStatus) {
	o.Tags = v
}

func (o PatchedWritableCableRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedWritableCableRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TerminationAType) {
		toSerialize["termination_a_type"] = o.TerminationAType
	}
	if !IsNil(o.TerminationBType) {
		toSerialize["termination_b_type"] = o.TerminationBType
	}
	if !IsNil(o.TerminationAId) {
		toSerialize["termination_a_id"] = o.TerminationAId
	}
	if !IsNil(o.TerminationBId) {
		toSerialize["termination_b_id"] = o.TerminationBId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if o.Length.IsSet() {
		toSerialize["length"] = o.Length.Get()
	}
	if !IsNil(o.LengthUnit) {
		toSerialize["length_unit"] = o.LengthUnit
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedWritableCableRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedWritableCableRequest := _PatchedWritableCableRequest{}

	err = json.Unmarshal(data, &varPatchedWritableCableRequest)

	if err != nil {
		return err
	}

	*o = PatchedWritableCableRequest(varPatchedWritableCableRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "termination_a_type")
		delete(additionalProperties, "termination_b_type")
		delete(additionalProperties, "termination_a_id")
		delete(additionalProperties, "termination_b_id")
		delete(additionalProperties, "type")
		delete(additionalProperties, "label")
		delete(additionalProperties, "color")
		delete(additionalProperties, "length")
		delete(additionalProperties, "length_unit")
		delete(additionalProperties, "status")
		delete(additionalProperties, "custom_fields")
		delete(additionalProperties, "relationships")
		delete(additionalProperties, "tags")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedWritableCableRequest struct {
	value *PatchedWritableCableRequest
	isSet bool
}

func (v NullablePatchedWritableCableRequest) Get() *PatchedWritableCableRequest {
	return v.value
}

func (v *NullablePatchedWritableCableRequest) Set(val *PatchedWritableCableRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedWritableCableRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedWritableCableRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedWritableCableRequest(val *PatchedWritableCableRequest) *NullablePatchedWritableCableRequest {
	return &NullablePatchedWritableCableRequest{value: val, isSet: true}
}

func (v NullablePatchedWritableCableRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedWritableCableRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


