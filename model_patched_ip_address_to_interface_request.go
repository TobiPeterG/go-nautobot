/*
API Documentation

Source of truth and network automation platform

API version: 2.2.5 (2.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
)

// checks if the PatchedIPAddressToInterfaceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedIPAddressToInterfaceRequest{}

// PatchedIPAddressToInterfaceRequest Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedIPAddressToInterfaceRequest struct {
	// Is source address on interface
	IsSource *bool `json:"is_source,omitempty"`
	// Is destination address on interface
	IsDestination *bool `json:"is_destination,omitempty"`
	// Is default address on interface
	IsDefault *bool `json:"is_default,omitempty"`
	// Is preferred address on interface
	IsPreferred *bool `json:"is_preferred,omitempty"`
	// Is primary address on interface
	IsPrimary *bool `json:"is_primary,omitempty"`
	// Is secondary address on interface
	IsSecondary *bool `json:"is_secondary,omitempty"`
	// Is standby address on interface
	IsStandby *bool `json:"is_standby,omitempty"`
	IpAddress *BulkWritableCableRequestStatus `json:"ip_address,omitempty"`
	Interface NullableBulkWritableCircuitRequestTenant `json:"interface,omitempty"`
	VmInterface NullableBulkWritableCircuitRequestTenant `json:"vm_interface,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedIPAddressToInterfaceRequest PatchedIPAddressToInterfaceRequest

// NewPatchedIPAddressToInterfaceRequest instantiates a new PatchedIPAddressToInterfaceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedIPAddressToInterfaceRequest() *PatchedIPAddressToInterfaceRequest {
	this := PatchedIPAddressToInterfaceRequest{}
	return &this
}

// NewPatchedIPAddressToInterfaceRequestWithDefaults instantiates a new PatchedIPAddressToInterfaceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedIPAddressToInterfaceRequestWithDefaults() *PatchedIPAddressToInterfaceRequest {
	this := PatchedIPAddressToInterfaceRequest{}
	return &this
}

// GetIsSource returns the IsSource field value if set, zero value otherwise.
func (o *PatchedIPAddressToInterfaceRequest) GetIsSource() bool {
	if o == nil || IsNil(o.IsSource) {
		var ret bool
		return ret
	}
	return *o.IsSource
}

// GetIsSourceOk returns a tuple with the IsSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedIPAddressToInterfaceRequest) GetIsSourceOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSource) {
		return nil, false
	}
	return o.IsSource, true
}

// HasIsSource returns a boolean if a field has been set.
func (o *PatchedIPAddressToInterfaceRequest) HasIsSource() bool {
	if o != nil && !IsNil(o.IsSource) {
		return true
	}

	return false
}

// SetIsSource gets a reference to the given bool and assigns it to the IsSource field.
func (o *PatchedIPAddressToInterfaceRequest) SetIsSource(v bool) {
	o.IsSource = &v
}

// GetIsDestination returns the IsDestination field value if set, zero value otherwise.
func (o *PatchedIPAddressToInterfaceRequest) GetIsDestination() bool {
	if o == nil || IsNil(o.IsDestination) {
		var ret bool
		return ret
	}
	return *o.IsDestination
}

// GetIsDestinationOk returns a tuple with the IsDestination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedIPAddressToInterfaceRequest) GetIsDestinationOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDestination) {
		return nil, false
	}
	return o.IsDestination, true
}

// HasIsDestination returns a boolean if a field has been set.
func (o *PatchedIPAddressToInterfaceRequest) HasIsDestination() bool {
	if o != nil && !IsNil(o.IsDestination) {
		return true
	}

	return false
}

// SetIsDestination gets a reference to the given bool and assigns it to the IsDestination field.
func (o *PatchedIPAddressToInterfaceRequest) SetIsDestination(v bool) {
	o.IsDestination = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *PatchedIPAddressToInterfaceRequest) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedIPAddressToInterfaceRequest) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *PatchedIPAddressToInterfaceRequest) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *PatchedIPAddressToInterfaceRequest) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetIsPreferred returns the IsPreferred field value if set, zero value otherwise.
func (o *PatchedIPAddressToInterfaceRequest) GetIsPreferred() bool {
	if o == nil || IsNil(o.IsPreferred) {
		var ret bool
		return ret
	}
	return *o.IsPreferred
}

// GetIsPreferredOk returns a tuple with the IsPreferred field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedIPAddressToInterfaceRequest) GetIsPreferredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPreferred) {
		return nil, false
	}
	return o.IsPreferred, true
}

// HasIsPreferred returns a boolean if a field has been set.
func (o *PatchedIPAddressToInterfaceRequest) HasIsPreferred() bool {
	if o != nil && !IsNil(o.IsPreferred) {
		return true
	}

	return false
}

// SetIsPreferred gets a reference to the given bool and assigns it to the IsPreferred field.
func (o *PatchedIPAddressToInterfaceRequest) SetIsPreferred(v bool) {
	o.IsPreferred = &v
}

// GetIsPrimary returns the IsPrimary field value if set, zero value otherwise.
func (o *PatchedIPAddressToInterfaceRequest) GetIsPrimary() bool {
	if o == nil || IsNil(o.IsPrimary) {
		var ret bool
		return ret
	}
	return *o.IsPrimary
}

// GetIsPrimaryOk returns a tuple with the IsPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedIPAddressToInterfaceRequest) GetIsPrimaryOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPrimary) {
		return nil, false
	}
	return o.IsPrimary, true
}

// HasIsPrimary returns a boolean if a field has been set.
func (o *PatchedIPAddressToInterfaceRequest) HasIsPrimary() bool {
	if o != nil && !IsNil(o.IsPrimary) {
		return true
	}

	return false
}

// SetIsPrimary gets a reference to the given bool and assigns it to the IsPrimary field.
func (o *PatchedIPAddressToInterfaceRequest) SetIsPrimary(v bool) {
	o.IsPrimary = &v
}

// GetIsSecondary returns the IsSecondary field value if set, zero value otherwise.
func (o *PatchedIPAddressToInterfaceRequest) GetIsSecondary() bool {
	if o == nil || IsNil(o.IsSecondary) {
		var ret bool
		return ret
	}
	return *o.IsSecondary
}

// GetIsSecondaryOk returns a tuple with the IsSecondary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedIPAddressToInterfaceRequest) GetIsSecondaryOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSecondary) {
		return nil, false
	}
	return o.IsSecondary, true
}

// HasIsSecondary returns a boolean if a field has been set.
func (o *PatchedIPAddressToInterfaceRequest) HasIsSecondary() bool {
	if o != nil && !IsNil(o.IsSecondary) {
		return true
	}

	return false
}

// SetIsSecondary gets a reference to the given bool and assigns it to the IsSecondary field.
func (o *PatchedIPAddressToInterfaceRequest) SetIsSecondary(v bool) {
	o.IsSecondary = &v
}

// GetIsStandby returns the IsStandby field value if set, zero value otherwise.
func (o *PatchedIPAddressToInterfaceRequest) GetIsStandby() bool {
	if o == nil || IsNil(o.IsStandby) {
		var ret bool
		return ret
	}
	return *o.IsStandby
}

// GetIsStandbyOk returns a tuple with the IsStandby field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedIPAddressToInterfaceRequest) GetIsStandbyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsStandby) {
		return nil, false
	}
	return o.IsStandby, true
}

// HasIsStandby returns a boolean if a field has been set.
func (o *PatchedIPAddressToInterfaceRequest) HasIsStandby() bool {
	if o != nil && !IsNil(o.IsStandby) {
		return true
	}

	return false
}

// SetIsStandby gets a reference to the given bool and assigns it to the IsStandby field.
func (o *PatchedIPAddressToInterfaceRequest) SetIsStandby(v bool) {
	o.IsStandby = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *PatchedIPAddressToInterfaceRequest) GetIpAddress() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.IpAddress) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedIPAddressToInterfaceRequest) GetIpAddressOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *PatchedIPAddressToInterfaceRequest) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given BulkWritableCableRequestStatus and assigns it to the IpAddress field.
func (o *PatchedIPAddressToInterfaceRequest) SetIpAddress(v BulkWritableCableRequestStatus) {
	o.IpAddress = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedIPAddressToInterfaceRequest) GetInterface() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.Interface.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.Interface.Get()
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedIPAddressToInterfaceRequest) GetInterfaceOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.Interface.Get(), o.Interface.IsSet()
}

// HasInterface returns a boolean if a field has been set.
func (o *PatchedIPAddressToInterfaceRequest) HasInterface() bool {
	if o != nil && o.Interface.IsSet() {
		return true
	}

	return false
}

// SetInterface gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the Interface field.
func (o *PatchedIPAddressToInterfaceRequest) SetInterface(v BulkWritableCircuitRequestTenant) {
	o.Interface.Set(&v)
}
// SetInterfaceNil sets the value for Interface to be an explicit nil
func (o *PatchedIPAddressToInterfaceRequest) SetInterfaceNil() {
	o.Interface.Set(nil)
}

// UnsetInterface ensures that no value is present for Interface, not even an explicit nil
func (o *PatchedIPAddressToInterfaceRequest) UnsetInterface() {
	o.Interface.Unset()
}

// GetVmInterface returns the VmInterface field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedIPAddressToInterfaceRequest) GetVmInterface() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.VmInterface.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.VmInterface.Get()
}

// GetVmInterfaceOk returns a tuple with the VmInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedIPAddressToInterfaceRequest) GetVmInterfaceOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.VmInterface.Get(), o.VmInterface.IsSet()
}

// HasVmInterface returns a boolean if a field has been set.
func (o *PatchedIPAddressToInterfaceRequest) HasVmInterface() bool {
	if o != nil && o.VmInterface.IsSet() {
		return true
	}

	return false
}

// SetVmInterface gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the VmInterface field.
func (o *PatchedIPAddressToInterfaceRequest) SetVmInterface(v BulkWritableCircuitRequestTenant) {
	o.VmInterface.Set(&v)
}
// SetVmInterfaceNil sets the value for VmInterface to be an explicit nil
func (o *PatchedIPAddressToInterfaceRequest) SetVmInterfaceNil() {
	o.VmInterface.Set(nil)
}

// UnsetVmInterface ensures that no value is present for VmInterface, not even an explicit nil
func (o *PatchedIPAddressToInterfaceRequest) UnsetVmInterface() {
	o.VmInterface.Unset()
}

func (o PatchedIPAddressToInterfaceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedIPAddressToInterfaceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsSource) {
		toSerialize["is_source"] = o.IsSource
	}
	if !IsNil(o.IsDestination) {
		toSerialize["is_destination"] = o.IsDestination
	}
	if !IsNil(o.IsDefault) {
		toSerialize["is_default"] = o.IsDefault
	}
	if !IsNil(o.IsPreferred) {
		toSerialize["is_preferred"] = o.IsPreferred
	}
	if !IsNil(o.IsPrimary) {
		toSerialize["is_primary"] = o.IsPrimary
	}
	if !IsNil(o.IsSecondary) {
		toSerialize["is_secondary"] = o.IsSecondary
	}
	if !IsNil(o.IsStandby) {
		toSerialize["is_standby"] = o.IsStandby
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ip_address"] = o.IpAddress
	}
	if o.Interface.IsSet() {
		toSerialize["interface"] = o.Interface.Get()
	}
	if o.VmInterface.IsSet() {
		toSerialize["vm_interface"] = o.VmInterface.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedIPAddressToInterfaceRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedIPAddressToInterfaceRequest := _PatchedIPAddressToInterfaceRequest{}

	err = json.Unmarshal(data, &varPatchedIPAddressToInterfaceRequest)

	if err != nil {
		return err
	}

	*o = PatchedIPAddressToInterfaceRequest(varPatchedIPAddressToInterfaceRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "is_source")
		delete(additionalProperties, "is_destination")
		delete(additionalProperties, "is_default")
		delete(additionalProperties, "is_preferred")
		delete(additionalProperties, "is_primary")
		delete(additionalProperties, "is_secondary")
		delete(additionalProperties, "is_standby")
		delete(additionalProperties, "ip_address")
		delete(additionalProperties, "interface")
		delete(additionalProperties, "vm_interface")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedIPAddressToInterfaceRequest struct {
	value *PatchedIPAddressToInterfaceRequest
	isSet bool
}

func (v NullablePatchedIPAddressToInterfaceRequest) Get() *PatchedIPAddressToInterfaceRequest {
	return v.value
}

func (v *NullablePatchedIPAddressToInterfaceRequest) Set(val *PatchedIPAddressToInterfaceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedIPAddressToInterfaceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedIPAddressToInterfaceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedIPAddressToInterfaceRequest(val *PatchedIPAddressToInterfaceRequest) *NullablePatchedIPAddressToInterfaceRequest {
	return &NullablePatchedIPAddressToInterfaceRequest{value: val, isSet: true}
}

func (v NullablePatchedIPAddressToInterfaceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedIPAddressToInterfaceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


