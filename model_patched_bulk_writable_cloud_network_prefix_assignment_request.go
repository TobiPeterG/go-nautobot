/*
API Documentation

Source of truth and network automation platform

API version: 2.3.1 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
	"fmt"
)

// checks if the PatchedBulkWritableCloudNetworkPrefixAssignmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedBulkWritableCloudNetworkPrefixAssignmentRequest{}

// PatchedBulkWritableCloudNetworkPrefixAssignmentRequest Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedBulkWritableCloudNetworkPrefixAssignmentRequest struct {
	Id string `json:"id"`
	CloudNetwork *BulkWritableCableRequestStatus `json:"cloud_network,omitempty"`
	Prefix *BulkWritableCableRequestStatus `json:"prefix,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedBulkWritableCloudNetworkPrefixAssignmentRequest PatchedBulkWritableCloudNetworkPrefixAssignmentRequest

// NewPatchedBulkWritableCloudNetworkPrefixAssignmentRequest instantiates a new PatchedBulkWritableCloudNetworkPrefixAssignmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedBulkWritableCloudNetworkPrefixAssignmentRequest(id string) *PatchedBulkWritableCloudNetworkPrefixAssignmentRequest {
	this := PatchedBulkWritableCloudNetworkPrefixAssignmentRequest{}
	this.Id = id
	return &this
}

// NewPatchedBulkWritableCloudNetworkPrefixAssignmentRequestWithDefaults instantiates a new PatchedBulkWritableCloudNetworkPrefixAssignmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedBulkWritableCloudNetworkPrefixAssignmentRequestWithDefaults() *PatchedBulkWritableCloudNetworkPrefixAssignmentRequest {
	this := PatchedBulkWritableCloudNetworkPrefixAssignmentRequest{}
	return &this
}

// GetId returns the Id field value
func (o *PatchedBulkWritableCloudNetworkPrefixAssignmentRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PatchedBulkWritableCloudNetworkPrefixAssignmentRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PatchedBulkWritableCloudNetworkPrefixAssignmentRequest) SetId(v string) {
	o.Id = v
}

// GetCloudNetwork returns the CloudNetwork field value if set, zero value otherwise.
func (o *PatchedBulkWritableCloudNetworkPrefixAssignmentRequest) GetCloudNetwork() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.CloudNetwork) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.CloudNetwork
}

// GetCloudNetworkOk returns a tuple with the CloudNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedBulkWritableCloudNetworkPrefixAssignmentRequest) GetCloudNetworkOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.CloudNetwork) {
		return nil, false
	}
	return o.CloudNetwork, true
}

// HasCloudNetwork returns a boolean if a field has been set.
func (o *PatchedBulkWritableCloudNetworkPrefixAssignmentRequest) HasCloudNetwork() bool {
	if o != nil && !IsNil(o.CloudNetwork) {
		return true
	}

	return false
}

// SetCloudNetwork gets a reference to the given BulkWritableCableRequestStatus and assigns it to the CloudNetwork field.
func (o *PatchedBulkWritableCloudNetworkPrefixAssignmentRequest) SetCloudNetwork(v BulkWritableCableRequestStatus) {
	o.CloudNetwork = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *PatchedBulkWritableCloudNetworkPrefixAssignmentRequest) GetPrefix() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Prefix) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedBulkWritableCloudNetworkPrefixAssignmentRequest) GetPrefixOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *PatchedBulkWritableCloudNetworkPrefixAssignmentRequest) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given BulkWritableCableRequestStatus and assigns it to the Prefix field.
func (o *PatchedBulkWritableCloudNetworkPrefixAssignmentRequest) SetPrefix(v BulkWritableCableRequestStatus) {
	o.Prefix = &v
}

func (o PatchedBulkWritableCloudNetworkPrefixAssignmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedBulkWritableCloudNetworkPrefixAssignmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.CloudNetwork) {
		toSerialize["cloud_network"] = o.CloudNetwork
	}
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedBulkWritableCloudNetworkPrefixAssignmentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPatchedBulkWritableCloudNetworkPrefixAssignmentRequest := _PatchedBulkWritableCloudNetworkPrefixAssignmentRequest{}

	err = json.Unmarshal(data, &varPatchedBulkWritableCloudNetworkPrefixAssignmentRequest)

	if err != nil {
		return err
	}

	*o = PatchedBulkWritableCloudNetworkPrefixAssignmentRequest(varPatchedBulkWritableCloudNetworkPrefixAssignmentRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "cloud_network")
		delete(additionalProperties, "prefix")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedBulkWritableCloudNetworkPrefixAssignmentRequest struct {
	value *PatchedBulkWritableCloudNetworkPrefixAssignmentRequest
	isSet bool
}

func (v NullablePatchedBulkWritableCloudNetworkPrefixAssignmentRequest) Get() *PatchedBulkWritableCloudNetworkPrefixAssignmentRequest {
	return v.value
}

func (v *NullablePatchedBulkWritableCloudNetworkPrefixAssignmentRequest) Set(val *PatchedBulkWritableCloudNetworkPrefixAssignmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedBulkWritableCloudNetworkPrefixAssignmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedBulkWritableCloudNetworkPrefixAssignmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedBulkWritableCloudNetworkPrefixAssignmentRequest(val *PatchedBulkWritableCloudNetworkPrefixAssignmentRequest) *NullablePatchedBulkWritableCloudNetworkPrefixAssignmentRequest {
	return &NullablePatchedBulkWritableCloudNetworkPrefixAssignmentRequest{value: val, isSet: true}
}

func (v NullablePatchedBulkWritableCloudNetworkPrefixAssignmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedBulkWritableCloudNetworkPrefixAssignmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


