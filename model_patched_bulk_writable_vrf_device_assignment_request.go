/*
API Documentation

Source of truth and network automation platform

API version: 2.3.1 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
	"fmt"
)

// checks if the PatchedBulkWritableVRFDeviceAssignmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedBulkWritableVRFDeviceAssignmentRequest{}

// PatchedBulkWritableVRFDeviceAssignmentRequest Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedBulkWritableVRFDeviceAssignmentRequest struct {
	Id string `json:"id"`
	// Unique route distinguisher (as defined in RFC 4364)
	Rd NullableString `json:"rd,omitempty"`
	Name *string `json:"name,omitempty"`
	Vrf *BulkWritableCableRequestStatus `json:"vrf,omitempty"`
	Device NullableBulkWritableCircuitRequestTenant `json:"device,omitempty"`
	VirtualMachine NullableBulkWritableCircuitRequestTenant `json:"virtual_machine,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedBulkWritableVRFDeviceAssignmentRequest PatchedBulkWritableVRFDeviceAssignmentRequest

// NewPatchedBulkWritableVRFDeviceAssignmentRequest instantiates a new PatchedBulkWritableVRFDeviceAssignmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedBulkWritableVRFDeviceAssignmentRequest(id string) *PatchedBulkWritableVRFDeviceAssignmentRequest {
	this := PatchedBulkWritableVRFDeviceAssignmentRequest{}
	this.Id = id
	return &this
}

// NewPatchedBulkWritableVRFDeviceAssignmentRequestWithDefaults instantiates a new PatchedBulkWritableVRFDeviceAssignmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedBulkWritableVRFDeviceAssignmentRequestWithDefaults() *PatchedBulkWritableVRFDeviceAssignmentRequest {
	this := PatchedBulkWritableVRFDeviceAssignmentRequest{}
	return &this
}

// GetId returns the Id field value
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) SetId(v string) {
	o.Id = v
}

// GetRd returns the Rd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) GetRd() string {
	if o == nil || IsNil(o.Rd.Get()) {
		var ret string
		return ret
	}
	return *o.Rd.Get()
}

// GetRdOk returns a tuple with the Rd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) GetRdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rd.Get(), o.Rd.IsSet()
}

// HasRd returns a boolean if a field has been set.
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) HasRd() bool {
	if o != nil && o.Rd.IsSet() {
		return true
	}

	return false
}

// SetRd gets a reference to the given NullableString and assigns it to the Rd field.
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) SetRd(v string) {
	o.Rd.Set(&v)
}
// SetRdNil sets the value for Rd to be an explicit nil
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) SetRdNil() {
	o.Rd.Set(nil)
}

// UnsetRd ensures that no value is present for Rd, not even an explicit nil
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) UnsetRd() {
	o.Rd.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) SetName(v string) {
	o.Name = &v
}

// GetVrf returns the Vrf field value if set, zero value otherwise.
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) GetVrf() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Vrf) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.Vrf
}

// GetVrfOk returns a tuple with the Vrf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) GetVrfOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Vrf) {
		return nil, false
	}
	return o.Vrf, true
}

// HasVrf returns a boolean if a field has been set.
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) HasVrf() bool {
	if o != nil && !IsNil(o.Vrf) {
		return true
	}

	return false
}

// SetVrf gets a reference to the given BulkWritableCableRequestStatus and assigns it to the Vrf field.
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) SetVrf(v BulkWritableCableRequestStatus) {
	o.Vrf = &v
}

// GetDevice returns the Device field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) GetDevice() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.Device.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.Device.Get()
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) GetDeviceOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.Device.Get(), o.Device.IsSet()
}

// HasDevice returns a boolean if a field has been set.
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) HasDevice() bool {
	if o != nil && o.Device.IsSet() {
		return true
	}

	return false
}

// SetDevice gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the Device field.
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) SetDevice(v BulkWritableCircuitRequestTenant) {
	o.Device.Set(&v)
}
// SetDeviceNil sets the value for Device to be an explicit nil
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) SetDeviceNil() {
	o.Device.Set(nil)
}

// UnsetDevice ensures that no value is present for Device, not even an explicit nil
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) UnsetDevice() {
	o.Device.Unset()
}

// GetVirtualMachine returns the VirtualMachine field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) GetVirtualMachine() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.VirtualMachine.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.VirtualMachine.Get()
}

// GetVirtualMachineOk returns a tuple with the VirtualMachine field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) GetVirtualMachineOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.VirtualMachine.Get(), o.VirtualMachine.IsSet()
}

// HasVirtualMachine returns a boolean if a field has been set.
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) HasVirtualMachine() bool {
	if o != nil && o.VirtualMachine.IsSet() {
		return true
	}

	return false
}

// SetVirtualMachine gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the VirtualMachine field.
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) SetVirtualMachine(v BulkWritableCircuitRequestTenant) {
	o.VirtualMachine.Set(&v)
}
// SetVirtualMachineNil sets the value for VirtualMachine to be an explicit nil
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) SetVirtualMachineNil() {
	o.VirtualMachine.Set(nil)
}

// UnsetVirtualMachine ensures that no value is present for VirtualMachine, not even an explicit nil
func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) UnsetVirtualMachine() {
	o.VirtualMachine.Unset()
}

func (o PatchedBulkWritableVRFDeviceAssignmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedBulkWritableVRFDeviceAssignmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Rd.IsSet() {
		toSerialize["rd"] = o.Rd.Get()
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Vrf) {
		toSerialize["vrf"] = o.Vrf
	}
	if o.Device.IsSet() {
		toSerialize["device"] = o.Device.Get()
	}
	if o.VirtualMachine.IsSet() {
		toSerialize["virtual_machine"] = o.VirtualMachine.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedBulkWritableVRFDeviceAssignmentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPatchedBulkWritableVRFDeviceAssignmentRequest := _PatchedBulkWritableVRFDeviceAssignmentRequest{}

	err = json.Unmarshal(data, &varPatchedBulkWritableVRFDeviceAssignmentRequest)

	if err != nil {
		return err
	}

	*o = PatchedBulkWritableVRFDeviceAssignmentRequest(varPatchedBulkWritableVRFDeviceAssignmentRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "rd")
		delete(additionalProperties, "name")
		delete(additionalProperties, "vrf")
		delete(additionalProperties, "device")
		delete(additionalProperties, "virtual_machine")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedBulkWritableVRFDeviceAssignmentRequest struct {
	value *PatchedBulkWritableVRFDeviceAssignmentRequest
	isSet bool
}

func (v NullablePatchedBulkWritableVRFDeviceAssignmentRequest) Get() *PatchedBulkWritableVRFDeviceAssignmentRequest {
	return v.value
}

func (v *NullablePatchedBulkWritableVRFDeviceAssignmentRequest) Set(val *PatchedBulkWritableVRFDeviceAssignmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedBulkWritableVRFDeviceAssignmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedBulkWritableVRFDeviceAssignmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedBulkWritableVRFDeviceAssignmentRequest(val *PatchedBulkWritableVRFDeviceAssignmentRequest) *NullablePatchedBulkWritableVRFDeviceAssignmentRequest {
	return &NullablePatchedBulkWritableVRFDeviceAssignmentRequest{value: val, isSet: true}
}

func (v NullablePatchedBulkWritableVRFDeviceAssignmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedBulkWritableVRFDeviceAssignmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


