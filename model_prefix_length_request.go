/*
API Documentation

Source of truth and network automation platform

API version: 2.3.1 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the PrefixLengthRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrefixLengthRequest{}

// PrefixLengthRequest Input serializer for POST to /api/ipam/prefixes/<id>/available-prefixes/, i.e. allocating one or more sub-prefixes.  Since setting of multiple locations on create is not supported, this uses the legacy single-location option.
type PrefixLengthRequest struct {
	PrefixLength int32 `json:"prefix_length"`
	Type *PrefixTypeChoices `json:"type,omitempty"`
	Status BulkWritableCableRequestStatus `json:"status"`
	Role NullableBulkWritableCircuitRequestTenant `json:"role,omitempty"`
	Location NullableBulkWritableCircuitRequestTenant `json:"location,omitempty"`
	Tenant NullableBulkWritableCircuitRequestTenant `json:"tenant,omitempty"`
	Vlan NullableBulkWritableCircuitRequestTenant `json:"vlan,omitempty"`
	Rir NullableBulkWritablePrefixRequestRir `json:"rir,omitempty"`
	// Date this prefix was allocated to an RIR, reserved in IPAM, etc.
	DateAllocated NullableTime `json:"date_allocated,omitempty"`
	Description *string `json:"description,omitempty"`
	Tags []BulkWritableCableRequestStatus `json:"tags,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	Relationships *map[string]BulkWritableCableRequestRelationshipsValue `json:"relationships,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PrefixLengthRequest PrefixLengthRequest

// NewPrefixLengthRequest instantiates a new PrefixLengthRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrefixLengthRequest(prefixLength int32, status BulkWritableCableRequestStatus) *PrefixLengthRequest {
	this := PrefixLengthRequest{}
	this.PrefixLength = prefixLength
	var type_ PrefixTypeChoices = "{\"value\":\"network\",\"label\":\"Network\"}"
	this.Type = &type_
	this.Status = status
	return &this
}

// NewPrefixLengthRequestWithDefaults instantiates a new PrefixLengthRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrefixLengthRequestWithDefaults() *PrefixLengthRequest {
	this := PrefixLengthRequest{}
	var type_ PrefixTypeChoices = "{\"value\":\"network\",\"label\":\"Network\"}"
	this.Type = &type_
	return &this
}

// GetPrefixLength returns the PrefixLength field value
func (o *PrefixLengthRequest) GetPrefixLength() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PrefixLength
}

// GetPrefixLengthOk returns a tuple with the PrefixLength field value
// and a boolean to check if the value has been set.
func (o *PrefixLengthRequest) GetPrefixLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrefixLength, true
}

// SetPrefixLength sets field value
func (o *PrefixLengthRequest) SetPrefixLength(v int32) {
	o.PrefixLength = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PrefixLengthRequest) GetType() PrefixTypeChoices {
	if o == nil || IsNil(o.Type) {
		var ret PrefixTypeChoices
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrefixLengthRequest) GetTypeOk() (*PrefixTypeChoices, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PrefixLengthRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given PrefixTypeChoices and assigns it to the Type field.
func (o *PrefixLengthRequest) SetType(v PrefixTypeChoices) {
	o.Type = &v
}

// GetStatus returns the Status field value
func (o *PrefixLengthRequest) GetStatus() BulkWritableCableRequestStatus {
	if o == nil {
		var ret BulkWritableCableRequestStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PrefixLengthRequest) GetStatusOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PrefixLengthRequest) SetStatus(v BulkWritableCableRequestStatus) {
	o.Status = v
}

// GetRole returns the Role field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrefixLengthRequest) GetRole() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.Role.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.Role.Get()
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrefixLengthRequest) GetRoleOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.Role.Get(), o.Role.IsSet()
}

// HasRole returns a boolean if a field has been set.
func (o *PrefixLengthRequest) HasRole() bool {
	if o != nil && o.Role.IsSet() {
		return true
	}

	return false
}

// SetRole gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the Role field.
func (o *PrefixLengthRequest) SetRole(v BulkWritableCircuitRequestTenant) {
	o.Role.Set(&v)
}
// SetRoleNil sets the value for Role to be an explicit nil
func (o *PrefixLengthRequest) SetRoleNil() {
	o.Role.Set(nil)
}

// UnsetRole ensures that no value is present for Role, not even an explicit nil
func (o *PrefixLengthRequest) UnsetRole() {
	o.Role.Unset()
}

// GetLocation returns the Location field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrefixLengthRequest) GetLocation() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.Location.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.Location.Get()
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrefixLengthRequest) GetLocationOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.Location.Get(), o.Location.IsSet()
}

// HasLocation returns a boolean if a field has been set.
func (o *PrefixLengthRequest) HasLocation() bool {
	if o != nil && o.Location.IsSet() {
		return true
	}

	return false
}

// SetLocation gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the Location field.
func (o *PrefixLengthRequest) SetLocation(v BulkWritableCircuitRequestTenant) {
	o.Location.Set(&v)
}
// SetLocationNil sets the value for Location to be an explicit nil
func (o *PrefixLengthRequest) SetLocationNil() {
	o.Location.Set(nil)
}

// UnsetLocation ensures that no value is present for Location, not even an explicit nil
func (o *PrefixLengthRequest) UnsetLocation() {
	o.Location.Unset()
}

// GetTenant returns the Tenant field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrefixLengthRequest) GetTenant() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.Tenant.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.Tenant.Get()
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrefixLengthRequest) GetTenantOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tenant.Get(), o.Tenant.IsSet()
}

// HasTenant returns a boolean if a field has been set.
func (o *PrefixLengthRequest) HasTenant() bool {
	if o != nil && o.Tenant.IsSet() {
		return true
	}

	return false
}

// SetTenant gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the Tenant field.
func (o *PrefixLengthRequest) SetTenant(v BulkWritableCircuitRequestTenant) {
	o.Tenant.Set(&v)
}
// SetTenantNil sets the value for Tenant to be an explicit nil
func (o *PrefixLengthRequest) SetTenantNil() {
	o.Tenant.Set(nil)
}

// UnsetTenant ensures that no value is present for Tenant, not even an explicit nil
func (o *PrefixLengthRequest) UnsetTenant() {
	o.Tenant.Unset()
}

// GetVlan returns the Vlan field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrefixLengthRequest) GetVlan() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.Vlan.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.Vlan.Get()
}

// GetVlanOk returns a tuple with the Vlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrefixLengthRequest) GetVlanOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.Vlan.Get(), o.Vlan.IsSet()
}

// HasVlan returns a boolean if a field has been set.
func (o *PrefixLengthRequest) HasVlan() bool {
	if o != nil && o.Vlan.IsSet() {
		return true
	}

	return false
}

// SetVlan gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the Vlan field.
func (o *PrefixLengthRequest) SetVlan(v BulkWritableCircuitRequestTenant) {
	o.Vlan.Set(&v)
}
// SetVlanNil sets the value for Vlan to be an explicit nil
func (o *PrefixLengthRequest) SetVlanNil() {
	o.Vlan.Set(nil)
}

// UnsetVlan ensures that no value is present for Vlan, not even an explicit nil
func (o *PrefixLengthRequest) UnsetVlan() {
	o.Vlan.Unset()
}

// GetRir returns the Rir field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrefixLengthRequest) GetRir() BulkWritablePrefixRequestRir {
	if o == nil || IsNil(o.Rir.Get()) {
		var ret BulkWritablePrefixRequestRir
		return ret
	}
	return *o.Rir.Get()
}

// GetRirOk returns a tuple with the Rir field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrefixLengthRequest) GetRirOk() (*BulkWritablePrefixRequestRir, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rir.Get(), o.Rir.IsSet()
}

// HasRir returns a boolean if a field has been set.
func (o *PrefixLengthRequest) HasRir() bool {
	if o != nil && o.Rir.IsSet() {
		return true
	}

	return false
}

// SetRir gets a reference to the given NullableBulkWritablePrefixRequestRir and assigns it to the Rir field.
func (o *PrefixLengthRequest) SetRir(v BulkWritablePrefixRequestRir) {
	o.Rir.Set(&v)
}
// SetRirNil sets the value for Rir to be an explicit nil
func (o *PrefixLengthRequest) SetRirNil() {
	o.Rir.Set(nil)
}

// UnsetRir ensures that no value is present for Rir, not even an explicit nil
func (o *PrefixLengthRequest) UnsetRir() {
	o.Rir.Unset()
}

// GetDateAllocated returns the DateAllocated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrefixLengthRequest) GetDateAllocated() time.Time {
	if o == nil || IsNil(o.DateAllocated.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DateAllocated.Get()
}

// GetDateAllocatedOk returns a tuple with the DateAllocated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrefixLengthRequest) GetDateAllocatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateAllocated.Get(), o.DateAllocated.IsSet()
}

// HasDateAllocated returns a boolean if a field has been set.
func (o *PrefixLengthRequest) HasDateAllocated() bool {
	if o != nil && o.DateAllocated.IsSet() {
		return true
	}

	return false
}

// SetDateAllocated gets a reference to the given NullableTime and assigns it to the DateAllocated field.
func (o *PrefixLengthRequest) SetDateAllocated(v time.Time) {
	o.DateAllocated.Set(&v)
}
// SetDateAllocatedNil sets the value for DateAllocated to be an explicit nil
func (o *PrefixLengthRequest) SetDateAllocatedNil() {
	o.DateAllocated.Set(nil)
}

// UnsetDateAllocated ensures that no value is present for DateAllocated, not even an explicit nil
func (o *PrefixLengthRequest) UnsetDateAllocated() {
	o.DateAllocated.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PrefixLengthRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrefixLengthRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PrefixLengthRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PrefixLengthRequest) SetDescription(v string) {
	o.Description = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PrefixLengthRequest) GetTags() []BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Tags) {
		var ret []BulkWritableCableRequestStatus
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrefixLengthRequest) GetTagsOk() ([]BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PrefixLengthRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []BulkWritableCableRequestStatus and assigns it to the Tags field.
func (o *PrefixLengthRequest) SetTags(v []BulkWritableCableRequestStatus) {
	o.Tags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *PrefixLengthRequest) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrefixLengthRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *PrefixLengthRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *PrefixLengthRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *PrefixLengthRequest) GetRelationships() map[string]BulkWritableCableRequestRelationshipsValue {
	if o == nil || IsNil(o.Relationships) {
		var ret map[string]BulkWritableCableRequestRelationshipsValue
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrefixLengthRequest) GetRelationshipsOk() (*map[string]BulkWritableCableRequestRelationshipsValue, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *PrefixLengthRequest) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given map[string]BulkWritableCableRequestRelationshipsValue and assigns it to the Relationships field.
func (o *PrefixLengthRequest) SetRelationships(v map[string]BulkWritableCableRequestRelationshipsValue) {
	o.Relationships = &v
}

func (o PrefixLengthRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrefixLengthRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["prefix_length"] = o.PrefixLength
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	toSerialize["status"] = o.Status
	if o.Role.IsSet() {
		toSerialize["role"] = o.Role.Get()
	}
	if o.Location.IsSet() {
		toSerialize["location"] = o.Location.Get()
	}
	if o.Tenant.IsSet() {
		toSerialize["tenant"] = o.Tenant.Get()
	}
	if o.Vlan.IsSet() {
		toSerialize["vlan"] = o.Vlan.Get()
	}
	if o.Rir.IsSet() {
		toSerialize["rir"] = o.Rir.Get()
	}
	if o.DateAllocated.IsSet() {
		toSerialize["date_allocated"] = o.DateAllocated.Get()
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PrefixLengthRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"prefix_length",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPrefixLengthRequest := _PrefixLengthRequest{}

	err = json.Unmarshal(data, &varPrefixLengthRequest)

	if err != nil {
		return err
	}

	*o = PrefixLengthRequest(varPrefixLengthRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "prefix_length")
		delete(additionalProperties, "type")
		delete(additionalProperties, "status")
		delete(additionalProperties, "role")
		delete(additionalProperties, "location")
		delete(additionalProperties, "tenant")
		delete(additionalProperties, "vlan")
		delete(additionalProperties, "rir")
		delete(additionalProperties, "date_allocated")
		delete(additionalProperties, "description")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "custom_fields")
		delete(additionalProperties, "relationships")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePrefixLengthRequest struct {
	value *PrefixLengthRequest
	isSet bool
}

func (v NullablePrefixLengthRequest) Get() *PrefixLengthRequest {
	return v.value
}

func (v *NullablePrefixLengthRequest) Set(val *PrefixLengthRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePrefixLengthRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePrefixLengthRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrefixLengthRequest(val *PrefixLengthRequest) *NullablePrefixLengthRequest {
	return &NullablePrefixLengthRequest{value: val, isSet: true}
}

func (v NullablePrefixLengthRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrefixLengthRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


