/*
 * API Documentation
 *
 * Source of truth and network automation platform
 *
 * API version: 2.2.5 (2.2)
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package nautobot
import (
	"time"
)

type AllOfJobRunResponseSchedule struct {
	Id string `json:"id"`
	ObjectType string `json:"object_type"`
	// Human friendly display value
	Display string `json:"display"`
	Url string `json:"url"`
	NaturalSlug string `json:"natural_slug"`
	// Human-readable description of this scheduled task
	Name string `json:"name"`
	// The name of the Celery task that should be run. (Example: \"proj.tasks.import_contacts\")
	Task string `json:"task"`
	Interval *JobExecutionTypeIntervalChoices `json:"interval"`
	Args map[string]Object `json:"args,omitempty"`
	Kwargs map[string]Object `json:"kwargs,omitempty"`
	CeleryKwargs map[string]Object `json:"celery_kwargs,omitempty"`
	// Queue defined in CELERY_TASK_QUEUES. Leave empty for default queuing.
	Queue string `json:"queue,omitempty"`
	// If True, the schedule will only run the task a single time
	OneOff bool `json:"one_off,omitempty"`
	// Datetime when the schedule should begin triggering the task to run
	StartTime time.Time `json:"start_time"`
	// Set to False to disable the schedule
	Enabled bool `json:"enabled,omitempty"`
	// Datetime that the schedule last triggered the task to run. Reset to None if enabled is set to False.
	LastRunAt time.Time `json:"last_run_at"`
	// Running count of how many times the schedule has triggered the task
	TotalRunCount int32 `json:"total_run_count"`
	// Datetime that this scheduled job was last modified
	DateChanged time.Time `json:"date_changed"`
	// Detailed description about the details of this scheduled job
	Description string `json:"description,omitempty"`
	ApprovalRequired bool `json:"approval_required,omitempty"`
	// Datetime that the schedule was approved
	ApprovedAt time.Time `json:"approved_at"`
	// Cronjob syntax string for custom scheduling
	Crontab string `json:"crontab,omitempty"`
	JobModel *BulkWritableCircuitRequestTenant `json:"job_model,omitempty"`
	User *ScheduledJobUser `json:"user,omitempty"`
	ApprovedByUser *ScheduledJobApprovedByUser `json:"approved_by_user,omitempty"`
}
