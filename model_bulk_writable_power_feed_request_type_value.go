/*
API Documentation

Source of truth and network automation platform

API version: 2.2.5 (2.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
	"fmt"
)

// BulkWritablePowerFeedRequestTypeValue the model 'BulkWritablePowerFeedRequestTypeValue'
type BulkWritablePowerFeedRequestTypeValue string

// List of BulkWritablePowerFeedRequest_type_value
const (
	BULKWRITABLEPOWERFEEDREQUESTTYPEVALUE_PRIMARY BulkWritablePowerFeedRequestTypeValue = "primary"
	BULKWRITABLEPOWERFEEDREQUESTTYPEVALUE_SECONDARY BulkWritablePowerFeedRequestTypeValue = "secondary"
)

// All allowed values of BulkWritablePowerFeedRequestTypeValue enum
var AllowedBulkWritablePowerFeedRequestTypeValueEnumValues = []BulkWritablePowerFeedRequestTypeValue{
	"primary",
	"secondary",
}

func (v *BulkWritablePowerFeedRequestTypeValue) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := BulkWritablePowerFeedRequestTypeValue(value)
	for _, existing := range AllowedBulkWritablePowerFeedRequestTypeValueEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid BulkWritablePowerFeedRequestTypeValue", value)
}

// NewBulkWritablePowerFeedRequestTypeValueFromValue returns a pointer to a valid BulkWritablePowerFeedRequestTypeValue
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBulkWritablePowerFeedRequestTypeValueFromValue(v string) (*BulkWritablePowerFeedRequestTypeValue, error) {
	ev := BulkWritablePowerFeedRequestTypeValue(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BulkWritablePowerFeedRequestTypeValue: valid values are %v", v, AllowedBulkWritablePowerFeedRequestTypeValueEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BulkWritablePowerFeedRequestTypeValue) IsValid() bool {
	for _, existing := range AllowedBulkWritablePowerFeedRequestTypeValueEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BulkWritablePowerFeedRequest_type_value value
func (v BulkWritablePowerFeedRequestTypeValue) Ptr() *BulkWritablePowerFeedRequestTypeValue {
	return &v
}

type NullableBulkWritablePowerFeedRequestTypeValue struct {
	value *BulkWritablePowerFeedRequestTypeValue
	isSet bool
}

func (v NullableBulkWritablePowerFeedRequestTypeValue) Get() *BulkWritablePowerFeedRequestTypeValue {
	return v.value
}

func (v *NullableBulkWritablePowerFeedRequestTypeValue) Set(val *BulkWritablePowerFeedRequestTypeValue) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkWritablePowerFeedRequestTypeValue) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkWritablePowerFeedRequestTypeValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkWritablePowerFeedRequestTypeValue(val *BulkWritablePowerFeedRequestTypeValue) *NullableBulkWritablePowerFeedRequestTypeValue {
	return &NullableBulkWritablePowerFeedRequestTypeValue{value: val, isSet: true}
}

func (v NullableBulkWritablePowerFeedRequestTypeValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkWritablePowerFeedRequestTypeValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

