/*
API Documentation

Source of truth and network automation platform

API version: 2.2.5 (2.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
	"fmt"
)

// BulkWritablePowerFeedRequestSupplyLabel the model 'BulkWritablePowerFeedRequestSupplyLabel'
type BulkWritablePowerFeedRequestSupplyLabel string

// List of BulkWritablePowerFeedRequest_supply_label
const (
	BULKWRITABLEPOWERFEEDREQUESTSUPPLYLABEL_AC BulkWritablePowerFeedRequestSupplyLabel = "AC"
	BULKWRITABLEPOWERFEEDREQUESTSUPPLYLABEL_DC BulkWritablePowerFeedRequestSupplyLabel = "DC"
)

// All allowed values of BulkWritablePowerFeedRequestSupplyLabel enum
var AllowedBulkWritablePowerFeedRequestSupplyLabelEnumValues = []BulkWritablePowerFeedRequestSupplyLabel{
	"AC",
	"DC",
}

func (v *BulkWritablePowerFeedRequestSupplyLabel) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := BulkWritablePowerFeedRequestSupplyLabel(value)
	for _, existing := range AllowedBulkWritablePowerFeedRequestSupplyLabelEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid BulkWritablePowerFeedRequestSupplyLabel", value)
}

// NewBulkWritablePowerFeedRequestSupplyLabelFromValue returns a pointer to a valid BulkWritablePowerFeedRequestSupplyLabel
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBulkWritablePowerFeedRequestSupplyLabelFromValue(v string) (*BulkWritablePowerFeedRequestSupplyLabel, error) {
	ev := BulkWritablePowerFeedRequestSupplyLabel(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BulkWritablePowerFeedRequestSupplyLabel: valid values are %v", v, AllowedBulkWritablePowerFeedRequestSupplyLabelEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BulkWritablePowerFeedRequestSupplyLabel) IsValid() bool {
	for _, existing := range AllowedBulkWritablePowerFeedRequestSupplyLabelEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BulkWritablePowerFeedRequest_supply_label value
func (v BulkWritablePowerFeedRequestSupplyLabel) Ptr() *BulkWritablePowerFeedRequestSupplyLabel {
	return &v
}

type NullableBulkWritablePowerFeedRequestSupplyLabel struct {
	value *BulkWritablePowerFeedRequestSupplyLabel
	isSet bool
}

func (v NullableBulkWritablePowerFeedRequestSupplyLabel) Get() *BulkWritablePowerFeedRequestSupplyLabel {
	return v.value
}

func (v *NullableBulkWritablePowerFeedRequestSupplyLabel) Set(val *BulkWritablePowerFeedRequestSupplyLabel) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkWritablePowerFeedRequestSupplyLabel) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkWritablePowerFeedRequestSupplyLabel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkWritablePowerFeedRequestSupplyLabel(val *BulkWritablePowerFeedRequestSupplyLabel) *NullableBulkWritablePowerFeedRequestSupplyLabel {
	return &NullableBulkWritablePowerFeedRequestSupplyLabel{value: val, isSet: true}
}

func (v NullableBulkWritablePowerFeedRequestSupplyLabel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkWritablePowerFeedRequestSupplyLabel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

