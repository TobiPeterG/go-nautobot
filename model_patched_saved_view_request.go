/*
API Documentation

Source of truth and network automation platform

API version: 2.3.1 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
)

// checks if the PatchedSavedViewRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedSavedViewRequest{}

// PatchedSavedViewRequest Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedSavedViewRequest struct {
	// The name of this view
	Name *string `json:"name,omitempty"`
	// The name of the list view that the saved view is derived from, e.g. dcim:device_list
	View *string `json:"view,omitempty"`
	// Saved Configuration on this view
	Config interface{} `json:"config,omitempty"`
	IsGlobalDefault *bool `json:"is_global_default,omitempty"`
	IsShared *bool `json:"is_shared,omitempty"`
	Owner *BulkWritableSavedViewRequestOwner `json:"owner,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedSavedViewRequest PatchedSavedViewRequest

// NewPatchedSavedViewRequest instantiates a new PatchedSavedViewRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedSavedViewRequest() *PatchedSavedViewRequest {
	this := PatchedSavedViewRequest{}
	return &this
}

// NewPatchedSavedViewRequestWithDefaults instantiates a new PatchedSavedViewRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedSavedViewRequestWithDefaults() *PatchedSavedViewRequest {
	this := PatchedSavedViewRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedSavedViewRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSavedViewRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedSavedViewRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedSavedViewRequest) SetName(v string) {
	o.Name = &v
}

// GetView returns the View field value if set, zero value otherwise.
func (o *PatchedSavedViewRequest) GetView() string {
	if o == nil || IsNil(o.View) {
		var ret string
		return ret
	}
	return *o.View
}

// GetViewOk returns a tuple with the View field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSavedViewRequest) GetViewOk() (*string, bool) {
	if o == nil || IsNil(o.View) {
		return nil, false
	}
	return o.View, true
}

// HasView returns a boolean if a field has been set.
func (o *PatchedSavedViewRequest) HasView() bool {
	if o != nil && !IsNil(o.View) {
		return true
	}

	return false
}

// SetView gets a reference to the given string and assigns it to the View field.
func (o *PatchedSavedViewRequest) SetView(v string) {
	o.View = &v
}

// GetConfig returns the Config field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedSavedViewRequest) GetConfig() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedSavedViewRequest) GetConfigOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return &o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *PatchedSavedViewRequest) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given interface{} and assigns it to the Config field.
func (o *PatchedSavedViewRequest) SetConfig(v interface{}) {
	o.Config = v
}

// GetIsGlobalDefault returns the IsGlobalDefault field value if set, zero value otherwise.
func (o *PatchedSavedViewRequest) GetIsGlobalDefault() bool {
	if o == nil || IsNil(o.IsGlobalDefault) {
		var ret bool
		return ret
	}
	return *o.IsGlobalDefault
}

// GetIsGlobalDefaultOk returns a tuple with the IsGlobalDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSavedViewRequest) GetIsGlobalDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsGlobalDefault) {
		return nil, false
	}
	return o.IsGlobalDefault, true
}

// HasIsGlobalDefault returns a boolean if a field has been set.
func (o *PatchedSavedViewRequest) HasIsGlobalDefault() bool {
	if o != nil && !IsNil(o.IsGlobalDefault) {
		return true
	}

	return false
}

// SetIsGlobalDefault gets a reference to the given bool and assigns it to the IsGlobalDefault field.
func (o *PatchedSavedViewRequest) SetIsGlobalDefault(v bool) {
	o.IsGlobalDefault = &v
}

// GetIsShared returns the IsShared field value if set, zero value otherwise.
func (o *PatchedSavedViewRequest) GetIsShared() bool {
	if o == nil || IsNil(o.IsShared) {
		var ret bool
		return ret
	}
	return *o.IsShared
}

// GetIsSharedOk returns a tuple with the IsShared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSavedViewRequest) GetIsSharedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsShared) {
		return nil, false
	}
	return o.IsShared, true
}

// HasIsShared returns a boolean if a field has been set.
func (o *PatchedSavedViewRequest) HasIsShared() bool {
	if o != nil && !IsNil(o.IsShared) {
		return true
	}

	return false
}

// SetIsShared gets a reference to the given bool and assigns it to the IsShared field.
func (o *PatchedSavedViewRequest) SetIsShared(v bool) {
	o.IsShared = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *PatchedSavedViewRequest) GetOwner() BulkWritableSavedViewRequestOwner {
	if o == nil || IsNil(o.Owner) {
		var ret BulkWritableSavedViewRequestOwner
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSavedViewRequest) GetOwnerOk() (*BulkWritableSavedViewRequestOwner, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *PatchedSavedViewRequest) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given BulkWritableSavedViewRequestOwner and assigns it to the Owner field.
func (o *PatchedSavedViewRequest) SetOwner(v BulkWritableSavedViewRequestOwner) {
	o.Owner = &v
}

func (o PatchedSavedViewRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedSavedViewRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.View) {
		toSerialize["view"] = o.View
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.IsGlobalDefault) {
		toSerialize["is_global_default"] = o.IsGlobalDefault
	}
	if !IsNil(o.IsShared) {
		toSerialize["is_shared"] = o.IsShared
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedSavedViewRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedSavedViewRequest := _PatchedSavedViewRequest{}

	err = json.Unmarshal(data, &varPatchedSavedViewRequest)

	if err != nil {
		return err
	}

	*o = PatchedSavedViewRequest(varPatchedSavedViewRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "view")
		delete(additionalProperties, "config")
		delete(additionalProperties, "is_global_default")
		delete(additionalProperties, "is_shared")
		delete(additionalProperties, "owner")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedSavedViewRequest struct {
	value *PatchedSavedViewRequest
	isSet bool
}

func (v NullablePatchedSavedViewRequest) Get() *PatchedSavedViewRequest {
	return v.value
}

func (v *NullablePatchedSavedViewRequest) Set(val *PatchedSavedViewRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedSavedViewRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedSavedViewRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedSavedViewRequest(val *PatchedSavedViewRequest) *NullablePatchedSavedViewRequest {
	return &NullablePatchedSavedViewRequest{value: val, isSet: true}
}

func (v NullablePatchedSavedViewRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedSavedViewRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


