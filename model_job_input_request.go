/*
API Documentation

Source of truth and network automation platform

API version: 2.3.2 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
)

// checks if the JobInputRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobInputRequest{}

// JobInputRequest struct for JobInputRequest
type JobInputRequest struct {
	Data interface{} `json:"data,omitempty"`
	Schedule *JobCreationRequest `json:"schedule,omitempty"`
	TaskQueue *string `json:"task_queue,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _JobInputRequest JobInputRequest

// NewJobInputRequest instantiates a new JobInputRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobInputRequest() *JobInputRequest {
	this := JobInputRequest{}
	return &this
}

// NewJobInputRequestWithDefaults instantiates a new JobInputRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobInputRequestWithDefaults() *JobInputRequest {
	this := JobInputRequest{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobInputRequest) GetData() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobInputRequest) GetDataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return &o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *JobInputRequest) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given interface{} and assigns it to the Data field.
func (o *JobInputRequest) SetData(v interface{}) {
	o.Data = v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *JobInputRequest) GetSchedule() JobCreationRequest {
	if o == nil || IsNil(o.Schedule) {
		var ret JobCreationRequest
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInputRequest) GetScheduleOk() (*JobCreationRequest, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *JobInputRequest) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given JobCreationRequest and assigns it to the Schedule field.
func (o *JobInputRequest) SetSchedule(v JobCreationRequest) {
	o.Schedule = &v
}

// GetTaskQueue returns the TaskQueue field value if set, zero value otherwise.
func (o *JobInputRequest) GetTaskQueue() string {
	if o == nil || IsNil(o.TaskQueue) {
		var ret string
		return ret
	}
	return *o.TaskQueue
}

// GetTaskQueueOk returns a tuple with the TaskQueue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInputRequest) GetTaskQueueOk() (*string, bool) {
	if o == nil || IsNil(o.TaskQueue) {
		return nil, false
	}
	return o.TaskQueue, true
}

// HasTaskQueue returns a boolean if a field has been set.
func (o *JobInputRequest) HasTaskQueue() bool {
	if o != nil && !IsNil(o.TaskQueue) {
		return true
	}

	return false
}

// SetTaskQueue gets a reference to the given string and assigns it to the TaskQueue field.
func (o *JobInputRequest) SetTaskQueue(v string) {
	o.TaskQueue = &v
}

func (o JobInputRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobInputRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.TaskQueue) {
		toSerialize["task_queue"] = o.TaskQueue
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *JobInputRequest) UnmarshalJSON(data []byte) (err error) {
	varJobInputRequest := _JobInputRequest{}

	err = json.Unmarshal(data, &varJobInputRequest)

	if err != nil {
		return err
	}

	*o = JobInputRequest(varJobInputRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "data")
		delete(additionalProperties, "schedule")
		delete(additionalProperties, "task_queue")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableJobInputRequest struct {
	value *JobInputRequest
	isSet bool
}

func (v NullableJobInputRequest) Get() *JobInputRequest {
	return v.value
}

func (v *NullableJobInputRequest) Set(val *JobInputRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableJobInputRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableJobInputRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobInputRequest(val *JobInputRequest) *NullableJobInputRequest {
	return &NullableJobInputRequest{value: val, isSet: true}
}

func (v NullableJobInputRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobInputRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


