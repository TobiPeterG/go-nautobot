/*
API Documentation

Source of truth and network automation platform

API version: 2.3.1 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
	"fmt"
)

// checks if the BulkWritableVRFPrefixAssignmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkWritableVRFPrefixAssignmentRequest{}

// BulkWritableVRFPrefixAssignmentRequest Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type BulkWritableVRFPrefixAssignmentRequest struct {
	Id string `json:"id"`
	Vrf BulkWritableCableRequestStatus `json:"vrf"`
	Prefix BulkWritableCableRequestStatus `json:"prefix"`
	AdditionalProperties map[string]interface{}
}

type _BulkWritableVRFPrefixAssignmentRequest BulkWritableVRFPrefixAssignmentRequest

// NewBulkWritableVRFPrefixAssignmentRequest instantiates a new BulkWritableVRFPrefixAssignmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkWritableVRFPrefixAssignmentRequest(id string, vrf BulkWritableCableRequestStatus, prefix BulkWritableCableRequestStatus) *BulkWritableVRFPrefixAssignmentRequest {
	this := BulkWritableVRFPrefixAssignmentRequest{}
	this.Id = id
	this.Vrf = vrf
	this.Prefix = prefix
	return &this
}

// NewBulkWritableVRFPrefixAssignmentRequestWithDefaults instantiates a new BulkWritableVRFPrefixAssignmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkWritableVRFPrefixAssignmentRequestWithDefaults() *BulkWritableVRFPrefixAssignmentRequest {
	this := BulkWritableVRFPrefixAssignmentRequest{}
	return &this
}

// GetId returns the Id field value
func (o *BulkWritableVRFPrefixAssignmentRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BulkWritableVRFPrefixAssignmentRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BulkWritableVRFPrefixAssignmentRequest) SetId(v string) {
	o.Id = v
}

// GetVrf returns the Vrf field value
func (o *BulkWritableVRFPrefixAssignmentRequest) GetVrf() BulkWritableCableRequestStatus {
	if o == nil {
		var ret BulkWritableCableRequestStatus
		return ret
	}

	return o.Vrf
}

// GetVrfOk returns a tuple with the Vrf field value
// and a boolean to check if the value has been set.
func (o *BulkWritableVRFPrefixAssignmentRequest) GetVrfOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Vrf, true
}

// SetVrf sets field value
func (o *BulkWritableVRFPrefixAssignmentRequest) SetVrf(v BulkWritableCableRequestStatus) {
	o.Vrf = v
}

// GetPrefix returns the Prefix field value
func (o *BulkWritableVRFPrefixAssignmentRequest) GetPrefix() BulkWritableCableRequestStatus {
	if o == nil {
		var ret BulkWritableCableRequestStatus
		return ret
	}

	return o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value
// and a boolean to check if the value has been set.
func (o *BulkWritableVRFPrefixAssignmentRequest) GetPrefixOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Prefix, true
}

// SetPrefix sets field value
func (o *BulkWritableVRFPrefixAssignmentRequest) SetPrefix(v BulkWritableCableRequestStatus) {
	o.Prefix = v
}

func (o BulkWritableVRFPrefixAssignmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkWritableVRFPrefixAssignmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["vrf"] = o.Vrf
	toSerialize["prefix"] = o.Prefix

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BulkWritableVRFPrefixAssignmentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"vrf",
		"prefix",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBulkWritableVRFPrefixAssignmentRequest := _BulkWritableVRFPrefixAssignmentRequest{}

	err = json.Unmarshal(data, &varBulkWritableVRFPrefixAssignmentRequest)

	if err != nil {
		return err
	}

	*o = BulkWritableVRFPrefixAssignmentRequest(varBulkWritableVRFPrefixAssignmentRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "vrf")
		delete(additionalProperties, "prefix")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBulkWritableVRFPrefixAssignmentRequest struct {
	value *BulkWritableVRFPrefixAssignmentRequest
	isSet bool
}

func (v NullableBulkWritableVRFPrefixAssignmentRequest) Get() *BulkWritableVRFPrefixAssignmentRequest {
	return v.value
}

func (v *NullableBulkWritableVRFPrefixAssignmentRequest) Set(val *BulkWritableVRFPrefixAssignmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkWritableVRFPrefixAssignmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkWritableVRFPrefixAssignmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkWritableVRFPrefixAssignmentRequest(val *BulkWritableVRFPrefixAssignmentRequest) *NullableBulkWritableVRFPrefixAssignmentRequest {
	return &NullableBulkWritableVRFPrefixAssignmentRequest{value: val, isSet: true}
}

func (v NullableBulkWritableVRFPrefixAssignmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkWritableVRFPrefixAssignmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


