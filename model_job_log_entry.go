/*
API Documentation

Source of truth and network automation platform

API version: 2.3.2 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the JobLogEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobLogEntry{}

// JobLogEntry This base serializer implements common fields and logic for all ModelSerializers.  Namely, it:  - defines the `display` field which exposes a human friendly value for the given object. - ensures that `id` field is always present on the serializer as well. - ensures that `created` and `last_updated` fields are always present if applicable to this model and serializer. - ensures that `object_type` field is always present on the serializer which represents the content-type of this   serializer's associated model (e.g. \"dcim.device\"). This is required as the OpenAPI schema, using the   PolymorphicProxySerializer class defined below, relies upon this field as a way to identify to the client   which of several possible serializers are in use for a given attribute. - supports `?depth` query parameter. It is passed in as `nested_depth` to the `build_nested_field()` function   to enable the dynamic generation of nested serializers.
type JobLogEntry struct {
	Id string `json:"id"`
	ObjectType string `json:"object_type" validate:"regexp=^[a-z][a-z0-9_]+\\\\.[a-z][a-z0-9_]+$"`
	// Human friendly display value
	Display string `json:"display"`
	Url string `json:"url"`
	NaturalSlug string `json:"natural_slug"`
	LogLevel *LogLevelEnum `json:"log_level,omitempty"`
	Grouping *string `json:"grouping,omitempty"`
	Message *string `json:"message,omitempty"`
	LogObject *string `json:"log_object,omitempty"`
	AbsoluteUrl *string `json:"absolute_url,omitempty"`
	JobResult BulkWritableCableRequestStatus `json:"job_result"`
	Created *time.Time `json:"created,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _JobLogEntry JobLogEntry

// NewJobLogEntry instantiates a new JobLogEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobLogEntry(id string, objectType string, display string, url string, naturalSlug string, jobResult BulkWritableCableRequestStatus) *JobLogEntry {
	this := JobLogEntry{}
	this.Id = id
	this.ObjectType = objectType
	this.Display = display
	this.Url = url
	this.NaturalSlug = naturalSlug
	this.JobResult = jobResult
	return &this
}

// NewJobLogEntryWithDefaults instantiates a new JobLogEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobLogEntryWithDefaults() *JobLogEntry {
	this := JobLogEntry{}
	return &this
}

// GetId returns the Id field value
func (o *JobLogEntry) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *JobLogEntry) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *JobLogEntry) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *JobLogEntry) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *JobLogEntry) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *JobLogEntry) SetObjectType(v string) {
	o.ObjectType = v
}

// GetDisplay returns the Display field value
func (o *JobLogEntry) GetDisplay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Display
}

// GetDisplayOk returns a tuple with the Display field value
// and a boolean to check if the value has been set.
func (o *JobLogEntry) GetDisplayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Display, true
}

// SetDisplay sets field value
func (o *JobLogEntry) SetDisplay(v string) {
	o.Display = v
}

// GetUrl returns the Url field value
func (o *JobLogEntry) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *JobLogEntry) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *JobLogEntry) SetUrl(v string) {
	o.Url = v
}

// GetNaturalSlug returns the NaturalSlug field value
func (o *JobLogEntry) GetNaturalSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NaturalSlug
}

// GetNaturalSlugOk returns a tuple with the NaturalSlug field value
// and a boolean to check if the value has been set.
func (o *JobLogEntry) GetNaturalSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NaturalSlug, true
}

// SetNaturalSlug sets field value
func (o *JobLogEntry) SetNaturalSlug(v string) {
	o.NaturalSlug = v
}

// GetLogLevel returns the LogLevel field value if set, zero value otherwise.
func (o *JobLogEntry) GetLogLevel() LogLevelEnum {
	if o == nil || IsNil(o.LogLevel) {
		var ret LogLevelEnum
		return ret
	}
	return *o.LogLevel
}

// GetLogLevelOk returns a tuple with the LogLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobLogEntry) GetLogLevelOk() (*LogLevelEnum, bool) {
	if o == nil || IsNil(o.LogLevel) {
		return nil, false
	}
	return o.LogLevel, true
}

// HasLogLevel returns a boolean if a field has been set.
func (o *JobLogEntry) HasLogLevel() bool {
	if o != nil && !IsNil(o.LogLevel) {
		return true
	}

	return false
}

// SetLogLevel gets a reference to the given LogLevelEnum and assigns it to the LogLevel field.
func (o *JobLogEntry) SetLogLevel(v LogLevelEnum) {
	o.LogLevel = &v
}

// GetGrouping returns the Grouping field value if set, zero value otherwise.
func (o *JobLogEntry) GetGrouping() string {
	if o == nil || IsNil(o.Grouping) {
		var ret string
		return ret
	}
	return *o.Grouping
}

// GetGroupingOk returns a tuple with the Grouping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobLogEntry) GetGroupingOk() (*string, bool) {
	if o == nil || IsNil(o.Grouping) {
		return nil, false
	}
	return o.Grouping, true
}

// HasGrouping returns a boolean if a field has been set.
func (o *JobLogEntry) HasGrouping() bool {
	if o != nil && !IsNil(o.Grouping) {
		return true
	}

	return false
}

// SetGrouping gets a reference to the given string and assigns it to the Grouping field.
func (o *JobLogEntry) SetGrouping(v string) {
	o.Grouping = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *JobLogEntry) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobLogEntry) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *JobLogEntry) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *JobLogEntry) SetMessage(v string) {
	o.Message = &v
}

// GetLogObject returns the LogObject field value if set, zero value otherwise.
func (o *JobLogEntry) GetLogObject() string {
	if o == nil || IsNil(o.LogObject) {
		var ret string
		return ret
	}
	return *o.LogObject
}

// GetLogObjectOk returns a tuple with the LogObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobLogEntry) GetLogObjectOk() (*string, bool) {
	if o == nil || IsNil(o.LogObject) {
		return nil, false
	}
	return o.LogObject, true
}

// HasLogObject returns a boolean if a field has been set.
func (o *JobLogEntry) HasLogObject() bool {
	if o != nil && !IsNil(o.LogObject) {
		return true
	}

	return false
}

// SetLogObject gets a reference to the given string and assigns it to the LogObject field.
func (o *JobLogEntry) SetLogObject(v string) {
	o.LogObject = &v
}

// GetAbsoluteUrl returns the AbsoluteUrl field value if set, zero value otherwise.
func (o *JobLogEntry) GetAbsoluteUrl() string {
	if o == nil || IsNil(o.AbsoluteUrl) {
		var ret string
		return ret
	}
	return *o.AbsoluteUrl
}

// GetAbsoluteUrlOk returns a tuple with the AbsoluteUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobLogEntry) GetAbsoluteUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AbsoluteUrl) {
		return nil, false
	}
	return o.AbsoluteUrl, true
}

// HasAbsoluteUrl returns a boolean if a field has been set.
func (o *JobLogEntry) HasAbsoluteUrl() bool {
	if o != nil && !IsNil(o.AbsoluteUrl) {
		return true
	}

	return false
}

// SetAbsoluteUrl gets a reference to the given string and assigns it to the AbsoluteUrl field.
func (o *JobLogEntry) SetAbsoluteUrl(v string) {
	o.AbsoluteUrl = &v
}

// GetJobResult returns the JobResult field value
func (o *JobLogEntry) GetJobResult() BulkWritableCableRequestStatus {
	if o == nil {
		var ret BulkWritableCableRequestStatus
		return ret
	}

	return o.JobResult
}

// GetJobResultOk returns a tuple with the JobResult field value
// and a boolean to check if the value has been set.
func (o *JobLogEntry) GetJobResultOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobResult, true
}

// SetJobResult sets field value
func (o *JobLogEntry) SetJobResult(v BulkWritableCableRequestStatus) {
	o.JobResult = v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *JobLogEntry) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobLogEntry) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *JobLogEntry) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *JobLogEntry) SetCreated(v time.Time) {
	o.Created = &v
}

func (o JobLogEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobLogEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["object_type"] = o.ObjectType
	toSerialize["display"] = o.Display
	toSerialize["url"] = o.Url
	toSerialize["natural_slug"] = o.NaturalSlug
	if !IsNil(o.LogLevel) {
		toSerialize["log_level"] = o.LogLevel
	}
	if !IsNil(o.Grouping) {
		toSerialize["grouping"] = o.Grouping
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.LogObject) {
		toSerialize["log_object"] = o.LogObject
	}
	if !IsNil(o.AbsoluteUrl) {
		toSerialize["absolute_url"] = o.AbsoluteUrl
	}
	toSerialize["job_result"] = o.JobResult
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *JobLogEntry) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"object_type",
		"display",
		"url",
		"natural_slug",
		"job_result",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varJobLogEntry := _JobLogEntry{}

	err = json.Unmarshal(data, &varJobLogEntry)

	if err != nil {
		return err
	}

	*o = JobLogEntry(varJobLogEntry)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "object_type")
		delete(additionalProperties, "display")
		delete(additionalProperties, "url")
		delete(additionalProperties, "natural_slug")
		delete(additionalProperties, "log_level")
		delete(additionalProperties, "grouping")
		delete(additionalProperties, "message")
		delete(additionalProperties, "log_object")
		delete(additionalProperties, "absolute_url")
		delete(additionalProperties, "job_result")
		delete(additionalProperties, "created")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableJobLogEntry struct {
	value *JobLogEntry
	isSet bool
}

func (v NullableJobLogEntry) Get() *JobLogEntry {
	return v.value
}

func (v *NullableJobLogEntry) Set(val *JobLogEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableJobLogEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableJobLogEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobLogEntry(val *JobLogEntry) *NullableJobLogEntry {
	return &NullableJobLogEntry{value: val, isSet: true}
}

func (v NullableJobLogEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobLogEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


