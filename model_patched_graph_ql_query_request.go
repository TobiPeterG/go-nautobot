/*
API Documentation

Source of truth and network automation platform

API version: 2.2.5 (2.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
)

// checks if the PatchedGraphQLQueryRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedGraphQLQueryRequest{}

// PatchedGraphQLQueryRequest Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedGraphQLQueryRequest struct {
	Name *string `json:"name,omitempty"`
	Query *string `json:"query,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedGraphQLQueryRequest PatchedGraphQLQueryRequest

// NewPatchedGraphQLQueryRequest instantiates a new PatchedGraphQLQueryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedGraphQLQueryRequest() *PatchedGraphQLQueryRequest {
	this := PatchedGraphQLQueryRequest{}
	return &this
}

// NewPatchedGraphQLQueryRequestWithDefaults instantiates a new PatchedGraphQLQueryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedGraphQLQueryRequestWithDefaults() *PatchedGraphQLQueryRequest {
	this := PatchedGraphQLQueryRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedGraphQLQueryRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedGraphQLQueryRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedGraphQLQueryRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedGraphQLQueryRequest) SetName(v string) {
	o.Name = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *PatchedGraphQLQueryRequest) GetQuery() string {
	if o == nil || IsNil(o.Query) {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedGraphQLQueryRequest) GetQueryOk() (*string, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *PatchedGraphQLQueryRequest) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *PatchedGraphQLQueryRequest) SetQuery(v string) {
	o.Query = &v
}

func (o PatchedGraphQLQueryRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedGraphQLQueryRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedGraphQLQueryRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedGraphQLQueryRequest := _PatchedGraphQLQueryRequest{}

	err = json.Unmarshal(data, &varPatchedGraphQLQueryRequest)

	if err != nil {
		return err
	}

	*o = PatchedGraphQLQueryRequest(varPatchedGraphQLQueryRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "query")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedGraphQLQueryRequest struct {
	value *PatchedGraphQLQueryRequest
	isSet bool
}

func (v NullablePatchedGraphQLQueryRequest) Get() *PatchedGraphQLQueryRequest {
	return v.value
}

func (v *NullablePatchedGraphQLQueryRequest) Set(val *PatchedGraphQLQueryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedGraphQLQueryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedGraphQLQueryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedGraphQLQueryRequest(val *PatchedGraphQLQueryRequest) *NullablePatchedGraphQLQueryRequest {
	return &NullablePatchedGraphQLQueryRequest{value: val, isSet: true}
}

func (v NullablePatchedGraphQLQueryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedGraphQLQueryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


