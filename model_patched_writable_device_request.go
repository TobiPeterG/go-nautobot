/*
API Documentation

Source of truth and network automation platform

API version: 2.3.2 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
)

// checks if the PatchedWritableDeviceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedWritableDeviceRequest{}

// PatchedWritableDeviceRequest Base class to use for serializers based on OrganizationalModel or PrimaryModel.  Can also be used for models derived from BaseModel, so long as they support custom fields, notes, and relationships.
type PatchedWritableDeviceRequest struct {
	LocalConfigContextData interface{} `json:"local_config_context_data,omitempty"`
	LocalConfigContextDataOwnerObjectId NullableString `json:"local_config_context_data_owner_object_id,omitempty"`
	Name NullableString `json:"name,omitempty"`
	Serial *string `json:"serial,omitempty"`
	// A unique tag used to identify this device
	AssetTag NullableString `json:"asset_tag,omitempty"`
	// The lowest-numbered unit occupied by the device
	Position NullableInt32 `json:"position,omitempty"`
	Face *RackFace `json:"face,omitempty"`
	// The priority the device has in the device redundancy group.
	DeviceRedundancyGroupPriority NullableInt32 `json:"device_redundancy_group_priority,omitempty"`
	VcPosition NullableInt32 `json:"vc_position,omitempty"`
	VcPriority NullableInt32 `json:"vc_priority,omitempty"`
	Comments *string `json:"comments,omitempty"`
	LocalConfigContextSchema NullableBulkWritableConfigContextRequestConfigContextSchema `json:"local_config_context_schema,omitempty"`
	LocalConfigContextDataOwnerContentType NullableBulkWritableCircuitRequestTenant `json:"local_config_context_data_owner_content_type,omitempty"`
	DeviceType *BulkWritableCableRequestStatus `json:"device_type,omitempty"`
	Status *BulkWritableCableRequestStatus `json:"status,omitempty"`
	Role *BulkWritableCableRequestStatus `json:"role,omitempty"`
	Tenant NullableBulkWritableCircuitRequestTenant `json:"tenant,omitempty"`
	Platform NullableBulkWritableCircuitRequestTenant `json:"platform,omitempty"`
	Location *BulkWritableCableRequestStatus `json:"location,omitempty"`
	Rack NullableBulkWritableCircuitRequestTenant `json:"rack,omitempty"`
	PrimaryIp4 NullablePrimaryIPv4 `json:"primary_ip4,omitempty"`
	PrimaryIp6 NullablePrimaryIPv6 `json:"primary_ip6,omitempty"`
	Cluster NullableBulkWritableCircuitRequestTenant `json:"cluster,omitempty"`
	VirtualChassis NullableBulkWritableCircuitRequestTenant `json:"virtual_chassis,omitempty"`
	DeviceRedundancyGroup NullableBulkWritableCircuitRequestTenant `json:"device_redundancy_group,omitempty"`
	SoftwareVersion NullableBulkWritableDeviceRequestSoftwareVersion `json:"software_version,omitempty"`
	SecretsGroup NullableBulkWritableCircuitRequestTenant `json:"secrets_group,omitempty"`
	ControllerManagedDeviceGroup NullableBulkWritableCircuitRequestTenant `json:"controller_managed_device_group,omitempty"`
	// Override the software image files associated with the software version for this device
	SoftwareImageFiles []SoftwareImageFiles `json:"software_image_files,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	Relationships *map[string]BulkWritableCableRequestRelationshipsValue `json:"relationships,omitempty"`
	Tags []BulkWritableCableRequestStatus `json:"tags,omitempty"`
	ParentBay NullableBulkWritableCircuitRequestTenant `json:"parent_bay,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedWritableDeviceRequest PatchedWritableDeviceRequest

// NewPatchedWritableDeviceRequest instantiates a new PatchedWritableDeviceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedWritableDeviceRequest() *PatchedWritableDeviceRequest {
	this := PatchedWritableDeviceRequest{}
	return &this
}

// NewPatchedWritableDeviceRequestWithDefaults instantiates a new PatchedWritableDeviceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedWritableDeviceRequestWithDefaults() *PatchedWritableDeviceRequest {
	this := PatchedWritableDeviceRequest{}
	return &this
}

// GetLocalConfigContextData returns the LocalConfigContextData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetLocalConfigContextData() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.LocalConfigContextData
}

// GetLocalConfigContextDataOk returns a tuple with the LocalConfigContextData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetLocalConfigContextDataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.LocalConfigContextData) {
		return nil, false
	}
	return &o.LocalConfigContextData, true
}

// HasLocalConfigContextData returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasLocalConfigContextData() bool {
	if o != nil && !IsNil(o.LocalConfigContextData) {
		return true
	}

	return false
}

// SetLocalConfigContextData gets a reference to the given interface{} and assigns it to the LocalConfigContextData field.
func (o *PatchedWritableDeviceRequest) SetLocalConfigContextData(v interface{}) {
	o.LocalConfigContextData = v
}

// GetLocalConfigContextDataOwnerObjectId returns the LocalConfigContextDataOwnerObjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetLocalConfigContextDataOwnerObjectId() string {
	if o == nil || IsNil(o.LocalConfigContextDataOwnerObjectId.Get()) {
		var ret string
		return ret
	}
	return *o.LocalConfigContextDataOwnerObjectId.Get()
}

// GetLocalConfigContextDataOwnerObjectIdOk returns a tuple with the LocalConfigContextDataOwnerObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetLocalConfigContextDataOwnerObjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalConfigContextDataOwnerObjectId.Get(), o.LocalConfigContextDataOwnerObjectId.IsSet()
}

// HasLocalConfigContextDataOwnerObjectId returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasLocalConfigContextDataOwnerObjectId() bool {
	if o != nil && o.LocalConfigContextDataOwnerObjectId.IsSet() {
		return true
	}

	return false
}

// SetLocalConfigContextDataOwnerObjectId gets a reference to the given NullableString and assigns it to the LocalConfigContextDataOwnerObjectId field.
func (o *PatchedWritableDeviceRequest) SetLocalConfigContextDataOwnerObjectId(v string) {
	o.LocalConfigContextDataOwnerObjectId.Set(&v)
}
// SetLocalConfigContextDataOwnerObjectIdNil sets the value for LocalConfigContextDataOwnerObjectId to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetLocalConfigContextDataOwnerObjectIdNil() {
	o.LocalConfigContextDataOwnerObjectId.Set(nil)
}

// UnsetLocalConfigContextDataOwnerObjectId ensures that no value is present for LocalConfigContextDataOwnerObjectId, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetLocalConfigContextDataOwnerObjectId() {
	o.LocalConfigContextDataOwnerObjectId.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *PatchedWritableDeviceRequest) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetName() {
	o.Name.Unset()
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *PatchedWritableDeviceRequest) GetSerial() string {
	if o == nil || IsNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableDeviceRequest) GetSerialOk() (*string, bool) {
	if o == nil || IsNil(o.Serial) {
		return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasSerial() bool {
	if o != nil && !IsNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *PatchedWritableDeviceRequest) SetSerial(v string) {
	o.Serial = &v
}

// GetAssetTag returns the AssetTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetAssetTag() string {
	if o == nil || IsNil(o.AssetTag.Get()) {
		var ret string
		return ret
	}
	return *o.AssetTag.Get()
}

// GetAssetTagOk returns a tuple with the AssetTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetAssetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AssetTag.Get(), o.AssetTag.IsSet()
}

// HasAssetTag returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasAssetTag() bool {
	if o != nil && o.AssetTag.IsSet() {
		return true
	}

	return false
}

// SetAssetTag gets a reference to the given NullableString and assigns it to the AssetTag field.
func (o *PatchedWritableDeviceRequest) SetAssetTag(v string) {
	o.AssetTag.Set(&v)
}
// SetAssetTagNil sets the value for AssetTag to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetAssetTagNil() {
	o.AssetTag.Set(nil)
}

// UnsetAssetTag ensures that no value is present for AssetTag, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetAssetTag() {
	o.AssetTag.Unset()
}

// GetPosition returns the Position field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetPosition() int32 {
	if o == nil || IsNil(o.Position.Get()) {
		var ret int32
		return ret
	}
	return *o.Position.Get()
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetPositionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Position.Get(), o.Position.IsSet()
}

// HasPosition returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasPosition() bool {
	if o != nil && o.Position.IsSet() {
		return true
	}

	return false
}

// SetPosition gets a reference to the given NullableInt32 and assigns it to the Position field.
func (o *PatchedWritableDeviceRequest) SetPosition(v int32) {
	o.Position.Set(&v)
}
// SetPositionNil sets the value for Position to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetPositionNil() {
	o.Position.Set(nil)
}

// UnsetPosition ensures that no value is present for Position, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetPosition() {
	o.Position.Unset()
}

// GetFace returns the Face field value if set, zero value otherwise.
func (o *PatchedWritableDeviceRequest) GetFace() RackFace {
	if o == nil || IsNil(o.Face) {
		var ret RackFace
		return ret
	}
	return *o.Face
}

// GetFaceOk returns a tuple with the Face field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableDeviceRequest) GetFaceOk() (*RackFace, bool) {
	if o == nil || IsNil(o.Face) {
		return nil, false
	}
	return o.Face, true
}

// HasFace returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasFace() bool {
	if o != nil && !IsNil(o.Face) {
		return true
	}

	return false
}

// SetFace gets a reference to the given RackFace and assigns it to the Face field.
func (o *PatchedWritableDeviceRequest) SetFace(v RackFace) {
	o.Face = &v
}

// GetDeviceRedundancyGroupPriority returns the DeviceRedundancyGroupPriority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetDeviceRedundancyGroupPriority() int32 {
	if o == nil || IsNil(o.DeviceRedundancyGroupPriority.Get()) {
		var ret int32
		return ret
	}
	return *o.DeviceRedundancyGroupPriority.Get()
}

// GetDeviceRedundancyGroupPriorityOk returns a tuple with the DeviceRedundancyGroupPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetDeviceRedundancyGroupPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceRedundancyGroupPriority.Get(), o.DeviceRedundancyGroupPriority.IsSet()
}

// HasDeviceRedundancyGroupPriority returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasDeviceRedundancyGroupPriority() bool {
	if o != nil && o.DeviceRedundancyGroupPriority.IsSet() {
		return true
	}

	return false
}

// SetDeviceRedundancyGroupPriority gets a reference to the given NullableInt32 and assigns it to the DeviceRedundancyGroupPriority field.
func (o *PatchedWritableDeviceRequest) SetDeviceRedundancyGroupPriority(v int32) {
	o.DeviceRedundancyGroupPriority.Set(&v)
}
// SetDeviceRedundancyGroupPriorityNil sets the value for DeviceRedundancyGroupPriority to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetDeviceRedundancyGroupPriorityNil() {
	o.DeviceRedundancyGroupPriority.Set(nil)
}

// UnsetDeviceRedundancyGroupPriority ensures that no value is present for DeviceRedundancyGroupPriority, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetDeviceRedundancyGroupPriority() {
	o.DeviceRedundancyGroupPriority.Unset()
}

// GetVcPosition returns the VcPosition field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetVcPosition() int32 {
	if o == nil || IsNil(o.VcPosition.Get()) {
		var ret int32
		return ret
	}
	return *o.VcPosition.Get()
}

// GetVcPositionOk returns a tuple with the VcPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetVcPositionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.VcPosition.Get(), o.VcPosition.IsSet()
}

// HasVcPosition returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasVcPosition() bool {
	if o != nil && o.VcPosition.IsSet() {
		return true
	}

	return false
}

// SetVcPosition gets a reference to the given NullableInt32 and assigns it to the VcPosition field.
func (o *PatchedWritableDeviceRequest) SetVcPosition(v int32) {
	o.VcPosition.Set(&v)
}
// SetVcPositionNil sets the value for VcPosition to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetVcPositionNil() {
	o.VcPosition.Set(nil)
}

// UnsetVcPosition ensures that no value is present for VcPosition, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetVcPosition() {
	o.VcPosition.Unset()
}

// GetVcPriority returns the VcPriority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetVcPriority() int32 {
	if o == nil || IsNil(o.VcPriority.Get()) {
		var ret int32
		return ret
	}
	return *o.VcPriority.Get()
}

// GetVcPriorityOk returns a tuple with the VcPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetVcPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.VcPriority.Get(), o.VcPriority.IsSet()
}

// HasVcPriority returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasVcPriority() bool {
	if o != nil && o.VcPriority.IsSet() {
		return true
	}

	return false
}

// SetVcPriority gets a reference to the given NullableInt32 and assigns it to the VcPriority field.
func (o *PatchedWritableDeviceRequest) SetVcPriority(v int32) {
	o.VcPriority.Set(&v)
}
// SetVcPriorityNil sets the value for VcPriority to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetVcPriorityNil() {
	o.VcPriority.Set(nil)
}

// UnsetVcPriority ensures that no value is present for VcPriority, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetVcPriority() {
	o.VcPriority.Unset()
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *PatchedWritableDeviceRequest) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableDeviceRequest) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *PatchedWritableDeviceRequest) SetComments(v string) {
	o.Comments = &v
}

// GetLocalConfigContextSchema returns the LocalConfigContextSchema field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetLocalConfigContextSchema() BulkWritableConfigContextRequestConfigContextSchema {
	if o == nil || IsNil(o.LocalConfigContextSchema.Get()) {
		var ret BulkWritableConfigContextRequestConfigContextSchema
		return ret
	}
	return *o.LocalConfigContextSchema.Get()
}

// GetLocalConfigContextSchemaOk returns a tuple with the LocalConfigContextSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetLocalConfigContextSchemaOk() (*BulkWritableConfigContextRequestConfigContextSchema, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalConfigContextSchema.Get(), o.LocalConfigContextSchema.IsSet()
}

// HasLocalConfigContextSchema returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasLocalConfigContextSchema() bool {
	if o != nil && o.LocalConfigContextSchema.IsSet() {
		return true
	}

	return false
}

// SetLocalConfigContextSchema gets a reference to the given NullableBulkWritableConfigContextRequestConfigContextSchema and assigns it to the LocalConfigContextSchema field.
func (o *PatchedWritableDeviceRequest) SetLocalConfigContextSchema(v BulkWritableConfigContextRequestConfigContextSchema) {
	o.LocalConfigContextSchema.Set(&v)
}
// SetLocalConfigContextSchemaNil sets the value for LocalConfigContextSchema to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetLocalConfigContextSchemaNil() {
	o.LocalConfigContextSchema.Set(nil)
}

// UnsetLocalConfigContextSchema ensures that no value is present for LocalConfigContextSchema, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetLocalConfigContextSchema() {
	o.LocalConfigContextSchema.Unset()
}

// GetLocalConfigContextDataOwnerContentType returns the LocalConfigContextDataOwnerContentType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetLocalConfigContextDataOwnerContentType() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.LocalConfigContextDataOwnerContentType.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.LocalConfigContextDataOwnerContentType.Get()
}

// GetLocalConfigContextDataOwnerContentTypeOk returns a tuple with the LocalConfigContextDataOwnerContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetLocalConfigContextDataOwnerContentTypeOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalConfigContextDataOwnerContentType.Get(), o.LocalConfigContextDataOwnerContentType.IsSet()
}

// HasLocalConfigContextDataOwnerContentType returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasLocalConfigContextDataOwnerContentType() bool {
	if o != nil && o.LocalConfigContextDataOwnerContentType.IsSet() {
		return true
	}

	return false
}

// SetLocalConfigContextDataOwnerContentType gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the LocalConfigContextDataOwnerContentType field.
func (o *PatchedWritableDeviceRequest) SetLocalConfigContextDataOwnerContentType(v BulkWritableCircuitRequestTenant) {
	o.LocalConfigContextDataOwnerContentType.Set(&v)
}
// SetLocalConfigContextDataOwnerContentTypeNil sets the value for LocalConfigContextDataOwnerContentType to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetLocalConfigContextDataOwnerContentTypeNil() {
	o.LocalConfigContextDataOwnerContentType.Set(nil)
}

// UnsetLocalConfigContextDataOwnerContentType ensures that no value is present for LocalConfigContextDataOwnerContentType, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetLocalConfigContextDataOwnerContentType() {
	o.LocalConfigContextDataOwnerContentType.Unset()
}

// GetDeviceType returns the DeviceType field value if set, zero value otherwise.
func (o *PatchedWritableDeviceRequest) GetDeviceType() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.DeviceType) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableDeviceRequest) GetDeviceTypeOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.DeviceType) {
		return nil, false
	}
	return o.DeviceType, true
}

// HasDeviceType returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasDeviceType() bool {
	if o != nil && !IsNil(o.DeviceType) {
		return true
	}

	return false
}

// SetDeviceType gets a reference to the given BulkWritableCableRequestStatus and assigns it to the DeviceType field.
func (o *PatchedWritableDeviceRequest) SetDeviceType(v BulkWritableCableRequestStatus) {
	o.DeviceType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PatchedWritableDeviceRequest) GetStatus() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Status) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableDeviceRequest) GetStatusOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given BulkWritableCableRequestStatus and assigns it to the Status field.
func (o *PatchedWritableDeviceRequest) SetStatus(v BulkWritableCableRequestStatus) {
	o.Status = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *PatchedWritableDeviceRequest) GetRole() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Role) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableDeviceRequest) GetRoleOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given BulkWritableCableRequestStatus and assigns it to the Role field.
func (o *PatchedWritableDeviceRequest) SetRole(v BulkWritableCableRequestStatus) {
	o.Role = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetTenant() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.Tenant.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.Tenant.Get()
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetTenantOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tenant.Get(), o.Tenant.IsSet()
}

// HasTenant returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasTenant() bool {
	if o != nil && o.Tenant.IsSet() {
		return true
	}

	return false
}

// SetTenant gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the Tenant field.
func (o *PatchedWritableDeviceRequest) SetTenant(v BulkWritableCircuitRequestTenant) {
	o.Tenant.Set(&v)
}
// SetTenantNil sets the value for Tenant to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetTenantNil() {
	o.Tenant.Set(nil)
}

// UnsetTenant ensures that no value is present for Tenant, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetTenant() {
	o.Tenant.Unset()
}

// GetPlatform returns the Platform field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetPlatform() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.Platform.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.Platform.Get()
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetPlatformOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.Platform.Get(), o.Platform.IsSet()
}

// HasPlatform returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasPlatform() bool {
	if o != nil && o.Platform.IsSet() {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the Platform field.
func (o *PatchedWritableDeviceRequest) SetPlatform(v BulkWritableCircuitRequestTenant) {
	o.Platform.Set(&v)
}
// SetPlatformNil sets the value for Platform to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetPlatformNil() {
	o.Platform.Set(nil)
}

// UnsetPlatform ensures that no value is present for Platform, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetPlatform() {
	o.Platform.Unset()
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *PatchedWritableDeviceRequest) GetLocation() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Location) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableDeviceRequest) GetLocationOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given BulkWritableCableRequestStatus and assigns it to the Location field.
func (o *PatchedWritableDeviceRequest) SetLocation(v BulkWritableCableRequestStatus) {
	o.Location = &v
}

// GetRack returns the Rack field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetRack() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.Rack.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.Rack.Get()
}

// GetRackOk returns a tuple with the Rack field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetRackOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rack.Get(), o.Rack.IsSet()
}

// HasRack returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasRack() bool {
	if o != nil && o.Rack.IsSet() {
		return true
	}

	return false
}

// SetRack gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the Rack field.
func (o *PatchedWritableDeviceRequest) SetRack(v BulkWritableCircuitRequestTenant) {
	o.Rack.Set(&v)
}
// SetRackNil sets the value for Rack to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetRackNil() {
	o.Rack.Set(nil)
}

// UnsetRack ensures that no value is present for Rack, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetRack() {
	o.Rack.Unset()
}

// GetPrimaryIp4 returns the PrimaryIp4 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetPrimaryIp4() PrimaryIPv4 {
	if o == nil || IsNil(o.PrimaryIp4.Get()) {
		var ret PrimaryIPv4
		return ret
	}
	return *o.PrimaryIp4.Get()
}

// GetPrimaryIp4Ok returns a tuple with the PrimaryIp4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetPrimaryIp4Ok() (*PrimaryIPv4, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryIp4.Get(), o.PrimaryIp4.IsSet()
}

// HasPrimaryIp4 returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasPrimaryIp4() bool {
	if o != nil && o.PrimaryIp4.IsSet() {
		return true
	}

	return false
}

// SetPrimaryIp4 gets a reference to the given NullablePrimaryIPv4 and assigns it to the PrimaryIp4 field.
func (o *PatchedWritableDeviceRequest) SetPrimaryIp4(v PrimaryIPv4) {
	o.PrimaryIp4.Set(&v)
}
// SetPrimaryIp4Nil sets the value for PrimaryIp4 to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetPrimaryIp4Nil() {
	o.PrimaryIp4.Set(nil)
}

// UnsetPrimaryIp4 ensures that no value is present for PrimaryIp4, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetPrimaryIp4() {
	o.PrimaryIp4.Unset()
}

// GetPrimaryIp6 returns the PrimaryIp6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetPrimaryIp6() PrimaryIPv6 {
	if o == nil || IsNil(o.PrimaryIp6.Get()) {
		var ret PrimaryIPv6
		return ret
	}
	return *o.PrimaryIp6.Get()
}

// GetPrimaryIp6Ok returns a tuple with the PrimaryIp6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetPrimaryIp6Ok() (*PrimaryIPv6, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryIp6.Get(), o.PrimaryIp6.IsSet()
}

// HasPrimaryIp6 returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasPrimaryIp6() bool {
	if o != nil && o.PrimaryIp6.IsSet() {
		return true
	}

	return false
}

// SetPrimaryIp6 gets a reference to the given NullablePrimaryIPv6 and assigns it to the PrimaryIp6 field.
func (o *PatchedWritableDeviceRequest) SetPrimaryIp6(v PrimaryIPv6) {
	o.PrimaryIp6.Set(&v)
}
// SetPrimaryIp6Nil sets the value for PrimaryIp6 to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetPrimaryIp6Nil() {
	o.PrimaryIp6.Set(nil)
}

// UnsetPrimaryIp6 ensures that no value is present for PrimaryIp6, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetPrimaryIp6() {
	o.PrimaryIp6.Unset()
}

// GetCluster returns the Cluster field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetCluster() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.Cluster.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.Cluster.Get()
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetClusterOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cluster.Get(), o.Cluster.IsSet()
}

// HasCluster returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasCluster() bool {
	if o != nil && o.Cluster.IsSet() {
		return true
	}

	return false
}

// SetCluster gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the Cluster field.
func (o *PatchedWritableDeviceRequest) SetCluster(v BulkWritableCircuitRequestTenant) {
	o.Cluster.Set(&v)
}
// SetClusterNil sets the value for Cluster to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetClusterNil() {
	o.Cluster.Set(nil)
}

// UnsetCluster ensures that no value is present for Cluster, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetCluster() {
	o.Cluster.Unset()
}

// GetVirtualChassis returns the VirtualChassis field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetVirtualChassis() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.VirtualChassis.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.VirtualChassis.Get()
}

// GetVirtualChassisOk returns a tuple with the VirtualChassis field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetVirtualChassisOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.VirtualChassis.Get(), o.VirtualChassis.IsSet()
}

// HasVirtualChassis returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasVirtualChassis() bool {
	if o != nil && o.VirtualChassis.IsSet() {
		return true
	}

	return false
}

// SetVirtualChassis gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the VirtualChassis field.
func (o *PatchedWritableDeviceRequest) SetVirtualChassis(v BulkWritableCircuitRequestTenant) {
	o.VirtualChassis.Set(&v)
}
// SetVirtualChassisNil sets the value for VirtualChassis to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetVirtualChassisNil() {
	o.VirtualChassis.Set(nil)
}

// UnsetVirtualChassis ensures that no value is present for VirtualChassis, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetVirtualChassis() {
	o.VirtualChassis.Unset()
}

// GetDeviceRedundancyGroup returns the DeviceRedundancyGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetDeviceRedundancyGroup() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.DeviceRedundancyGroup.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.DeviceRedundancyGroup.Get()
}

// GetDeviceRedundancyGroupOk returns a tuple with the DeviceRedundancyGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetDeviceRedundancyGroupOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceRedundancyGroup.Get(), o.DeviceRedundancyGroup.IsSet()
}

// HasDeviceRedundancyGroup returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasDeviceRedundancyGroup() bool {
	if o != nil && o.DeviceRedundancyGroup.IsSet() {
		return true
	}

	return false
}

// SetDeviceRedundancyGroup gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the DeviceRedundancyGroup field.
func (o *PatchedWritableDeviceRequest) SetDeviceRedundancyGroup(v BulkWritableCircuitRequestTenant) {
	o.DeviceRedundancyGroup.Set(&v)
}
// SetDeviceRedundancyGroupNil sets the value for DeviceRedundancyGroup to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetDeviceRedundancyGroupNil() {
	o.DeviceRedundancyGroup.Set(nil)
}

// UnsetDeviceRedundancyGroup ensures that no value is present for DeviceRedundancyGroup, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetDeviceRedundancyGroup() {
	o.DeviceRedundancyGroup.Unset()
}

// GetSoftwareVersion returns the SoftwareVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetSoftwareVersion() BulkWritableDeviceRequestSoftwareVersion {
	if o == nil || IsNil(o.SoftwareVersion.Get()) {
		var ret BulkWritableDeviceRequestSoftwareVersion
		return ret
	}
	return *o.SoftwareVersion.Get()
}

// GetSoftwareVersionOk returns a tuple with the SoftwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetSoftwareVersionOk() (*BulkWritableDeviceRequestSoftwareVersion, bool) {
	if o == nil {
		return nil, false
	}
	return o.SoftwareVersion.Get(), o.SoftwareVersion.IsSet()
}

// HasSoftwareVersion returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasSoftwareVersion() bool {
	if o != nil && o.SoftwareVersion.IsSet() {
		return true
	}

	return false
}

// SetSoftwareVersion gets a reference to the given NullableBulkWritableDeviceRequestSoftwareVersion and assigns it to the SoftwareVersion field.
func (o *PatchedWritableDeviceRequest) SetSoftwareVersion(v BulkWritableDeviceRequestSoftwareVersion) {
	o.SoftwareVersion.Set(&v)
}
// SetSoftwareVersionNil sets the value for SoftwareVersion to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetSoftwareVersionNil() {
	o.SoftwareVersion.Set(nil)
}

// UnsetSoftwareVersion ensures that no value is present for SoftwareVersion, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetSoftwareVersion() {
	o.SoftwareVersion.Unset()
}

// GetSecretsGroup returns the SecretsGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetSecretsGroup() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.SecretsGroup.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.SecretsGroup.Get()
}

// GetSecretsGroupOk returns a tuple with the SecretsGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetSecretsGroupOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecretsGroup.Get(), o.SecretsGroup.IsSet()
}

// HasSecretsGroup returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasSecretsGroup() bool {
	if o != nil && o.SecretsGroup.IsSet() {
		return true
	}

	return false
}

// SetSecretsGroup gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the SecretsGroup field.
func (o *PatchedWritableDeviceRequest) SetSecretsGroup(v BulkWritableCircuitRequestTenant) {
	o.SecretsGroup.Set(&v)
}
// SetSecretsGroupNil sets the value for SecretsGroup to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetSecretsGroupNil() {
	o.SecretsGroup.Set(nil)
}

// UnsetSecretsGroup ensures that no value is present for SecretsGroup, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetSecretsGroup() {
	o.SecretsGroup.Unset()
}

// GetControllerManagedDeviceGroup returns the ControllerManagedDeviceGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetControllerManagedDeviceGroup() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.ControllerManagedDeviceGroup.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.ControllerManagedDeviceGroup.Get()
}

// GetControllerManagedDeviceGroupOk returns a tuple with the ControllerManagedDeviceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetControllerManagedDeviceGroupOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.ControllerManagedDeviceGroup.Get(), o.ControllerManagedDeviceGroup.IsSet()
}

// HasControllerManagedDeviceGroup returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasControllerManagedDeviceGroup() bool {
	if o != nil && o.ControllerManagedDeviceGroup.IsSet() {
		return true
	}

	return false
}

// SetControllerManagedDeviceGroup gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the ControllerManagedDeviceGroup field.
func (o *PatchedWritableDeviceRequest) SetControllerManagedDeviceGroup(v BulkWritableCircuitRequestTenant) {
	o.ControllerManagedDeviceGroup.Set(&v)
}
// SetControllerManagedDeviceGroupNil sets the value for ControllerManagedDeviceGroup to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetControllerManagedDeviceGroupNil() {
	o.ControllerManagedDeviceGroup.Set(nil)
}

// UnsetControllerManagedDeviceGroup ensures that no value is present for ControllerManagedDeviceGroup, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetControllerManagedDeviceGroup() {
	o.ControllerManagedDeviceGroup.Unset()
}

// GetSoftwareImageFiles returns the SoftwareImageFiles field value if set, zero value otherwise.
func (o *PatchedWritableDeviceRequest) GetSoftwareImageFiles() []SoftwareImageFiles {
	if o == nil || IsNil(o.SoftwareImageFiles) {
		var ret []SoftwareImageFiles
		return ret
	}
	return o.SoftwareImageFiles
}

// GetSoftwareImageFilesOk returns a tuple with the SoftwareImageFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableDeviceRequest) GetSoftwareImageFilesOk() ([]SoftwareImageFiles, bool) {
	if o == nil || IsNil(o.SoftwareImageFiles) {
		return nil, false
	}
	return o.SoftwareImageFiles, true
}

// HasSoftwareImageFiles returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasSoftwareImageFiles() bool {
	if o != nil && !IsNil(o.SoftwareImageFiles) {
		return true
	}

	return false
}

// SetSoftwareImageFiles gets a reference to the given []SoftwareImageFiles and assigns it to the SoftwareImageFiles field.
func (o *PatchedWritableDeviceRequest) SetSoftwareImageFiles(v []SoftwareImageFiles) {
	o.SoftwareImageFiles = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *PatchedWritableDeviceRequest) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableDeviceRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *PatchedWritableDeviceRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *PatchedWritableDeviceRequest) GetRelationships() map[string]BulkWritableCableRequestRelationshipsValue {
	if o == nil || IsNil(o.Relationships) {
		var ret map[string]BulkWritableCableRequestRelationshipsValue
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableDeviceRequest) GetRelationshipsOk() (*map[string]BulkWritableCableRequestRelationshipsValue, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given map[string]BulkWritableCableRequestRelationshipsValue and assigns it to the Relationships field.
func (o *PatchedWritableDeviceRequest) SetRelationships(v map[string]BulkWritableCableRequestRelationshipsValue) {
	o.Relationships = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PatchedWritableDeviceRequest) GetTags() []BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Tags) {
		var ret []BulkWritableCableRequestStatus
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableDeviceRequest) GetTagsOk() ([]BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []BulkWritableCableRequestStatus and assigns it to the Tags field.
func (o *PatchedWritableDeviceRequest) SetTags(v []BulkWritableCableRequestStatus) {
	o.Tags = v
}

// GetParentBay returns the ParentBay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableDeviceRequest) GetParentBay() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.ParentBay.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.ParentBay.Get()
}

// GetParentBayOk returns a tuple with the ParentBay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableDeviceRequest) GetParentBayOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentBay.Get(), o.ParentBay.IsSet()
}

// HasParentBay returns a boolean if a field has been set.
func (o *PatchedWritableDeviceRequest) HasParentBay() bool {
	if o != nil && o.ParentBay.IsSet() {
		return true
	}

	return false
}

// SetParentBay gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the ParentBay field.
func (o *PatchedWritableDeviceRequest) SetParentBay(v BulkWritableCircuitRequestTenant) {
	o.ParentBay.Set(&v)
}
// SetParentBayNil sets the value for ParentBay to be an explicit nil
func (o *PatchedWritableDeviceRequest) SetParentBayNil() {
	o.ParentBay.Set(nil)
}

// UnsetParentBay ensures that no value is present for ParentBay, not even an explicit nil
func (o *PatchedWritableDeviceRequest) UnsetParentBay() {
	o.ParentBay.Unset()
}

func (o PatchedWritableDeviceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedWritableDeviceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.LocalConfigContextData != nil {
		toSerialize["local_config_context_data"] = o.LocalConfigContextData
	}
	if o.LocalConfigContextDataOwnerObjectId.IsSet() {
		toSerialize["local_config_context_data_owner_object_id"] = o.LocalConfigContextDataOwnerObjectId.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if !IsNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if o.AssetTag.IsSet() {
		toSerialize["asset_tag"] = o.AssetTag.Get()
	}
	if o.Position.IsSet() {
		toSerialize["position"] = o.Position.Get()
	}
	if !IsNil(o.Face) {
		toSerialize["face"] = o.Face
	}
	if o.DeviceRedundancyGroupPriority.IsSet() {
		toSerialize["device_redundancy_group_priority"] = o.DeviceRedundancyGroupPriority.Get()
	}
	if o.VcPosition.IsSet() {
		toSerialize["vc_position"] = o.VcPosition.Get()
	}
	if o.VcPriority.IsSet() {
		toSerialize["vc_priority"] = o.VcPriority.Get()
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if o.LocalConfigContextSchema.IsSet() {
		toSerialize["local_config_context_schema"] = o.LocalConfigContextSchema.Get()
	}
	if o.LocalConfigContextDataOwnerContentType.IsSet() {
		toSerialize["local_config_context_data_owner_content_type"] = o.LocalConfigContextDataOwnerContentType.Get()
	}
	if !IsNil(o.DeviceType) {
		toSerialize["device_type"] = o.DeviceType
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if o.Tenant.IsSet() {
		toSerialize["tenant"] = o.Tenant.Get()
	}
	if o.Platform.IsSet() {
		toSerialize["platform"] = o.Platform.Get()
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if o.Rack.IsSet() {
		toSerialize["rack"] = o.Rack.Get()
	}
	if o.PrimaryIp4.IsSet() {
		toSerialize["primary_ip4"] = o.PrimaryIp4.Get()
	}
	if o.PrimaryIp6.IsSet() {
		toSerialize["primary_ip6"] = o.PrimaryIp6.Get()
	}
	if o.Cluster.IsSet() {
		toSerialize["cluster"] = o.Cluster.Get()
	}
	if o.VirtualChassis.IsSet() {
		toSerialize["virtual_chassis"] = o.VirtualChassis.Get()
	}
	if o.DeviceRedundancyGroup.IsSet() {
		toSerialize["device_redundancy_group"] = o.DeviceRedundancyGroup.Get()
	}
	if o.SoftwareVersion.IsSet() {
		toSerialize["software_version"] = o.SoftwareVersion.Get()
	}
	if o.SecretsGroup.IsSet() {
		toSerialize["secrets_group"] = o.SecretsGroup.Get()
	}
	if o.ControllerManagedDeviceGroup.IsSet() {
		toSerialize["controller_managed_device_group"] = o.ControllerManagedDeviceGroup.Get()
	}
	if !IsNil(o.SoftwareImageFiles) {
		toSerialize["software_image_files"] = o.SoftwareImageFiles
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if o.ParentBay.IsSet() {
		toSerialize["parent_bay"] = o.ParentBay.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedWritableDeviceRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedWritableDeviceRequest := _PatchedWritableDeviceRequest{}

	err = json.Unmarshal(data, &varPatchedWritableDeviceRequest)

	if err != nil {
		return err
	}

	*o = PatchedWritableDeviceRequest(varPatchedWritableDeviceRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "local_config_context_data")
		delete(additionalProperties, "local_config_context_data_owner_object_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "serial")
		delete(additionalProperties, "asset_tag")
		delete(additionalProperties, "position")
		delete(additionalProperties, "face")
		delete(additionalProperties, "device_redundancy_group_priority")
		delete(additionalProperties, "vc_position")
		delete(additionalProperties, "vc_priority")
		delete(additionalProperties, "comments")
		delete(additionalProperties, "local_config_context_schema")
		delete(additionalProperties, "local_config_context_data_owner_content_type")
		delete(additionalProperties, "device_type")
		delete(additionalProperties, "status")
		delete(additionalProperties, "role")
		delete(additionalProperties, "tenant")
		delete(additionalProperties, "platform")
		delete(additionalProperties, "location")
		delete(additionalProperties, "rack")
		delete(additionalProperties, "primary_ip4")
		delete(additionalProperties, "primary_ip6")
		delete(additionalProperties, "cluster")
		delete(additionalProperties, "virtual_chassis")
		delete(additionalProperties, "device_redundancy_group")
		delete(additionalProperties, "software_version")
		delete(additionalProperties, "secrets_group")
		delete(additionalProperties, "controller_managed_device_group")
		delete(additionalProperties, "software_image_files")
		delete(additionalProperties, "custom_fields")
		delete(additionalProperties, "relationships")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "parent_bay")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedWritableDeviceRequest struct {
	value *PatchedWritableDeviceRequest
	isSet bool
}

func (v NullablePatchedWritableDeviceRequest) Get() *PatchedWritableDeviceRequest {
	return v.value
}

func (v *NullablePatchedWritableDeviceRequest) Set(val *PatchedWritableDeviceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedWritableDeviceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedWritableDeviceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedWritableDeviceRequest(val *PatchedWritableDeviceRequest) *NullablePatchedWritableDeviceRequest {
	return &NullablePatchedWritableDeviceRequest{value: val, isSet: true}
}

func (v NullablePatchedWritableDeviceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedWritableDeviceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


