/*
API Documentation

Source of truth and network automation platform

API version: 2.3.1 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
	"fmt"
)

// checks if the PatchedBulkWritableObjectPermissionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedBulkWritableObjectPermissionRequest{}

// PatchedBulkWritableObjectPermissionRequest Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedBulkWritableObjectPermissionRequest struct {
	Id string `json:"id"`
	ObjectTypes []string `json:"object_types,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	// The list of actions granted by this permission
	Actions interface{} `json:"actions,omitempty"`
	// Queryset filter matching the applicable objects of the selected type(s)
	Constraints interface{} `json:"constraints,omitempty"`
	Groups []BulkWritableCableRequestStatus `json:"groups,omitempty"`
	Users []BulkWritableCableRequestStatus `json:"users,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedBulkWritableObjectPermissionRequest PatchedBulkWritableObjectPermissionRequest

// NewPatchedBulkWritableObjectPermissionRequest instantiates a new PatchedBulkWritableObjectPermissionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedBulkWritableObjectPermissionRequest(id string) *PatchedBulkWritableObjectPermissionRequest {
	this := PatchedBulkWritableObjectPermissionRequest{}
	this.Id = id
	return &this
}

// NewPatchedBulkWritableObjectPermissionRequestWithDefaults instantiates a new PatchedBulkWritableObjectPermissionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedBulkWritableObjectPermissionRequestWithDefaults() *PatchedBulkWritableObjectPermissionRequest {
	this := PatchedBulkWritableObjectPermissionRequest{}
	return &this
}

// GetId returns the Id field value
func (o *PatchedBulkWritableObjectPermissionRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PatchedBulkWritableObjectPermissionRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PatchedBulkWritableObjectPermissionRequest) SetId(v string) {
	o.Id = v
}

// GetObjectTypes returns the ObjectTypes field value if set, zero value otherwise.
func (o *PatchedBulkWritableObjectPermissionRequest) GetObjectTypes() []string {
	if o == nil || IsNil(o.ObjectTypes) {
		var ret []string
		return ret
	}
	return o.ObjectTypes
}

// GetObjectTypesOk returns a tuple with the ObjectTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedBulkWritableObjectPermissionRequest) GetObjectTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.ObjectTypes) {
		return nil, false
	}
	return o.ObjectTypes, true
}

// HasObjectTypes returns a boolean if a field has been set.
func (o *PatchedBulkWritableObjectPermissionRequest) HasObjectTypes() bool {
	if o != nil && !IsNil(o.ObjectTypes) {
		return true
	}

	return false
}

// SetObjectTypes gets a reference to the given []string and assigns it to the ObjectTypes field.
func (o *PatchedBulkWritableObjectPermissionRequest) SetObjectTypes(v []string) {
	o.ObjectTypes = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedBulkWritableObjectPermissionRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedBulkWritableObjectPermissionRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedBulkWritableObjectPermissionRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedBulkWritableObjectPermissionRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PatchedBulkWritableObjectPermissionRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedBulkWritableObjectPermissionRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PatchedBulkWritableObjectPermissionRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PatchedBulkWritableObjectPermissionRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *PatchedBulkWritableObjectPermissionRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedBulkWritableObjectPermissionRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *PatchedBulkWritableObjectPermissionRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *PatchedBulkWritableObjectPermissionRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetActions returns the Actions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedBulkWritableObjectPermissionRequest) GetActions() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedBulkWritableObjectPermissionRequest) GetActionsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Actions) {
		return nil, false
	}
	return &o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *PatchedBulkWritableObjectPermissionRequest) HasActions() bool {
	if o != nil && !IsNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given interface{} and assigns it to the Actions field.
func (o *PatchedBulkWritableObjectPermissionRequest) SetActions(v interface{}) {
	o.Actions = v
}

// GetConstraints returns the Constraints field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedBulkWritableObjectPermissionRequest) GetConstraints() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Constraints
}

// GetConstraintsOk returns a tuple with the Constraints field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedBulkWritableObjectPermissionRequest) GetConstraintsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Constraints) {
		return nil, false
	}
	return &o.Constraints, true
}

// HasConstraints returns a boolean if a field has been set.
func (o *PatchedBulkWritableObjectPermissionRequest) HasConstraints() bool {
	if o != nil && !IsNil(o.Constraints) {
		return true
	}

	return false
}

// SetConstraints gets a reference to the given interface{} and assigns it to the Constraints field.
func (o *PatchedBulkWritableObjectPermissionRequest) SetConstraints(v interface{}) {
	o.Constraints = v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *PatchedBulkWritableObjectPermissionRequest) GetGroups() []BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Groups) {
		var ret []BulkWritableCableRequestStatus
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedBulkWritableObjectPermissionRequest) GetGroupsOk() ([]BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *PatchedBulkWritableObjectPermissionRequest) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []BulkWritableCableRequestStatus and assigns it to the Groups field.
func (o *PatchedBulkWritableObjectPermissionRequest) SetGroups(v []BulkWritableCableRequestStatus) {
	o.Groups = v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *PatchedBulkWritableObjectPermissionRequest) GetUsers() []BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Users) {
		var ret []BulkWritableCableRequestStatus
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedBulkWritableObjectPermissionRequest) GetUsersOk() ([]BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *PatchedBulkWritableObjectPermissionRequest) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []BulkWritableCableRequestStatus and assigns it to the Users field.
func (o *PatchedBulkWritableObjectPermissionRequest) SetUsers(v []BulkWritableCableRequestStatus) {
	o.Users = v
}

func (o PatchedBulkWritableObjectPermissionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedBulkWritableObjectPermissionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.ObjectTypes) {
		toSerialize["object_types"] = o.ObjectTypes
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Actions != nil {
		toSerialize["actions"] = o.Actions
	}
	if o.Constraints != nil {
		toSerialize["constraints"] = o.Constraints
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedBulkWritableObjectPermissionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPatchedBulkWritableObjectPermissionRequest := _PatchedBulkWritableObjectPermissionRequest{}

	err = json.Unmarshal(data, &varPatchedBulkWritableObjectPermissionRequest)

	if err != nil {
		return err
	}

	*o = PatchedBulkWritableObjectPermissionRequest(varPatchedBulkWritableObjectPermissionRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "object_types")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "actions")
		delete(additionalProperties, "constraints")
		delete(additionalProperties, "groups")
		delete(additionalProperties, "users")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedBulkWritableObjectPermissionRequest struct {
	value *PatchedBulkWritableObjectPermissionRequest
	isSet bool
}

func (v NullablePatchedBulkWritableObjectPermissionRequest) Get() *PatchedBulkWritableObjectPermissionRequest {
	return v.value
}

func (v *NullablePatchedBulkWritableObjectPermissionRequest) Set(val *PatchedBulkWritableObjectPermissionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedBulkWritableObjectPermissionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedBulkWritableObjectPermissionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedBulkWritableObjectPermissionRequest(val *PatchedBulkWritableObjectPermissionRequest) *NullablePatchedBulkWritableObjectPermissionRequest {
	return &NullablePatchedBulkWritableObjectPermissionRequest{value: val, isSet: true}
}

func (v NullablePatchedBulkWritableObjectPermissionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedBulkWritableObjectPermissionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


