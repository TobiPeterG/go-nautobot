/*
API Documentation

Source of truth and network automation platform

API version: 2.2.5 (2.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
	"fmt"
)

// checks if the VRFDeviceAssignmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VRFDeviceAssignmentRequest{}

// VRFDeviceAssignmentRequest Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type VRFDeviceAssignmentRequest struct {
	// Unique route distinguisher (as defined in RFC 4364)
	Rd NullableString `json:"rd,omitempty"`
	Name *string `json:"name,omitempty"`
	Vrf BulkWritableCableRequestStatus `json:"vrf"`
	Device NullableBulkWritableCircuitRequestTenant `json:"device,omitempty"`
	VirtualMachine NullableBulkWritableCircuitRequestTenant `json:"virtual_machine,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VRFDeviceAssignmentRequest VRFDeviceAssignmentRequest

// NewVRFDeviceAssignmentRequest instantiates a new VRFDeviceAssignmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVRFDeviceAssignmentRequest(vrf BulkWritableCableRequestStatus) *VRFDeviceAssignmentRequest {
	this := VRFDeviceAssignmentRequest{}
	this.Vrf = vrf
	return &this
}

// NewVRFDeviceAssignmentRequestWithDefaults instantiates a new VRFDeviceAssignmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVRFDeviceAssignmentRequestWithDefaults() *VRFDeviceAssignmentRequest {
	this := VRFDeviceAssignmentRequest{}
	return &this
}

// GetRd returns the Rd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VRFDeviceAssignmentRequest) GetRd() string {
	if o == nil || IsNil(o.Rd.Get()) {
		var ret string
		return ret
	}
	return *o.Rd.Get()
}

// GetRdOk returns a tuple with the Rd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VRFDeviceAssignmentRequest) GetRdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rd.Get(), o.Rd.IsSet()
}

// HasRd returns a boolean if a field has been set.
func (o *VRFDeviceAssignmentRequest) HasRd() bool {
	if o != nil && o.Rd.IsSet() {
		return true
	}

	return false
}

// SetRd gets a reference to the given NullableString and assigns it to the Rd field.
func (o *VRFDeviceAssignmentRequest) SetRd(v string) {
	o.Rd.Set(&v)
}
// SetRdNil sets the value for Rd to be an explicit nil
func (o *VRFDeviceAssignmentRequest) SetRdNil() {
	o.Rd.Set(nil)
}

// UnsetRd ensures that no value is present for Rd, not even an explicit nil
func (o *VRFDeviceAssignmentRequest) UnsetRd() {
	o.Rd.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VRFDeviceAssignmentRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VRFDeviceAssignmentRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VRFDeviceAssignmentRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VRFDeviceAssignmentRequest) SetName(v string) {
	o.Name = &v
}

// GetVrf returns the Vrf field value
func (o *VRFDeviceAssignmentRequest) GetVrf() BulkWritableCableRequestStatus {
	if o == nil {
		var ret BulkWritableCableRequestStatus
		return ret
	}

	return o.Vrf
}

// GetVrfOk returns a tuple with the Vrf field value
// and a boolean to check if the value has been set.
func (o *VRFDeviceAssignmentRequest) GetVrfOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Vrf, true
}

// SetVrf sets field value
func (o *VRFDeviceAssignmentRequest) SetVrf(v BulkWritableCableRequestStatus) {
	o.Vrf = v
}

// GetDevice returns the Device field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VRFDeviceAssignmentRequest) GetDevice() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.Device.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.Device.Get()
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VRFDeviceAssignmentRequest) GetDeviceOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.Device.Get(), o.Device.IsSet()
}

// HasDevice returns a boolean if a field has been set.
func (o *VRFDeviceAssignmentRequest) HasDevice() bool {
	if o != nil && o.Device.IsSet() {
		return true
	}

	return false
}

// SetDevice gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the Device field.
func (o *VRFDeviceAssignmentRequest) SetDevice(v BulkWritableCircuitRequestTenant) {
	o.Device.Set(&v)
}
// SetDeviceNil sets the value for Device to be an explicit nil
func (o *VRFDeviceAssignmentRequest) SetDeviceNil() {
	o.Device.Set(nil)
}

// UnsetDevice ensures that no value is present for Device, not even an explicit nil
func (o *VRFDeviceAssignmentRequest) UnsetDevice() {
	o.Device.Unset()
}

// GetVirtualMachine returns the VirtualMachine field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VRFDeviceAssignmentRequest) GetVirtualMachine() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.VirtualMachine.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.VirtualMachine.Get()
}

// GetVirtualMachineOk returns a tuple with the VirtualMachine field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VRFDeviceAssignmentRequest) GetVirtualMachineOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.VirtualMachine.Get(), o.VirtualMachine.IsSet()
}

// HasVirtualMachine returns a boolean if a field has been set.
func (o *VRFDeviceAssignmentRequest) HasVirtualMachine() bool {
	if o != nil && o.VirtualMachine.IsSet() {
		return true
	}

	return false
}

// SetVirtualMachine gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the VirtualMachine field.
func (o *VRFDeviceAssignmentRequest) SetVirtualMachine(v BulkWritableCircuitRequestTenant) {
	o.VirtualMachine.Set(&v)
}
// SetVirtualMachineNil sets the value for VirtualMachine to be an explicit nil
func (o *VRFDeviceAssignmentRequest) SetVirtualMachineNil() {
	o.VirtualMachine.Set(nil)
}

// UnsetVirtualMachine ensures that no value is present for VirtualMachine, not even an explicit nil
func (o *VRFDeviceAssignmentRequest) UnsetVirtualMachine() {
	o.VirtualMachine.Unset()
}

func (o VRFDeviceAssignmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VRFDeviceAssignmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Rd.IsSet() {
		toSerialize["rd"] = o.Rd.Get()
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["vrf"] = o.Vrf
	if o.Device.IsSet() {
		toSerialize["device"] = o.Device.Get()
	}
	if o.VirtualMachine.IsSet() {
		toSerialize["virtual_machine"] = o.VirtualMachine.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VRFDeviceAssignmentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"vrf",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVRFDeviceAssignmentRequest := _VRFDeviceAssignmentRequest{}

	err = json.Unmarshal(data, &varVRFDeviceAssignmentRequest)

	if err != nil {
		return err
	}

	*o = VRFDeviceAssignmentRequest(varVRFDeviceAssignmentRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "rd")
		delete(additionalProperties, "name")
		delete(additionalProperties, "vrf")
		delete(additionalProperties, "device")
		delete(additionalProperties, "virtual_machine")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVRFDeviceAssignmentRequest struct {
	value *VRFDeviceAssignmentRequest
	isSet bool
}

func (v NullableVRFDeviceAssignmentRequest) Get() *VRFDeviceAssignmentRequest {
	return v.value
}

func (v *NullableVRFDeviceAssignmentRequest) Set(val *VRFDeviceAssignmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVRFDeviceAssignmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVRFDeviceAssignmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVRFDeviceAssignmentRequest(val *VRFDeviceAssignmentRequest) *NullableVRFDeviceAssignmentRequest {
	return &NullableVRFDeviceAssignmentRequest{value: val, isSet: true}
}

func (v NullableVRFDeviceAssignmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVRFDeviceAssignmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


