/*
API Documentation

Source of truth and network automation platform

API version: 2.3.2 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
	"fmt"
)

// checks if the BulkWritableMetadataChoiceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkWritableMetadataChoiceRequest{}

// BulkWritableMetadataChoiceRequest Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type BulkWritableMetadataChoiceRequest struct {
	Id string `json:"id"`
	Value string `json:"value"`
	// Higher weights appear later in the list
	Weight *int32 `json:"weight,omitempty"`
	MetadataType BulkWritableCableRequestStatus `json:"metadata_type"`
	AdditionalProperties map[string]interface{}
}

type _BulkWritableMetadataChoiceRequest BulkWritableMetadataChoiceRequest

// NewBulkWritableMetadataChoiceRequest instantiates a new BulkWritableMetadataChoiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkWritableMetadataChoiceRequest(id string, value string, metadataType BulkWritableCableRequestStatus) *BulkWritableMetadataChoiceRequest {
	this := BulkWritableMetadataChoiceRequest{}
	this.Id = id
	this.Value = value
	this.MetadataType = metadataType
	return &this
}

// NewBulkWritableMetadataChoiceRequestWithDefaults instantiates a new BulkWritableMetadataChoiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkWritableMetadataChoiceRequestWithDefaults() *BulkWritableMetadataChoiceRequest {
	this := BulkWritableMetadataChoiceRequest{}
	return &this
}

// GetId returns the Id field value
func (o *BulkWritableMetadataChoiceRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BulkWritableMetadataChoiceRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BulkWritableMetadataChoiceRequest) SetId(v string) {
	o.Id = v
}

// GetValue returns the Value field value
func (o *BulkWritableMetadataChoiceRequest) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *BulkWritableMetadataChoiceRequest) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *BulkWritableMetadataChoiceRequest) SetValue(v string) {
	o.Value = v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *BulkWritableMetadataChoiceRequest) GetWeight() int32 {
	if o == nil || IsNil(o.Weight) {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableMetadataChoiceRequest) GetWeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *BulkWritableMetadataChoiceRequest) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *BulkWritableMetadataChoiceRequest) SetWeight(v int32) {
	o.Weight = &v
}

// GetMetadataType returns the MetadataType field value
func (o *BulkWritableMetadataChoiceRequest) GetMetadataType() BulkWritableCableRequestStatus {
	if o == nil {
		var ret BulkWritableCableRequestStatus
		return ret
	}

	return o.MetadataType
}

// GetMetadataTypeOk returns a tuple with the MetadataType field value
// and a boolean to check if the value has been set.
func (o *BulkWritableMetadataChoiceRequest) GetMetadataTypeOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetadataType, true
}

// SetMetadataType sets field value
func (o *BulkWritableMetadataChoiceRequest) SetMetadataType(v BulkWritableCableRequestStatus) {
	o.MetadataType = v
}

func (o BulkWritableMetadataChoiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkWritableMetadataChoiceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["value"] = o.Value
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	toSerialize["metadata_type"] = o.MetadataType

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BulkWritableMetadataChoiceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"value",
		"metadata_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBulkWritableMetadataChoiceRequest := _BulkWritableMetadataChoiceRequest{}

	err = json.Unmarshal(data, &varBulkWritableMetadataChoiceRequest)

	if err != nil {
		return err
	}

	*o = BulkWritableMetadataChoiceRequest(varBulkWritableMetadataChoiceRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "value")
		delete(additionalProperties, "weight")
		delete(additionalProperties, "metadata_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBulkWritableMetadataChoiceRequest struct {
	value *BulkWritableMetadataChoiceRequest
	isSet bool
}

func (v NullableBulkWritableMetadataChoiceRequest) Get() *BulkWritableMetadataChoiceRequest {
	return v.value
}

func (v *NullableBulkWritableMetadataChoiceRequest) Set(val *BulkWritableMetadataChoiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkWritableMetadataChoiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkWritableMetadataChoiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkWritableMetadataChoiceRequest(val *BulkWritableMetadataChoiceRequest) *NullableBulkWritableMetadataChoiceRequest {
	return &NullableBulkWritableMetadataChoiceRequest{value: val, isSet: true}
}

func (v NullableBulkWritableMetadataChoiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkWritableMetadataChoiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


