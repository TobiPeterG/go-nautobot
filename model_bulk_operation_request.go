/*
API Documentation

Source of truth and network automation platform

API version: 2.3.1 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
	"fmt"
)

// checks if the BulkOperationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkOperationRequest{}

// BulkOperationRequest Representation of bulk-DELETE request for most models; also used to validate required ID field for bulk-PATCH/PUT.
type BulkOperationRequest struct {
	Id string `json:"id"`
	AdditionalProperties map[string]interface{}
}

type _BulkOperationRequest BulkOperationRequest

// NewBulkOperationRequest instantiates a new BulkOperationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkOperationRequest(id string) *BulkOperationRequest {
	this := BulkOperationRequest{}
	this.Id = id
	return &this
}

// NewBulkOperationRequestWithDefaults instantiates a new BulkOperationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkOperationRequestWithDefaults() *BulkOperationRequest {
	this := BulkOperationRequest{}
	return &this
}

// GetId returns the Id field value
func (o *BulkOperationRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BulkOperationRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BulkOperationRequest) SetId(v string) {
	o.Id = v
}

func (o BulkOperationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkOperationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BulkOperationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBulkOperationRequest := _BulkOperationRequest{}

	err = json.Unmarshal(data, &varBulkOperationRequest)

	if err != nil {
		return err
	}

	*o = BulkOperationRequest(varBulkOperationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBulkOperationRequest struct {
	value *BulkOperationRequest
	isSet bool
}

func (v NullableBulkOperationRequest) Get() *BulkOperationRequest {
	return v.value
}

func (v *NullableBulkOperationRequest) Set(val *BulkOperationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkOperationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkOperationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkOperationRequest(val *BulkOperationRequest) *NullableBulkOperationRequest {
	return &NullableBulkOperationRequest{value: val, isSet: true}
}

func (v NullableBulkOperationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkOperationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


