/*
API Documentation

Source of truth and network automation platform

API version: 2.3.1 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
	"fmt"
)

// checks if the BulkWritableGroupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkWritableGroupRequest{}

// BulkWritableGroupRequest Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type BulkWritableGroupRequest struct {
	Id int32 `json:"id"`
	Name string `json:"name"`
	AdditionalProperties map[string]interface{}
}

type _BulkWritableGroupRequest BulkWritableGroupRequest

// NewBulkWritableGroupRequest instantiates a new BulkWritableGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkWritableGroupRequest(id int32, name string) *BulkWritableGroupRequest {
	this := BulkWritableGroupRequest{}
	this.Id = id
	this.Name = name
	return &this
}

// NewBulkWritableGroupRequestWithDefaults instantiates a new BulkWritableGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkWritableGroupRequestWithDefaults() *BulkWritableGroupRequest {
	this := BulkWritableGroupRequest{}
	return &this
}

// GetId returns the Id field value
func (o *BulkWritableGroupRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BulkWritableGroupRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BulkWritableGroupRequest) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *BulkWritableGroupRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BulkWritableGroupRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BulkWritableGroupRequest) SetName(v string) {
	o.Name = v
}

func (o BulkWritableGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkWritableGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BulkWritableGroupRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBulkWritableGroupRequest := _BulkWritableGroupRequest{}

	err = json.Unmarshal(data, &varBulkWritableGroupRequest)

	if err != nil {
		return err
	}

	*o = BulkWritableGroupRequest(varBulkWritableGroupRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBulkWritableGroupRequest struct {
	value *BulkWritableGroupRequest
	isSet bool
}

func (v NullableBulkWritableGroupRequest) Get() *BulkWritableGroupRequest {
	return v.value
}

func (v *NullableBulkWritableGroupRequest) Set(val *BulkWritableGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkWritableGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkWritableGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkWritableGroupRequest(val *BulkWritableGroupRequest) *NullableBulkWritableGroupRequest {
	return &NullableBulkWritableGroupRequest{value: val, isSet: true}
}

func (v NullableBulkWritableGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkWritableGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


