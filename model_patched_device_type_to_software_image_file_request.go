/*
API Documentation

Source of truth and network automation platform

API version: 2.3.1 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
)

// checks if the PatchedDeviceTypeToSoftwareImageFileRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedDeviceTypeToSoftwareImageFileRequest{}

// PatchedDeviceTypeToSoftwareImageFileRequest Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedDeviceTypeToSoftwareImageFileRequest struct {
	DeviceType *BulkWritableCableRequestStatus `json:"device_type,omitempty"`
	SoftwareImageFile *BulkWritableCableRequestStatus `json:"software_image_file,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedDeviceTypeToSoftwareImageFileRequest PatchedDeviceTypeToSoftwareImageFileRequest

// NewPatchedDeviceTypeToSoftwareImageFileRequest instantiates a new PatchedDeviceTypeToSoftwareImageFileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedDeviceTypeToSoftwareImageFileRequest() *PatchedDeviceTypeToSoftwareImageFileRequest {
	this := PatchedDeviceTypeToSoftwareImageFileRequest{}
	return &this
}

// NewPatchedDeviceTypeToSoftwareImageFileRequestWithDefaults instantiates a new PatchedDeviceTypeToSoftwareImageFileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedDeviceTypeToSoftwareImageFileRequestWithDefaults() *PatchedDeviceTypeToSoftwareImageFileRequest {
	this := PatchedDeviceTypeToSoftwareImageFileRequest{}
	return &this
}

// GetDeviceType returns the DeviceType field value if set, zero value otherwise.
func (o *PatchedDeviceTypeToSoftwareImageFileRequest) GetDeviceType() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.DeviceType) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedDeviceTypeToSoftwareImageFileRequest) GetDeviceTypeOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.DeviceType) {
		return nil, false
	}
	return o.DeviceType, true
}

// HasDeviceType returns a boolean if a field has been set.
func (o *PatchedDeviceTypeToSoftwareImageFileRequest) HasDeviceType() bool {
	if o != nil && !IsNil(o.DeviceType) {
		return true
	}

	return false
}

// SetDeviceType gets a reference to the given BulkWritableCableRequestStatus and assigns it to the DeviceType field.
func (o *PatchedDeviceTypeToSoftwareImageFileRequest) SetDeviceType(v BulkWritableCableRequestStatus) {
	o.DeviceType = &v
}

// GetSoftwareImageFile returns the SoftwareImageFile field value if set, zero value otherwise.
func (o *PatchedDeviceTypeToSoftwareImageFileRequest) GetSoftwareImageFile() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.SoftwareImageFile) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.SoftwareImageFile
}

// GetSoftwareImageFileOk returns a tuple with the SoftwareImageFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedDeviceTypeToSoftwareImageFileRequest) GetSoftwareImageFileOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.SoftwareImageFile) {
		return nil, false
	}
	return o.SoftwareImageFile, true
}

// HasSoftwareImageFile returns a boolean if a field has been set.
func (o *PatchedDeviceTypeToSoftwareImageFileRequest) HasSoftwareImageFile() bool {
	if o != nil && !IsNil(o.SoftwareImageFile) {
		return true
	}

	return false
}

// SetSoftwareImageFile gets a reference to the given BulkWritableCableRequestStatus and assigns it to the SoftwareImageFile field.
func (o *PatchedDeviceTypeToSoftwareImageFileRequest) SetSoftwareImageFile(v BulkWritableCableRequestStatus) {
	o.SoftwareImageFile = &v
}

func (o PatchedDeviceTypeToSoftwareImageFileRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedDeviceTypeToSoftwareImageFileRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceType) {
		toSerialize["device_type"] = o.DeviceType
	}
	if !IsNil(o.SoftwareImageFile) {
		toSerialize["software_image_file"] = o.SoftwareImageFile
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedDeviceTypeToSoftwareImageFileRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedDeviceTypeToSoftwareImageFileRequest := _PatchedDeviceTypeToSoftwareImageFileRequest{}

	err = json.Unmarshal(data, &varPatchedDeviceTypeToSoftwareImageFileRequest)

	if err != nil {
		return err
	}

	*o = PatchedDeviceTypeToSoftwareImageFileRequest(varPatchedDeviceTypeToSoftwareImageFileRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "device_type")
		delete(additionalProperties, "software_image_file")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedDeviceTypeToSoftwareImageFileRequest struct {
	value *PatchedDeviceTypeToSoftwareImageFileRequest
	isSet bool
}

func (v NullablePatchedDeviceTypeToSoftwareImageFileRequest) Get() *PatchedDeviceTypeToSoftwareImageFileRequest {
	return v.value
}

func (v *NullablePatchedDeviceTypeToSoftwareImageFileRequest) Set(val *PatchedDeviceTypeToSoftwareImageFileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedDeviceTypeToSoftwareImageFileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedDeviceTypeToSoftwareImageFileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedDeviceTypeToSoftwareImageFileRequest(val *PatchedDeviceTypeToSoftwareImageFileRequest) *NullablePatchedDeviceTypeToSoftwareImageFileRequest {
	return &NullablePatchedDeviceTypeToSoftwareImageFileRequest{value: val, isSet: true}
}

func (v NullablePatchedDeviceTypeToSoftwareImageFileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedDeviceTypeToSoftwareImageFileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


