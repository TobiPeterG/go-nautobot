/*
API Documentation

Source of truth and network automation platform

API version: 2.3.1 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
)

// checks if the PatchedSoftwareImageFileRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedSoftwareImageFileRequest{}

// PatchedSoftwareImageFileRequest Base class to use for serializers based on OrganizationalModel or PrimaryModel.  Can also be used for models derived from BaseModel, so long as they support custom fields, notes, and relationships.
type PatchedSoftwareImageFileRequest struct {
	ImageFileName *string `json:"image_file_name,omitempty"`
	ImageFileChecksum *string `json:"image_file_checksum,omitempty"`
	HashingAlgorithm *BulkWritableSoftwareImageFileRequestHashingAlgorithm `json:"hashing_algorithm,omitempty"`
	// Image file size in bytes
	ImageFileSize NullableInt64 `json:"image_file_size,omitempty"`
	DownloadUrl *string `json:"download_url,omitempty"`
	// Is the default image for this software version
	DefaultImage *bool `json:"default_image,omitempty"`
	SoftwareVersion *BulkWritableCableRequestStatus `json:"software_version,omitempty"`
	Status *BulkWritableCableRequestStatus `json:"status,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	Relationships *map[string]BulkWritableCableRequestRelationshipsValue `json:"relationships,omitempty"`
	Tags []BulkWritableCableRequestStatus `json:"tags,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedSoftwareImageFileRequest PatchedSoftwareImageFileRequest

// NewPatchedSoftwareImageFileRequest instantiates a new PatchedSoftwareImageFileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedSoftwareImageFileRequest() *PatchedSoftwareImageFileRequest {
	this := PatchedSoftwareImageFileRequest{}
	return &this
}

// NewPatchedSoftwareImageFileRequestWithDefaults instantiates a new PatchedSoftwareImageFileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedSoftwareImageFileRequestWithDefaults() *PatchedSoftwareImageFileRequest {
	this := PatchedSoftwareImageFileRequest{}
	return &this
}

// GetImageFileName returns the ImageFileName field value if set, zero value otherwise.
func (o *PatchedSoftwareImageFileRequest) GetImageFileName() string {
	if o == nil || IsNil(o.ImageFileName) {
		var ret string
		return ret
	}
	return *o.ImageFileName
}

// GetImageFileNameOk returns a tuple with the ImageFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSoftwareImageFileRequest) GetImageFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.ImageFileName) {
		return nil, false
	}
	return o.ImageFileName, true
}

// HasImageFileName returns a boolean if a field has been set.
func (o *PatchedSoftwareImageFileRequest) HasImageFileName() bool {
	if o != nil && !IsNil(o.ImageFileName) {
		return true
	}

	return false
}

// SetImageFileName gets a reference to the given string and assigns it to the ImageFileName field.
func (o *PatchedSoftwareImageFileRequest) SetImageFileName(v string) {
	o.ImageFileName = &v
}

// GetImageFileChecksum returns the ImageFileChecksum field value if set, zero value otherwise.
func (o *PatchedSoftwareImageFileRequest) GetImageFileChecksum() string {
	if o == nil || IsNil(o.ImageFileChecksum) {
		var ret string
		return ret
	}
	return *o.ImageFileChecksum
}

// GetImageFileChecksumOk returns a tuple with the ImageFileChecksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSoftwareImageFileRequest) GetImageFileChecksumOk() (*string, bool) {
	if o == nil || IsNil(o.ImageFileChecksum) {
		return nil, false
	}
	return o.ImageFileChecksum, true
}

// HasImageFileChecksum returns a boolean if a field has been set.
func (o *PatchedSoftwareImageFileRequest) HasImageFileChecksum() bool {
	if o != nil && !IsNil(o.ImageFileChecksum) {
		return true
	}

	return false
}

// SetImageFileChecksum gets a reference to the given string and assigns it to the ImageFileChecksum field.
func (o *PatchedSoftwareImageFileRequest) SetImageFileChecksum(v string) {
	o.ImageFileChecksum = &v
}

// GetHashingAlgorithm returns the HashingAlgorithm field value if set, zero value otherwise.
func (o *PatchedSoftwareImageFileRequest) GetHashingAlgorithm() BulkWritableSoftwareImageFileRequestHashingAlgorithm {
	if o == nil || IsNil(o.HashingAlgorithm) {
		var ret BulkWritableSoftwareImageFileRequestHashingAlgorithm
		return ret
	}
	return *o.HashingAlgorithm
}

// GetHashingAlgorithmOk returns a tuple with the HashingAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSoftwareImageFileRequest) GetHashingAlgorithmOk() (*BulkWritableSoftwareImageFileRequestHashingAlgorithm, bool) {
	if o == nil || IsNil(o.HashingAlgorithm) {
		return nil, false
	}
	return o.HashingAlgorithm, true
}

// HasHashingAlgorithm returns a boolean if a field has been set.
func (o *PatchedSoftwareImageFileRequest) HasHashingAlgorithm() bool {
	if o != nil && !IsNil(o.HashingAlgorithm) {
		return true
	}

	return false
}

// SetHashingAlgorithm gets a reference to the given BulkWritableSoftwareImageFileRequestHashingAlgorithm and assigns it to the HashingAlgorithm field.
func (o *PatchedSoftwareImageFileRequest) SetHashingAlgorithm(v BulkWritableSoftwareImageFileRequestHashingAlgorithm) {
	o.HashingAlgorithm = &v
}

// GetImageFileSize returns the ImageFileSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedSoftwareImageFileRequest) GetImageFileSize() int64 {
	if o == nil || IsNil(o.ImageFileSize.Get()) {
		var ret int64
		return ret
	}
	return *o.ImageFileSize.Get()
}

// GetImageFileSizeOk returns a tuple with the ImageFileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedSoftwareImageFileRequest) GetImageFileSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageFileSize.Get(), o.ImageFileSize.IsSet()
}

// HasImageFileSize returns a boolean if a field has been set.
func (o *PatchedSoftwareImageFileRequest) HasImageFileSize() bool {
	if o != nil && o.ImageFileSize.IsSet() {
		return true
	}

	return false
}

// SetImageFileSize gets a reference to the given NullableInt64 and assigns it to the ImageFileSize field.
func (o *PatchedSoftwareImageFileRequest) SetImageFileSize(v int64) {
	o.ImageFileSize.Set(&v)
}
// SetImageFileSizeNil sets the value for ImageFileSize to be an explicit nil
func (o *PatchedSoftwareImageFileRequest) SetImageFileSizeNil() {
	o.ImageFileSize.Set(nil)
}

// UnsetImageFileSize ensures that no value is present for ImageFileSize, not even an explicit nil
func (o *PatchedSoftwareImageFileRequest) UnsetImageFileSize() {
	o.ImageFileSize.Unset()
}

// GetDownloadUrl returns the DownloadUrl field value if set, zero value otherwise.
func (o *PatchedSoftwareImageFileRequest) GetDownloadUrl() string {
	if o == nil || IsNil(o.DownloadUrl) {
		var ret string
		return ret
	}
	return *o.DownloadUrl
}

// GetDownloadUrlOk returns a tuple with the DownloadUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSoftwareImageFileRequest) GetDownloadUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DownloadUrl) {
		return nil, false
	}
	return o.DownloadUrl, true
}

// HasDownloadUrl returns a boolean if a field has been set.
func (o *PatchedSoftwareImageFileRequest) HasDownloadUrl() bool {
	if o != nil && !IsNil(o.DownloadUrl) {
		return true
	}

	return false
}

// SetDownloadUrl gets a reference to the given string and assigns it to the DownloadUrl field.
func (o *PatchedSoftwareImageFileRequest) SetDownloadUrl(v string) {
	o.DownloadUrl = &v
}

// GetDefaultImage returns the DefaultImage field value if set, zero value otherwise.
func (o *PatchedSoftwareImageFileRequest) GetDefaultImage() bool {
	if o == nil || IsNil(o.DefaultImage) {
		var ret bool
		return ret
	}
	return *o.DefaultImage
}

// GetDefaultImageOk returns a tuple with the DefaultImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSoftwareImageFileRequest) GetDefaultImageOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultImage) {
		return nil, false
	}
	return o.DefaultImage, true
}

// HasDefaultImage returns a boolean if a field has been set.
func (o *PatchedSoftwareImageFileRequest) HasDefaultImage() bool {
	if o != nil && !IsNil(o.DefaultImage) {
		return true
	}

	return false
}

// SetDefaultImage gets a reference to the given bool and assigns it to the DefaultImage field.
func (o *PatchedSoftwareImageFileRequest) SetDefaultImage(v bool) {
	o.DefaultImage = &v
}

// GetSoftwareVersion returns the SoftwareVersion field value if set, zero value otherwise.
func (o *PatchedSoftwareImageFileRequest) GetSoftwareVersion() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.SoftwareVersion) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.SoftwareVersion
}

// GetSoftwareVersionOk returns a tuple with the SoftwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSoftwareImageFileRequest) GetSoftwareVersionOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.SoftwareVersion) {
		return nil, false
	}
	return o.SoftwareVersion, true
}

// HasSoftwareVersion returns a boolean if a field has been set.
func (o *PatchedSoftwareImageFileRequest) HasSoftwareVersion() bool {
	if o != nil && !IsNil(o.SoftwareVersion) {
		return true
	}

	return false
}

// SetSoftwareVersion gets a reference to the given BulkWritableCableRequestStatus and assigns it to the SoftwareVersion field.
func (o *PatchedSoftwareImageFileRequest) SetSoftwareVersion(v BulkWritableCableRequestStatus) {
	o.SoftwareVersion = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PatchedSoftwareImageFileRequest) GetStatus() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Status) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSoftwareImageFileRequest) GetStatusOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PatchedSoftwareImageFileRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given BulkWritableCableRequestStatus and assigns it to the Status field.
func (o *PatchedSoftwareImageFileRequest) SetStatus(v BulkWritableCableRequestStatus) {
	o.Status = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *PatchedSoftwareImageFileRequest) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSoftwareImageFileRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *PatchedSoftwareImageFileRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *PatchedSoftwareImageFileRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *PatchedSoftwareImageFileRequest) GetRelationships() map[string]BulkWritableCableRequestRelationshipsValue {
	if o == nil || IsNil(o.Relationships) {
		var ret map[string]BulkWritableCableRequestRelationshipsValue
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSoftwareImageFileRequest) GetRelationshipsOk() (*map[string]BulkWritableCableRequestRelationshipsValue, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *PatchedSoftwareImageFileRequest) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given map[string]BulkWritableCableRequestRelationshipsValue and assigns it to the Relationships field.
func (o *PatchedSoftwareImageFileRequest) SetRelationships(v map[string]BulkWritableCableRequestRelationshipsValue) {
	o.Relationships = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PatchedSoftwareImageFileRequest) GetTags() []BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Tags) {
		var ret []BulkWritableCableRequestStatus
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSoftwareImageFileRequest) GetTagsOk() ([]BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PatchedSoftwareImageFileRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []BulkWritableCableRequestStatus and assigns it to the Tags field.
func (o *PatchedSoftwareImageFileRequest) SetTags(v []BulkWritableCableRequestStatus) {
	o.Tags = v
}

func (o PatchedSoftwareImageFileRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedSoftwareImageFileRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ImageFileName) {
		toSerialize["image_file_name"] = o.ImageFileName
	}
	if !IsNil(o.ImageFileChecksum) {
		toSerialize["image_file_checksum"] = o.ImageFileChecksum
	}
	if !IsNil(o.HashingAlgorithm) {
		toSerialize["hashing_algorithm"] = o.HashingAlgorithm
	}
	if o.ImageFileSize.IsSet() {
		toSerialize["image_file_size"] = o.ImageFileSize.Get()
	}
	if !IsNil(o.DownloadUrl) {
		toSerialize["download_url"] = o.DownloadUrl
	}
	if !IsNil(o.DefaultImage) {
		toSerialize["default_image"] = o.DefaultImage
	}
	if !IsNil(o.SoftwareVersion) {
		toSerialize["software_version"] = o.SoftwareVersion
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedSoftwareImageFileRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedSoftwareImageFileRequest := _PatchedSoftwareImageFileRequest{}

	err = json.Unmarshal(data, &varPatchedSoftwareImageFileRequest)

	if err != nil {
		return err
	}

	*o = PatchedSoftwareImageFileRequest(varPatchedSoftwareImageFileRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "image_file_name")
		delete(additionalProperties, "image_file_checksum")
		delete(additionalProperties, "hashing_algorithm")
		delete(additionalProperties, "image_file_size")
		delete(additionalProperties, "download_url")
		delete(additionalProperties, "default_image")
		delete(additionalProperties, "software_version")
		delete(additionalProperties, "status")
		delete(additionalProperties, "custom_fields")
		delete(additionalProperties, "relationships")
		delete(additionalProperties, "tags")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedSoftwareImageFileRequest struct {
	value *PatchedSoftwareImageFileRequest
	isSet bool
}

func (v NullablePatchedSoftwareImageFileRequest) Get() *PatchedSoftwareImageFileRequest {
	return v.value
}

func (v *NullablePatchedSoftwareImageFileRequest) Set(val *PatchedSoftwareImageFileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedSoftwareImageFileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedSoftwareImageFileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedSoftwareImageFileRequest(val *PatchedSoftwareImageFileRequest) *NullablePatchedSoftwareImageFileRequest {
	return &NullablePatchedSoftwareImageFileRequest{value: val, isSet: true}
}

func (v NullablePatchedSoftwareImageFileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedSoftwareImageFileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


