/*
API Documentation

Source of truth and network automation platform

API version: 2.3.1 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
)

// checks if the PatchedVRFPrefixAssignmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedVRFPrefixAssignmentRequest{}

// PatchedVRFPrefixAssignmentRequest Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedVRFPrefixAssignmentRequest struct {
	Vrf *BulkWritableCableRequestStatus `json:"vrf,omitempty"`
	Prefix *BulkWritableCableRequestStatus `json:"prefix,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedVRFPrefixAssignmentRequest PatchedVRFPrefixAssignmentRequest

// NewPatchedVRFPrefixAssignmentRequest instantiates a new PatchedVRFPrefixAssignmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedVRFPrefixAssignmentRequest() *PatchedVRFPrefixAssignmentRequest {
	this := PatchedVRFPrefixAssignmentRequest{}
	return &this
}

// NewPatchedVRFPrefixAssignmentRequestWithDefaults instantiates a new PatchedVRFPrefixAssignmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedVRFPrefixAssignmentRequestWithDefaults() *PatchedVRFPrefixAssignmentRequest {
	this := PatchedVRFPrefixAssignmentRequest{}
	return &this
}

// GetVrf returns the Vrf field value if set, zero value otherwise.
func (o *PatchedVRFPrefixAssignmentRequest) GetVrf() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Vrf) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.Vrf
}

// GetVrfOk returns a tuple with the Vrf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedVRFPrefixAssignmentRequest) GetVrfOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Vrf) {
		return nil, false
	}
	return o.Vrf, true
}

// HasVrf returns a boolean if a field has been set.
func (o *PatchedVRFPrefixAssignmentRequest) HasVrf() bool {
	if o != nil && !IsNil(o.Vrf) {
		return true
	}

	return false
}

// SetVrf gets a reference to the given BulkWritableCableRequestStatus and assigns it to the Vrf field.
func (o *PatchedVRFPrefixAssignmentRequest) SetVrf(v BulkWritableCableRequestStatus) {
	o.Vrf = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *PatchedVRFPrefixAssignmentRequest) GetPrefix() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Prefix) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedVRFPrefixAssignmentRequest) GetPrefixOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *PatchedVRFPrefixAssignmentRequest) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given BulkWritableCableRequestStatus and assigns it to the Prefix field.
func (o *PatchedVRFPrefixAssignmentRequest) SetPrefix(v BulkWritableCableRequestStatus) {
	o.Prefix = &v
}

func (o PatchedVRFPrefixAssignmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedVRFPrefixAssignmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Vrf) {
		toSerialize["vrf"] = o.Vrf
	}
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedVRFPrefixAssignmentRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedVRFPrefixAssignmentRequest := _PatchedVRFPrefixAssignmentRequest{}

	err = json.Unmarshal(data, &varPatchedVRFPrefixAssignmentRequest)

	if err != nil {
		return err
	}

	*o = PatchedVRFPrefixAssignmentRequest(varPatchedVRFPrefixAssignmentRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "vrf")
		delete(additionalProperties, "prefix")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedVRFPrefixAssignmentRequest struct {
	value *PatchedVRFPrefixAssignmentRequest
	isSet bool
}

func (v NullablePatchedVRFPrefixAssignmentRequest) Get() *PatchedVRFPrefixAssignmentRequest {
	return v.value
}

func (v *NullablePatchedVRFPrefixAssignmentRequest) Set(val *PatchedVRFPrefixAssignmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedVRFPrefixAssignmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedVRFPrefixAssignmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedVRFPrefixAssignmentRequest(val *PatchedVRFPrefixAssignmentRequest) *NullablePatchedVRFPrefixAssignmentRequest {
	return &NullablePatchedVRFPrefixAssignmentRequest{value: val, isSet: true}
}

func (v NullablePatchedVRFPrefixAssignmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedVRFPrefixAssignmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


