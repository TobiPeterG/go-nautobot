/*
API Documentation

Source of truth and network automation platform

API version: 2.3.1 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the Cable type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Cable{}

// Cable Base class to use for serializers based on OrganizationalModel or PrimaryModel.  Can also be used for models derived from BaseModel, so long as they support custom fields, notes, and relationships.
type Cable struct {
	Id string `json:"id"`
	ObjectType string `json:"object_type" validate:"regexp=^[a-z][a-z0-9_]+\\\\.[a-z][a-z0-9_]+$"`
	// Human friendly display value
	Display string `json:"display"`
	Url string `json:"url"`
	NaturalSlug string `json:"natural_slug"`
	TerminationAType string `json:"termination_a_type"`
	TerminationBType string `json:"termination_b_type"`
	TerminationA CableTermination `json:"termination_a"`
	TerminationB CableTermination `json:"termination_b"`
	LengthUnit *CableLengthUnit `json:"length_unit,omitempty"`
	Type *CableType `json:"type,omitempty"`
	TerminationAId string `json:"termination_a_id"`
	TerminationBId string `json:"termination_b_id"`
	Label *string `json:"label,omitempty"`
	// RGB color in hexadecimal (e.g. 00ff00)
	Color *string `json:"color,omitempty" validate:"regexp=^[0-9a-f]{6}$"`
	Length NullableInt32 `json:"length,omitempty"`
	Status BulkWritableCableRequestStatus `json:"status"`
	Created NullableTime `json:"created"`
	LastUpdated NullableTime `json:"last_updated"`
	NotesUrl string `json:"notes_url"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	Tags []BulkWritableCableRequestStatus `json:"tags,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Cable Cable

// NewCable instantiates a new Cable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCable(id string, objectType string, display string, url string, naturalSlug string, terminationAType string, terminationBType string, terminationA CableTermination, terminationB CableTermination, terminationAId string, terminationBId string, status BulkWritableCableRequestStatus, created NullableTime, lastUpdated NullableTime, notesUrl string) *Cable {
	this := Cable{}
	this.Id = id
	this.ObjectType = objectType
	this.Display = display
	this.Url = url
	this.NaturalSlug = naturalSlug
	this.TerminationAType = terminationAType
	this.TerminationBType = terminationBType
	this.TerminationA = terminationA
	this.TerminationB = terminationB
	this.TerminationAId = terminationAId
	this.TerminationBId = terminationBId
	this.Status = status
	this.Created = created
	this.LastUpdated = lastUpdated
	this.NotesUrl = notesUrl
	return &this
}

// NewCableWithDefaults instantiates a new Cable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCableWithDefaults() *Cable {
	this := Cable{}
	return &this
}

// GetId returns the Id field value
func (o *Cable) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Cable) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Cable) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *Cable) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *Cable) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *Cable) SetObjectType(v string) {
	o.ObjectType = v
}

// GetDisplay returns the Display field value
func (o *Cable) GetDisplay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Display
}

// GetDisplayOk returns a tuple with the Display field value
// and a boolean to check if the value has been set.
func (o *Cable) GetDisplayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Display, true
}

// SetDisplay sets field value
func (o *Cable) SetDisplay(v string) {
	o.Display = v
}

// GetUrl returns the Url field value
func (o *Cable) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Cable) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Cable) SetUrl(v string) {
	o.Url = v
}

// GetNaturalSlug returns the NaturalSlug field value
func (o *Cable) GetNaturalSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NaturalSlug
}

// GetNaturalSlugOk returns a tuple with the NaturalSlug field value
// and a boolean to check if the value has been set.
func (o *Cable) GetNaturalSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NaturalSlug, true
}

// SetNaturalSlug sets field value
func (o *Cable) SetNaturalSlug(v string) {
	o.NaturalSlug = v
}

// GetTerminationAType returns the TerminationAType field value
func (o *Cable) GetTerminationAType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TerminationAType
}

// GetTerminationATypeOk returns a tuple with the TerminationAType field value
// and a boolean to check if the value has been set.
func (o *Cable) GetTerminationATypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TerminationAType, true
}

// SetTerminationAType sets field value
func (o *Cable) SetTerminationAType(v string) {
	o.TerminationAType = v
}

// GetTerminationBType returns the TerminationBType field value
func (o *Cable) GetTerminationBType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TerminationBType
}

// GetTerminationBTypeOk returns a tuple with the TerminationBType field value
// and a boolean to check if the value has been set.
func (o *Cable) GetTerminationBTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TerminationBType, true
}

// SetTerminationBType sets field value
func (o *Cable) SetTerminationBType(v string) {
	o.TerminationBType = v
}

// GetTerminationA returns the TerminationA field value
func (o *Cable) GetTerminationA() CableTermination {
	if o == nil {
		var ret CableTermination
		return ret
	}

	return o.TerminationA
}

// GetTerminationAOk returns a tuple with the TerminationA field value
// and a boolean to check if the value has been set.
func (o *Cable) GetTerminationAOk() (*CableTermination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TerminationA, true
}

// SetTerminationA sets field value
func (o *Cable) SetTerminationA(v CableTermination) {
	o.TerminationA = v
}

// GetTerminationB returns the TerminationB field value
func (o *Cable) GetTerminationB() CableTermination {
	if o == nil {
		var ret CableTermination
		return ret
	}

	return o.TerminationB
}

// GetTerminationBOk returns a tuple with the TerminationB field value
// and a boolean to check if the value has been set.
func (o *Cable) GetTerminationBOk() (*CableTermination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TerminationB, true
}

// SetTerminationB sets field value
func (o *Cable) SetTerminationB(v CableTermination) {
	o.TerminationB = v
}

// GetLengthUnit returns the LengthUnit field value if set, zero value otherwise.
func (o *Cable) GetLengthUnit() CableLengthUnit {
	if o == nil || IsNil(o.LengthUnit) {
		var ret CableLengthUnit
		return ret
	}
	return *o.LengthUnit
}

// GetLengthUnitOk returns a tuple with the LengthUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cable) GetLengthUnitOk() (*CableLengthUnit, bool) {
	if o == nil || IsNil(o.LengthUnit) {
		return nil, false
	}
	return o.LengthUnit, true
}

// HasLengthUnit returns a boolean if a field has been set.
func (o *Cable) HasLengthUnit() bool {
	if o != nil && !IsNil(o.LengthUnit) {
		return true
	}

	return false
}

// SetLengthUnit gets a reference to the given CableLengthUnit and assigns it to the LengthUnit field.
func (o *Cable) SetLengthUnit(v CableLengthUnit) {
	o.LengthUnit = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Cable) GetType() CableType {
	if o == nil || IsNil(o.Type) {
		var ret CableType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cable) GetTypeOk() (*CableType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Cable) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given CableType and assigns it to the Type field.
func (o *Cable) SetType(v CableType) {
	o.Type = &v
}

// GetTerminationAId returns the TerminationAId field value
func (o *Cable) GetTerminationAId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TerminationAId
}

// GetTerminationAIdOk returns a tuple with the TerminationAId field value
// and a boolean to check if the value has been set.
func (o *Cable) GetTerminationAIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TerminationAId, true
}

// SetTerminationAId sets field value
func (o *Cable) SetTerminationAId(v string) {
	o.TerminationAId = v
}

// GetTerminationBId returns the TerminationBId field value
func (o *Cable) GetTerminationBId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TerminationBId
}

// GetTerminationBIdOk returns a tuple with the TerminationBId field value
// and a boolean to check if the value has been set.
func (o *Cable) GetTerminationBIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TerminationBId, true
}

// SetTerminationBId sets field value
func (o *Cable) SetTerminationBId(v string) {
	o.TerminationBId = v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *Cable) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cable) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *Cable) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *Cable) SetLabel(v string) {
	o.Label = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *Cable) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cable) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *Cable) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *Cable) SetColor(v string) {
	o.Color = &v
}

// GetLength returns the Length field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Cable) GetLength() int32 {
	if o == nil || IsNil(o.Length.Get()) {
		var ret int32
		return ret
	}
	return *o.Length.Get()
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Cable) GetLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Length.Get(), o.Length.IsSet()
}

// HasLength returns a boolean if a field has been set.
func (o *Cable) HasLength() bool {
	if o != nil && o.Length.IsSet() {
		return true
	}

	return false
}

// SetLength gets a reference to the given NullableInt32 and assigns it to the Length field.
func (o *Cable) SetLength(v int32) {
	o.Length.Set(&v)
}
// SetLengthNil sets the value for Length to be an explicit nil
func (o *Cable) SetLengthNil() {
	o.Length.Set(nil)
}

// UnsetLength ensures that no value is present for Length, not even an explicit nil
func (o *Cable) UnsetLength() {
	o.Length.Unset()
}

// GetStatus returns the Status field value
func (o *Cable) GetStatus() BulkWritableCableRequestStatus {
	if o == nil {
		var ret BulkWritableCableRequestStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Cable) GetStatusOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Cable) SetStatus(v BulkWritableCableRequestStatus) {
	o.Status = v
}

// GetCreated returns the Created field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Cable) GetCreated() time.Time {
	if o == nil || o.Created.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.Created.Get()
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Cable) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Created.Get(), o.Created.IsSet()
}

// SetCreated sets field value
func (o *Cable) SetCreated(v time.Time) {
	o.Created.Set(&v)
}

// GetLastUpdated returns the LastUpdated field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Cable) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.LastUpdated.Get()
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Cable) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastUpdated.Get(), o.LastUpdated.IsSet()
}

// SetLastUpdated sets field value
func (o *Cable) SetLastUpdated(v time.Time) {
	o.LastUpdated.Set(&v)
}

// GetNotesUrl returns the NotesUrl field value
func (o *Cable) GetNotesUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotesUrl
}

// GetNotesUrlOk returns a tuple with the NotesUrl field value
// and a boolean to check if the value has been set.
func (o *Cable) GetNotesUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotesUrl, true
}

// SetNotesUrl sets field value
func (o *Cable) SetNotesUrl(v string) {
	o.NotesUrl = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *Cable) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cable) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *Cable) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *Cable) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Cable) GetTags() []BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Tags) {
		var ret []BulkWritableCableRequestStatus
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cable) GetTagsOk() ([]BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Cable) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []BulkWritableCableRequestStatus and assigns it to the Tags field.
func (o *Cable) SetTags(v []BulkWritableCableRequestStatus) {
	o.Tags = v
}

func (o Cable) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Cable) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["object_type"] = o.ObjectType
	toSerialize["display"] = o.Display
	toSerialize["url"] = o.Url
	toSerialize["natural_slug"] = o.NaturalSlug
	toSerialize["termination_a_type"] = o.TerminationAType
	toSerialize["termination_b_type"] = o.TerminationBType
	toSerialize["termination_a"] = o.TerminationA
	toSerialize["termination_b"] = o.TerminationB
	if !IsNil(o.LengthUnit) {
		toSerialize["length_unit"] = o.LengthUnit
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	toSerialize["termination_a_id"] = o.TerminationAId
	toSerialize["termination_b_id"] = o.TerminationBId
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if o.Length.IsSet() {
		toSerialize["length"] = o.Length.Get()
	}
	toSerialize["status"] = o.Status
	toSerialize["created"] = o.Created.Get()
	toSerialize["last_updated"] = o.LastUpdated.Get()
	toSerialize["notes_url"] = o.NotesUrl
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Cable) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"object_type",
		"display",
		"url",
		"natural_slug",
		"termination_a_type",
		"termination_b_type",
		"termination_a",
		"termination_b",
		"termination_a_id",
		"termination_b_id",
		"status",
		"created",
		"last_updated",
		"notes_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCable := _Cable{}

	err = json.Unmarshal(data, &varCable)

	if err != nil {
		return err
	}

	*o = Cable(varCable)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "object_type")
		delete(additionalProperties, "display")
		delete(additionalProperties, "url")
		delete(additionalProperties, "natural_slug")
		delete(additionalProperties, "termination_a_type")
		delete(additionalProperties, "termination_b_type")
		delete(additionalProperties, "termination_a")
		delete(additionalProperties, "termination_b")
		delete(additionalProperties, "length_unit")
		delete(additionalProperties, "type")
		delete(additionalProperties, "termination_a_id")
		delete(additionalProperties, "termination_b_id")
		delete(additionalProperties, "label")
		delete(additionalProperties, "color")
		delete(additionalProperties, "length")
		delete(additionalProperties, "status")
		delete(additionalProperties, "created")
		delete(additionalProperties, "last_updated")
		delete(additionalProperties, "notes_url")
		delete(additionalProperties, "custom_fields")
		delete(additionalProperties, "tags")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCable struct {
	value *Cable
	isSet bool
}

func (v NullableCable) Get() *Cable {
	return v.value
}

func (v *NullableCable) Set(val *Cable) {
	v.value = val
	v.isSet = true
}

func (v NullableCable) IsSet() bool {
	return v.isSet
}

func (v *NullableCable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCable(val *Cable) *NullableCable {
	return &NullableCable{value: val, isSet: true}
}

func (v NullableCable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


