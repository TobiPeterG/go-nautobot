/*
API Documentation

Source of truth and network automation platform

API version: 2.2.5 (2.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
	"fmt"
)

// checks if the SecretsGroupAssociation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretsGroupAssociation{}

// SecretsGroupAssociation Serializer for `SecretsGroupAssociation` objects.
type SecretsGroupAssociation struct {
	Id string `json:"id"`
	ObjectType string `json:"object_type" validate:"regexp=^[a-z][a-z0-9_]+\\\\.[a-z][a-z0-9_]+$"`
	// Human friendly display value
	Display string `json:"display"`
	Url string `json:"url"`
	NaturalSlug string `json:"natural_slug"`
	AccessType AccessTypeEnum `json:"access_type"`
	SecretType SecretTypeEnum `json:"secret_type"`
	SecretsGroup BulkWritableCableRequestStatus `json:"secrets_group"`
	Secret BulkWritableCableRequestStatus `json:"secret"`
	AdditionalProperties map[string]interface{}
}

type _SecretsGroupAssociation SecretsGroupAssociation

// NewSecretsGroupAssociation instantiates a new SecretsGroupAssociation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretsGroupAssociation(id string, objectType string, display string, url string, naturalSlug string, accessType AccessTypeEnum, secretType SecretTypeEnum, secretsGroup BulkWritableCableRequestStatus, secret BulkWritableCableRequestStatus) *SecretsGroupAssociation {
	this := SecretsGroupAssociation{}
	this.Id = id
	this.ObjectType = objectType
	this.Display = display
	this.Url = url
	this.NaturalSlug = naturalSlug
	this.AccessType = accessType
	this.SecretType = secretType
	this.SecretsGroup = secretsGroup
	this.Secret = secret
	return &this
}

// NewSecretsGroupAssociationWithDefaults instantiates a new SecretsGroupAssociation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretsGroupAssociationWithDefaults() *SecretsGroupAssociation {
	this := SecretsGroupAssociation{}
	return &this
}

// GetId returns the Id field value
func (o *SecretsGroupAssociation) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SecretsGroupAssociation) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SecretsGroupAssociation) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *SecretsGroupAssociation) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *SecretsGroupAssociation) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *SecretsGroupAssociation) SetObjectType(v string) {
	o.ObjectType = v
}

// GetDisplay returns the Display field value
func (o *SecretsGroupAssociation) GetDisplay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Display
}

// GetDisplayOk returns a tuple with the Display field value
// and a boolean to check if the value has been set.
func (o *SecretsGroupAssociation) GetDisplayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Display, true
}

// SetDisplay sets field value
func (o *SecretsGroupAssociation) SetDisplay(v string) {
	o.Display = v
}

// GetUrl returns the Url field value
func (o *SecretsGroupAssociation) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *SecretsGroupAssociation) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *SecretsGroupAssociation) SetUrl(v string) {
	o.Url = v
}

// GetNaturalSlug returns the NaturalSlug field value
func (o *SecretsGroupAssociation) GetNaturalSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NaturalSlug
}

// GetNaturalSlugOk returns a tuple with the NaturalSlug field value
// and a boolean to check if the value has been set.
func (o *SecretsGroupAssociation) GetNaturalSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NaturalSlug, true
}

// SetNaturalSlug sets field value
func (o *SecretsGroupAssociation) SetNaturalSlug(v string) {
	o.NaturalSlug = v
}

// GetAccessType returns the AccessType field value
func (o *SecretsGroupAssociation) GetAccessType() AccessTypeEnum {
	if o == nil {
		var ret AccessTypeEnum
		return ret
	}

	return o.AccessType
}

// GetAccessTypeOk returns a tuple with the AccessType field value
// and a boolean to check if the value has been set.
func (o *SecretsGroupAssociation) GetAccessTypeOk() (*AccessTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessType, true
}

// SetAccessType sets field value
func (o *SecretsGroupAssociation) SetAccessType(v AccessTypeEnum) {
	o.AccessType = v
}

// GetSecretType returns the SecretType field value
func (o *SecretsGroupAssociation) GetSecretType() SecretTypeEnum {
	if o == nil {
		var ret SecretTypeEnum
		return ret
	}

	return o.SecretType
}

// GetSecretTypeOk returns a tuple with the SecretType field value
// and a boolean to check if the value has been set.
func (o *SecretsGroupAssociation) GetSecretTypeOk() (*SecretTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretType, true
}

// SetSecretType sets field value
func (o *SecretsGroupAssociation) SetSecretType(v SecretTypeEnum) {
	o.SecretType = v
}

// GetSecretsGroup returns the SecretsGroup field value
func (o *SecretsGroupAssociation) GetSecretsGroup() BulkWritableCableRequestStatus {
	if o == nil {
		var ret BulkWritableCableRequestStatus
		return ret
	}

	return o.SecretsGroup
}

// GetSecretsGroupOk returns a tuple with the SecretsGroup field value
// and a boolean to check if the value has been set.
func (o *SecretsGroupAssociation) GetSecretsGroupOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretsGroup, true
}

// SetSecretsGroup sets field value
func (o *SecretsGroupAssociation) SetSecretsGroup(v BulkWritableCableRequestStatus) {
	o.SecretsGroup = v
}

// GetSecret returns the Secret field value
func (o *SecretsGroupAssociation) GetSecret() BulkWritableCableRequestStatus {
	if o == nil {
		var ret BulkWritableCableRequestStatus
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *SecretsGroupAssociation) GetSecretOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *SecretsGroupAssociation) SetSecret(v BulkWritableCableRequestStatus) {
	o.Secret = v
}

func (o SecretsGroupAssociation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretsGroupAssociation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["object_type"] = o.ObjectType
	toSerialize["display"] = o.Display
	toSerialize["url"] = o.Url
	toSerialize["natural_slug"] = o.NaturalSlug
	toSerialize["access_type"] = o.AccessType
	toSerialize["secret_type"] = o.SecretType
	toSerialize["secrets_group"] = o.SecretsGroup
	toSerialize["secret"] = o.Secret

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SecretsGroupAssociation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"object_type",
		"display",
		"url",
		"natural_slug",
		"access_type",
		"secret_type",
		"secrets_group",
		"secret",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSecretsGroupAssociation := _SecretsGroupAssociation{}

	err = json.Unmarshal(data, &varSecretsGroupAssociation)

	if err != nil {
		return err
	}

	*o = SecretsGroupAssociation(varSecretsGroupAssociation)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "object_type")
		delete(additionalProperties, "display")
		delete(additionalProperties, "url")
		delete(additionalProperties, "natural_slug")
		delete(additionalProperties, "access_type")
		delete(additionalProperties, "secret_type")
		delete(additionalProperties, "secrets_group")
		delete(additionalProperties, "secret")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSecretsGroupAssociation struct {
	value *SecretsGroupAssociation
	isSet bool
}

func (v NullableSecretsGroupAssociation) Get() *SecretsGroupAssociation {
	return v.value
}

func (v *NullableSecretsGroupAssociation) Set(val *SecretsGroupAssociation) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretsGroupAssociation) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretsGroupAssociation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretsGroupAssociation(val *SecretsGroupAssociation) *NullableSecretsGroupAssociation {
	return &NullableSecretsGroupAssociation{value: val, isSet: true}
}

func (v NullableSecretsGroupAssociation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretsGroupAssociation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


