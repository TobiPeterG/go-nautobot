/*
API Documentation

Source of truth and network automation platform

API version: 2.2.5 (2.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
)

// checks if the PatchedDynamicGroupMembershipRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedDynamicGroupMembershipRequest{}

// PatchedDynamicGroupMembershipRequest Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedDynamicGroupMembershipRequest struct {
	Operator *OperatorEnum `json:"operator,omitempty"`
	Weight *int32 `json:"weight,omitempty"`
	Group *BulkWritableCableRequestStatus `json:"group,omitempty"`
	ParentGroup *BulkWritableCableRequestStatus `json:"parent_group,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedDynamicGroupMembershipRequest PatchedDynamicGroupMembershipRequest

// NewPatchedDynamicGroupMembershipRequest instantiates a new PatchedDynamicGroupMembershipRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedDynamicGroupMembershipRequest() *PatchedDynamicGroupMembershipRequest {
	this := PatchedDynamicGroupMembershipRequest{}
	return &this
}

// NewPatchedDynamicGroupMembershipRequestWithDefaults instantiates a new PatchedDynamicGroupMembershipRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedDynamicGroupMembershipRequestWithDefaults() *PatchedDynamicGroupMembershipRequest {
	this := PatchedDynamicGroupMembershipRequest{}
	return &this
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *PatchedDynamicGroupMembershipRequest) GetOperator() OperatorEnum {
	if o == nil || IsNil(o.Operator) {
		var ret OperatorEnum
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedDynamicGroupMembershipRequest) GetOperatorOk() (*OperatorEnum, bool) {
	if o == nil || IsNil(o.Operator) {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *PatchedDynamicGroupMembershipRequest) HasOperator() bool {
	if o != nil && !IsNil(o.Operator) {
		return true
	}

	return false
}

// SetOperator gets a reference to the given OperatorEnum and assigns it to the Operator field.
func (o *PatchedDynamicGroupMembershipRequest) SetOperator(v OperatorEnum) {
	o.Operator = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *PatchedDynamicGroupMembershipRequest) GetWeight() int32 {
	if o == nil || IsNil(o.Weight) {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedDynamicGroupMembershipRequest) GetWeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *PatchedDynamicGroupMembershipRequest) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *PatchedDynamicGroupMembershipRequest) SetWeight(v int32) {
	o.Weight = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *PatchedDynamicGroupMembershipRequest) GetGroup() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Group) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedDynamicGroupMembershipRequest) GetGroupOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *PatchedDynamicGroupMembershipRequest) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given BulkWritableCableRequestStatus and assigns it to the Group field.
func (o *PatchedDynamicGroupMembershipRequest) SetGroup(v BulkWritableCableRequestStatus) {
	o.Group = &v
}

// GetParentGroup returns the ParentGroup field value if set, zero value otherwise.
func (o *PatchedDynamicGroupMembershipRequest) GetParentGroup() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.ParentGroup) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.ParentGroup
}

// GetParentGroupOk returns a tuple with the ParentGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedDynamicGroupMembershipRequest) GetParentGroupOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.ParentGroup) {
		return nil, false
	}
	return o.ParentGroup, true
}

// HasParentGroup returns a boolean if a field has been set.
func (o *PatchedDynamicGroupMembershipRequest) HasParentGroup() bool {
	if o != nil && !IsNil(o.ParentGroup) {
		return true
	}

	return false
}

// SetParentGroup gets a reference to the given BulkWritableCableRequestStatus and assigns it to the ParentGroup field.
func (o *PatchedDynamicGroupMembershipRequest) SetParentGroup(v BulkWritableCableRequestStatus) {
	o.ParentGroup = &v
}

func (o PatchedDynamicGroupMembershipRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedDynamicGroupMembershipRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Operator) {
		toSerialize["operator"] = o.Operator
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.ParentGroup) {
		toSerialize["parent_group"] = o.ParentGroup
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedDynamicGroupMembershipRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedDynamicGroupMembershipRequest := _PatchedDynamicGroupMembershipRequest{}

	err = json.Unmarshal(data, &varPatchedDynamicGroupMembershipRequest)

	if err != nil {
		return err
	}

	*o = PatchedDynamicGroupMembershipRequest(varPatchedDynamicGroupMembershipRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "operator")
		delete(additionalProperties, "weight")
		delete(additionalProperties, "group")
		delete(additionalProperties, "parent_group")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedDynamicGroupMembershipRequest struct {
	value *PatchedDynamicGroupMembershipRequest
	isSet bool
}

func (v NullablePatchedDynamicGroupMembershipRequest) Get() *PatchedDynamicGroupMembershipRequest {
	return v.value
}

func (v *NullablePatchedDynamicGroupMembershipRequest) Set(val *PatchedDynamicGroupMembershipRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedDynamicGroupMembershipRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedDynamicGroupMembershipRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedDynamicGroupMembershipRequest(val *PatchedDynamicGroupMembershipRequest) *NullablePatchedDynamicGroupMembershipRequest {
	return &NullablePatchedDynamicGroupMembershipRequest{value: val, isSet: true}
}

func (v NullablePatchedDynamicGroupMembershipRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedDynamicGroupMembershipRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


