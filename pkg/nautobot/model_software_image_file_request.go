/*
API Documentation

Source of truth and network automation platform

API version: 2.2.5 (2.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
	"fmt"
)

// checks if the SoftwareImageFileRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SoftwareImageFileRequest{}

// SoftwareImageFileRequest Base class to use for serializers based on OrganizationalModel or PrimaryModel.  Can also be used for models derived from BaseModel, so long as they support custom fields, notes, and relationships.
type SoftwareImageFileRequest struct {
	ImageFileName string `json:"image_file_name"`
	ImageFileChecksum *string `json:"image_file_checksum,omitempty"`
	HashingAlgorithm *BulkWritableSoftwareImageFileRequestHashingAlgorithm `json:"hashing_algorithm,omitempty"`
	// Image file size in bytes
	ImageFileSize NullableInt64 `json:"image_file_size,omitempty"`
	DownloadUrl *string `json:"download_url,omitempty"`
	// Is the default image for this software version
	DefaultImage *bool `json:"default_image,omitempty"`
	SoftwareVersion BulkWritableCableRequestStatus `json:"software_version"`
	Status BulkWritableCableRequestStatus `json:"status"`
	Tags []BulkWritableCableRequestStatus `json:"tags,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	Relationships *map[string]BulkWritableCableRequestRelationshipsValue `json:"relationships,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SoftwareImageFileRequest SoftwareImageFileRequest

// NewSoftwareImageFileRequest instantiates a new SoftwareImageFileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSoftwareImageFileRequest(imageFileName string, softwareVersion BulkWritableCableRequestStatus, status BulkWritableCableRequestStatus) *SoftwareImageFileRequest {
	this := SoftwareImageFileRequest{}
	this.ImageFileName = imageFileName
	this.SoftwareVersion = softwareVersion
	this.Status = status
	return &this
}

// NewSoftwareImageFileRequestWithDefaults instantiates a new SoftwareImageFileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSoftwareImageFileRequestWithDefaults() *SoftwareImageFileRequest {
	this := SoftwareImageFileRequest{}
	return &this
}

// GetImageFileName returns the ImageFileName field value
func (o *SoftwareImageFileRequest) GetImageFileName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageFileName
}

// GetImageFileNameOk returns a tuple with the ImageFileName field value
// and a boolean to check if the value has been set.
func (o *SoftwareImageFileRequest) GetImageFileNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageFileName, true
}

// SetImageFileName sets field value
func (o *SoftwareImageFileRequest) SetImageFileName(v string) {
	o.ImageFileName = v
}

// GetImageFileChecksum returns the ImageFileChecksum field value if set, zero value otherwise.
func (o *SoftwareImageFileRequest) GetImageFileChecksum() string {
	if o == nil || IsNil(o.ImageFileChecksum) {
		var ret string
		return ret
	}
	return *o.ImageFileChecksum
}

// GetImageFileChecksumOk returns a tuple with the ImageFileChecksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoftwareImageFileRequest) GetImageFileChecksumOk() (*string, bool) {
	if o == nil || IsNil(o.ImageFileChecksum) {
		return nil, false
	}
	return o.ImageFileChecksum, true
}

// HasImageFileChecksum returns a boolean if a field has been set.
func (o *SoftwareImageFileRequest) HasImageFileChecksum() bool {
	if o != nil && !IsNil(o.ImageFileChecksum) {
		return true
	}

	return false
}

// SetImageFileChecksum gets a reference to the given string and assigns it to the ImageFileChecksum field.
func (o *SoftwareImageFileRequest) SetImageFileChecksum(v string) {
	o.ImageFileChecksum = &v
}

// GetHashingAlgorithm returns the HashingAlgorithm field value if set, zero value otherwise.
func (o *SoftwareImageFileRequest) GetHashingAlgorithm() BulkWritableSoftwareImageFileRequestHashingAlgorithm {
	if o == nil || IsNil(o.HashingAlgorithm) {
		var ret BulkWritableSoftwareImageFileRequestHashingAlgorithm
		return ret
	}
	return *o.HashingAlgorithm
}

// GetHashingAlgorithmOk returns a tuple with the HashingAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoftwareImageFileRequest) GetHashingAlgorithmOk() (*BulkWritableSoftwareImageFileRequestHashingAlgorithm, bool) {
	if o == nil || IsNil(o.HashingAlgorithm) {
		return nil, false
	}
	return o.HashingAlgorithm, true
}

// HasHashingAlgorithm returns a boolean if a field has been set.
func (o *SoftwareImageFileRequest) HasHashingAlgorithm() bool {
	if o != nil && !IsNil(o.HashingAlgorithm) {
		return true
	}

	return false
}

// SetHashingAlgorithm gets a reference to the given BulkWritableSoftwareImageFileRequestHashingAlgorithm and assigns it to the HashingAlgorithm field.
func (o *SoftwareImageFileRequest) SetHashingAlgorithm(v BulkWritableSoftwareImageFileRequestHashingAlgorithm) {
	o.HashingAlgorithm = &v
}

// GetImageFileSize returns the ImageFileSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SoftwareImageFileRequest) GetImageFileSize() int64 {
	if o == nil || IsNil(o.ImageFileSize.Get()) {
		var ret int64
		return ret
	}
	return *o.ImageFileSize.Get()
}

// GetImageFileSizeOk returns a tuple with the ImageFileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SoftwareImageFileRequest) GetImageFileSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageFileSize.Get(), o.ImageFileSize.IsSet()
}

// HasImageFileSize returns a boolean if a field has been set.
func (o *SoftwareImageFileRequest) HasImageFileSize() bool {
	if o != nil && o.ImageFileSize.IsSet() {
		return true
	}

	return false
}

// SetImageFileSize gets a reference to the given NullableInt64 and assigns it to the ImageFileSize field.
func (o *SoftwareImageFileRequest) SetImageFileSize(v int64) {
	o.ImageFileSize.Set(&v)
}
// SetImageFileSizeNil sets the value for ImageFileSize to be an explicit nil
func (o *SoftwareImageFileRequest) SetImageFileSizeNil() {
	o.ImageFileSize.Set(nil)
}

// UnsetImageFileSize ensures that no value is present for ImageFileSize, not even an explicit nil
func (o *SoftwareImageFileRequest) UnsetImageFileSize() {
	o.ImageFileSize.Unset()
}

// GetDownloadUrl returns the DownloadUrl field value if set, zero value otherwise.
func (o *SoftwareImageFileRequest) GetDownloadUrl() string {
	if o == nil || IsNil(o.DownloadUrl) {
		var ret string
		return ret
	}
	return *o.DownloadUrl
}

// GetDownloadUrlOk returns a tuple with the DownloadUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoftwareImageFileRequest) GetDownloadUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DownloadUrl) {
		return nil, false
	}
	return o.DownloadUrl, true
}

// HasDownloadUrl returns a boolean if a field has been set.
func (o *SoftwareImageFileRequest) HasDownloadUrl() bool {
	if o != nil && !IsNil(o.DownloadUrl) {
		return true
	}

	return false
}

// SetDownloadUrl gets a reference to the given string and assigns it to the DownloadUrl field.
func (o *SoftwareImageFileRequest) SetDownloadUrl(v string) {
	o.DownloadUrl = &v
}

// GetDefaultImage returns the DefaultImage field value if set, zero value otherwise.
func (o *SoftwareImageFileRequest) GetDefaultImage() bool {
	if o == nil || IsNil(o.DefaultImage) {
		var ret bool
		return ret
	}
	return *o.DefaultImage
}

// GetDefaultImageOk returns a tuple with the DefaultImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoftwareImageFileRequest) GetDefaultImageOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultImage) {
		return nil, false
	}
	return o.DefaultImage, true
}

// HasDefaultImage returns a boolean if a field has been set.
func (o *SoftwareImageFileRequest) HasDefaultImage() bool {
	if o != nil && !IsNil(o.DefaultImage) {
		return true
	}

	return false
}

// SetDefaultImage gets a reference to the given bool and assigns it to the DefaultImage field.
func (o *SoftwareImageFileRequest) SetDefaultImage(v bool) {
	o.DefaultImage = &v
}

// GetSoftwareVersion returns the SoftwareVersion field value
func (o *SoftwareImageFileRequest) GetSoftwareVersion() BulkWritableCableRequestStatus {
	if o == nil {
		var ret BulkWritableCableRequestStatus
		return ret
	}

	return o.SoftwareVersion
}

// GetSoftwareVersionOk returns a tuple with the SoftwareVersion field value
// and a boolean to check if the value has been set.
func (o *SoftwareImageFileRequest) GetSoftwareVersionOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SoftwareVersion, true
}

// SetSoftwareVersion sets field value
func (o *SoftwareImageFileRequest) SetSoftwareVersion(v BulkWritableCableRequestStatus) {
	o.SoftwareVersion = v
}

// GetStatus returns the Status field value
func (o *SoftwareImageFileRequest) GetStatus() BulkWritableCableRequestStatus {
	if o == nil {
		var ret BulkWritableCableRequestStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SoftwareImageFileRequest) GetStatusOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SoftwareImageFileRequest) SetStatus(v BulkWritableCableRequestStatus) {
	o.Status = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *SoftwareImageFileRequest) GetTags() []BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Tags) {
		var ret []BulkWritableCableRequestStatus
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoftwareImageFileRequest) GetTagsOk() ([]BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *SoftwareImageFileRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []BulkWritableCableRequestStatus and assigns it to the Tags field.
func (o *SoftwareImageFileRequest) SetTags(v []BulkWritableCableRequestStatus) {
	o.Tags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *SoftwareImageFileRequest) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoftwareImageFileRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *SoftwareImageFileRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *SoftwareImageFileRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *SoftwareImageFileRequest) GetRelationships() map[string]BulkWritableCableRequestRelationshipsValue {
	if o == nil || IsNil(o.Relationships) {
		var ret map[string]BulkWritableCableRequestRelationshipsValue
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoftwareImageFileRequest) GetRelationshipsOk() (*map[string]BulkWritableCableRequestRelationshipsValue, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *SoftwareImageFileRequest) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given map[string]BulkWritableCableRequestRelationshipsValue and assigns it to the Relationships field.
func (o *SoftwareImageFileRequest) SetRelationships(v map[string]BulkWritableCableRequestRelationshipsValue) {
	o.Relationships = &v
}

func (o SoftwareImageFileRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SoftwareImageFileRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["image_file_name"] = o.ImageFileName
	if !IsNil(o.ImageFileChecksum) {
		toSerialize["image_file_checksum"] = o.ImageFileChecksum
	}
	if !IsNil(o.HashingAlgorithm) {
		toSerialize["hashing_algorithm"] = o.HashingAlgorithm
	}
	if o.ImageFileSize.IsSet() {
		toSerialize["image_file_size"] = o.ImageFileSize.Get()
	}
	if !IsNil(o.DownloadUrl) {
		toSerialize["download_url"] = o.DownloadUrl
	}
	if !IsNil(o.DefaultImage) {
		toSerialize["default_image"] = o.DefaultImage
	}
	toSerialize["software_version"] = o.SoftwareVersion
	toSerialize["status"] = o.Status
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SoftwareImageFileRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"image_file_name",
		"software_version",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSoftwareImageFileRequest := _SoftwareImageFileRequest{}

	err = json.Unmarshal(data, &varSoftwareImageFileRequest)

	if err != nil {
		return err
	}

	*o = SoftwareImageFileRequest(varSoftwareImageFileRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "image_file_name")
		delete(additionalProperties, "image_file_checksum")
		delete(additionalProperties, "hashing_algorithm")
		delete(additionalProperties, "image_file_size")
		delete(additionalProperties, "download_url")
		delete(additionalProperties, "default_image")
		delete(additionalProperties, "software_version")
		delete(additionalProperties, "status")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "custom_fields")
		delete(additionalProperties, "relationships")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSoftwareImageFileRequest struct {
	value *SoftwareImageFileRequest
	isSet bool
}

func (v NullableSoftwareImageFileRequest) Get() *SoftwareImageFileRequest {
	return v.value
}

func (v *NullableSoftwareImageFileRequest) Set(val *SoftwareImageFileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSoftwareImageFileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSoftwareImageFileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSoftwareImageFileRequest(val *SoftwareImageFileRequest) *NullableSoftwareImageFileRequest {
	return &NullableSoftwareImageFileRequest{value: val, isSet: true}
}

func (v NullableSoftwareImageFileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSoftwareImageFileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


