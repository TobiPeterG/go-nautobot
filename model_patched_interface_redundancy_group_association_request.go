/*
API Documentation

Source of truth and network automation platform

API version: 2.3.2 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
)

// checks if the PatchedInterfaceRedundancyGroupAssociationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedInterfaceRedundancyGroupAssociationRequest{}

// PatchedInterfaceRedundancyGroupAssociationRequest InterfaceRedundancyGroupAssociation Serializer.
type PatchedInterfaceRedundancyGroupAssociationRequest struct {
	Priority *int32 `json:"priority,omitempty"`
	InterfaceRedundancyGroup *BulkWritableCableRequestStatus `json:"interface_redundancy_group,omitempty"`
	Interface *BulkWritableCableRequestStatus `json:"interface,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedInterfaceRedundancyGroupAssociationRequest PatchedInterfaceRedundancyGroupAssociationRequest

// NewPatchedInterfaceRedundancyGroupAssociationRequest instantiates a new PatchedInterfaceRedundancyGroupAssociationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedInterfaceRedundancyGroupAssociationRequest() *PatchedInterfaceRedundancyGroupAssociationRequest {
	this := PatchedInterfaceRedundancyGroupAssociationRequest{}
	return &this
}

// NewPatchedInterfaceRedundancyGroupAssociationRequestWithDefaults instantiates a new PatchedInterfaceRedundancyGroupAssociationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedInterfaceRedundancyGroupAssociationRequestWithDefaults() *PatchedInterfaceRedundancyGroupAssociationRequest {
	this := PatchedInterfaceRedundancyGroupAssociationRequest{}
	return &this
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *PatchedInterfaceRedundancyGroupAssociationRequest) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedInterfaceRedundancyGroupAssociationRequest) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *PatchedInterfaceRedundancyGroupAssociationRequest) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *PatchedInterfaceRedundancyGroupAssociationRequest) SetPriority(v int32) {
	o.Priority = &v
}

// GetInterfaceRedundancyGroup returns the InterfaceRedundancyGroup field value if set, zero value otherwise.
func (o *PatchedInterfaceRedundancyGroupAssociationRequest) GetInterfaceRedundancyGroup() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.InterfaceRedundancyGroup) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.InterfaceRedundancyGroup
}

// GetInterfaceRedundancyGroupOk returns a tuple with the InterfaceRedundancyGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedInterfaceRedundancyGroupAssociationRequest) GetInterfaceRedundancyGroupOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.InterfaceRedundancyGroup) {
		return nil, false
	}
	return o.InterfaceRedundancyGroup, true
}

// HasInterfaceRedundancyGroup returns a boolean if a field has been set.
func (o *PatchedInterfaceRedundancyGroupAssociationRequest) HasInterfaceRedundancyGroup() bool {
	if o != nil && !IsNil(o.InterfaceRedundancyGroup) {
		return true
	}

	return false
}

// SetInterfaceRedundancyGroup gets a reference to the given BulkWritableCableRequestStatus and assigns it to the InterfaceRedundancyGroup field.
func (o *PatchedInterfaceRedundancyGroupAssociationRequest) SetInterfaceRedundancyGroup(v BulkWritableCableRequestStatus) {
	o.InterfaceRedundancyGroup = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *PatchedInterfaceRedundancyGroupAssociationRequest) GetInterface() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Interface) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedInterfaceRedundancyGroupAssociationRequest) GetInterfaceOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Interface) {
		return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *PatchedInterfaceRedundancyGroupAssociationRequest) HasInterface() bool {
	if o != nil && !IsNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given BulkWritableCableRequestStatus and assigns it to the Interface field.
func (o *PatchedInterfaceRedundancyGroupAssociationRequest) SetInterface(v BulkWritableCableRequestStatus) {
	o.Interface = &v
}

func (o PatchedInterfaceRedundancyGroupAssociationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedInterfaceRedundancyGroupAssociationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.InterfaceRedundancyGroup) {
		toSerialize["interface_redundancy_group"] = o.InterfaceRedundancyGroup
	}
	if !IsNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedInterfaceRedundancyGroupAssociationRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedInterfaceRedundancyGroupAssociationRequest := _PatchedInterfaceRedundancyGroupAssociationRequest{}

	err = json.Unmarshal(data, &varPatchedInterfaceRedundancyGroupAssociationRequest)

	if err != nil {
		return err
	}

	*o = PatchedInterfaceRedundancyGroupAssociationRequest(varPatchedInterfaceRedundancyGroupAssociationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "priority")
		delete(additionalProperties, "interface_redundancy_group")
		delete(additionalProperties, "interface")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedInterfaceRedundancyGroupAssociationRequest struct {
	value *PatchedInterfaceRedundancyGroupAssociationRequest
	isSet bool
}

func (v NullablePatchedInterfaceRedundancyGroupAssociationRequest) Get() *PatchedInterfaceRedundancyGroupAssociationRequest {
	return v.value
}

func (v *NullablePatchedInterfaceRedundancyGroupAssociationRequest) Set(val *PatchedInterfaceRedundancyGroupAssociationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedInterfaceRedundancyGroupAssociationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedInterfaceRedundancyGroupAssociationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedInterfaceRedundancyGroupAssociationRequest(val *PatchedInterfaceRedundancyGroupAssociationRequest) *NullablePatchedInterfaceRedundancyGroupAssociationRequest {
	return &NullablePatchedInterfaceRedundancyGroupAssociationRequest{value: val, isSet: true}
}

func (v NullablePatchedInterfaceRedundancyGroupAssociationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedInterfaceRedundancyGroupAssociationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


