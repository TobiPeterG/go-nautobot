/*
API Documentation

Source of truth and network automation platform

API version: 2.3.1 (2.3)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
)

// checks if the PatchedObjectMetadataRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedObjectMetadataRequest{}

// PatchedObjectMetadataRequest Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedObjectMetadataRequest struct {
	AssignedObjectType *string `json:"assigned_object_type,omitempty"`
	Value interface{} `json:"value,omitempty"`
	// List of scoped fields, only direct fields on the model
	ScopedFields interface{} `json:"scoped_fields,omitempty"`
	AssignedObjectId *string `json:"assigned_object_id,omitempty"`
	MetadataType *BulkWritableCableRequestStatus `json:"metadata_type,omitempty"`
	Contact NullableBulkWritableCircuitRequestTenant `json:"contact,omitempty"`
	Team NullableBulkWritableCircuitRequestTenant `json:"team,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedObjectMetadataRequest PatchedObjectMetadataRequest

// NewPatchedObjectMetadataRequest instantiates a new PatchedObjectMetadataRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedObjectMetadataRequest() *PatchedObjectMetadataRequest {
	this := PatchedObjectMetadataRequest{}
	return &this
}

// NewPatchedObjectMetadataRequestWithDefaults instantiates a new PatchedObjectMetadataRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedObjectMetadataRequestWithDefaults() *PatchedObjectMetadataRequest {
	this := PatchedObjectMetadataRequest{}
	return &this
}

// GetAssignedObjectType returns the AssignedObjectType field value if set, zero value otherwise.
func (o *PatchedObjectMetadataRequest) GetAssignedObjectType() string {
	if o == nil || IsNil(o.AssignedObjectType) {
		var ret string
		return ret
	}
	return *o.AssignedObjectType
}

// GetAssignedObjectTypeOk returns a tuple with the AssignedObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedObjectMetadataRequest) GetAssignedObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AssignedObjectType) {
		return nil, false
	}
	return o.AssignedObjectType, true
}

// HasAssignedObjectType returns a boolean if a field has been set.
func (o *PatchedObjectMetadataRequest) HasAssignedObjectType() bool {
	if o != nil && !IsNil(o.AssignedObjectType) {
		return true
	}

	return false
}

// SetAssignedObjectType gets a reference to the given string and assigns it to the AssignedObjectType field.
func (o *PatchedObjectMetadataRequest) SetAssignedObjectType(v string) {
	o.AssignedObjectType = &v
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedObjectMetadataRequest) GetValue() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedObjectMetadataRequest) GetValueOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return &o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *PatchedObjectMetadataRequest) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given interface{} and assigns it to the Value field.
func (o *PatchedObjectMetadataRequest) SetValue(v interface{}) {
	o.Value = v
}

// GetScopedFields returns the ScopedFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedObjectMetadataRequest) GetScopedFields() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ScopedFields
}

// GetScopedFieldsOk returns a tuple with the ScopedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedObjectMetadataRequest) GetScopedFieldsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ScopedFields) {
		return nil, false
	}
	return &o.ScopedFields, true
}

// HasScopedFields returns a boolean if a field has been set.
func (o *PatchedObjectMetadataRequest) HasScopedFields() bool {
	if o != nil && !IsNil(o.ScopedFields) {
		return true
	}

	return false
}

// SetScopedFields gets a reference to the given interface{} and assigns it to the ScopedFields field.
func (o *PatchedObjectMetadataRequest) SetScopedFields(v interface{}) {
	o.ScopedFields = v
}

// GetAssignedObjectId returns the AssignedObjectId field value if set, zero value otherwise.
func (o *PatchedObjectMetadataRequest) GetAssignedObjectId() string {
	if o == nil || IsNil(o.AssignedObjectId) {
		var ret string
		return ret
	}
	return *o.AssignedObjectId
}

// GetAssignedObjectIdOk returns a tuple with the AssignedObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedObjectMetadataRequest) GetAssignedObjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssignedObjectId) {
		return nil, false
	}
	return o.AssignedObjectId, true
}

// HasAssignedObjectId returns a boolean if a field has been set.
func (o *PatchedObjectMetadataRequest) HasAssignedObjectId() bool {
	if o != nil && !IsNil(o.AssignedObjectId) {
		return true
	}

	return false
}

// SetAssignedObjectId gets a reference to the given string and assigns it to the AssignedObjectId field.
func (o *PatchedObjectMetadataRequest) SetAssignedObjectId(v string) {
	o.AssignedObjectId = &v
}

// GetMetadataType returns the MetadataType field value if set, zero value otherwise.
func (o *PatchedObjectMetadataRequest) GetMetadataType() BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.MetadataType) {
		var ret BulkWritableCableRequestStatus
		return ret
	}
	return *o.MetadataType
}

// GetMetadataTypeOk returns a tuple with the MetadataType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedObjectMetadataRequest) GetMetadataTypeOk() (*BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.MetadataType) {
		return nil, false
	}
	return o.MetadataType, true
}

// HasMetadataType returns a boolean if a field has been set.
func (o *PatchedObjectMetadataRequest) HasMetadataType() bool {
	if o != nil && !IsNil(o.MetadataType) {
		return true
	}

	return false
}

// SetMetadataType gets a reference to the given BulkWritableCableRequestStatus and assigns it to the MetadataType field.
func (o *PatchedObjectMetadataRequest) SetMetadataType(v BulkWritableCableRequestStatus) {
	o.MetadataType = &v
}

// GetContact returns the Contact field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedObjectMetadataRequest) GetContact() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.Contact.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.Contact.Get()
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedObjectMetadataRequest) GetContactOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.Contact.Get(), o.Contact.IsSet()
}

// HasContact returns a boolean if a field has been set.
func (o *PatchedObjectMetadataRequest) HasContact() bool {
	if o != nil && o.Contact.IsSet() {
		return true
	}

	return false
}

// SetContact gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the Contact field.
func (o *PatchedObjectMetadataRequest) SetContact(v BulkWritableCircuitRequestTenant) {
	o.Contact.Set(&v)
}
// SetContactNil sets the value for Contact to be an explicit nil
func (o *PatchedObjectMetadataRequest) SetContactNil() {
	o.Contact.Set(nil)
}

// UnsetContact ensures that no value is present for Contact, not even an explicit nil
func (o *PatchedObjectMetadataRequest) UnsetContact() {
	o.Contact.Unset()
}

// GetTeam returns the Team field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedObjectMetadataRequest) GetTeam() BulkWritableCircuitRequestTenant {
	if o == nil || IsNil(o.Team.Get()) {
		var ret BulkWritableCircuitRequestTenant
		return ret
	}
	return *o.Team.Get()
}

// GetTeamOk returns a tuple with the Team field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedObjectMetadataRequest) GetTeamOk() (*BulkWritableCircuitRequestTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.Team.Get(), o.Team.IsSet()
}

// HasTeam returns a boolean if a field has been set.
func (o *PatchedObjectMetadataRequest) HasTeam() bool {
	if o != nil && o.Team.IsSet() {
		return true
	}

	return false
}

// SetTeam gets a reference to the given NullableBulkWritableCircuitRequestTenant and assigns it to the Team field.
func (o *PatchedObjectMetadataRequest) SetTeam(v BulkWritableCircuitRequestTenant) {
	o.Team.Set(&v)
}
// SetTeamNil sets the value for Team to be an explicit nil
func (o *PatchedObjectMetadataRequest) SetTeamNil() {
	o.Team.Set(nil)
}

// UnsetTeam ensures that no value is present for Team, not even an explicit nil
func (o *PatchedObjectMetadataRequest) UnsetTeam() {
	o.Team.Unset()
}

func (o PatchedObjectMetadataRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedObjectMetadataRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssignedObjectType) {
		toSerialize["assigned_object_type"] = o.AssignedObjectType
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.ScopedFields != nil {
		toSerialize["scoped_fields"] = o.ScopedFields
	}
	if !IsNil(o.AssignedObjectId) {
		toSerialize["assigned_object_id"] = o.AssignedObjectId
	}
	if !IsNil(o.MetadataType) {
		toSerialize["metadata_type"] = o.MetadataType
	}
	if o.Contact.IsSet() {
		toSerialize["contact"] = o.Contact.Get()
	}
	if o.Team.IsSet() {
		toSerialize["team"] = o.Team.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedObjectMetadataRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedObjectMetadataRequest := _PatchedObjectMetadataRequest{}

	err = json.Unmarshal(data, &varPatchedObjectMetadataRequest)

	if err != nil {
		return err
	}

	*o = PatchedObjectMetadataRequest(varPatchedObjectMetadataRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "assigned_object_type")
		delete(additionalProperties, "value")
		delete(additionalProperties, "scoped_fields")
		delete(additionalProperties, "assigned_object_id")
		delete(additionalProperties, "metadata_type")
		delete(additionalProperties, "contact")
		delete(additionalProperties, "team")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedObjectMetadataRequest struct {
	value *PatchedObjectMetadataRequest
	isSet bool
}

func (v NullablePatchedObjectMetadataRequest) Get() *PatchedObjectMetadataRequest {
	return v.value
}

func (v *NullablePatchedObjectMetadataRequest) Set(val *PatchedObjectMetadataRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedObjectMetadataRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedObjectMetadataRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedObjectMetadataRequest(val *PatchedObjectMetadataRequest) *NullablePatchedObjectMetadataRequest {
	return &NullablePatchedObjectMetadataRequest{value: val, isSet: true}
}

func (v NullablePatchedObjectMetadataRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedObjectMetadataRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


