/*
API Documentation

Source of truth and network automation platform

API version: 2.2.5 (2.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nautobot

import (
	"encoding/json"
	"fmt"
)

// checks if the BulkWritableJobRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkWritableJobRequest{}

// BulkWritableJobRequest Base class to use for serializers based on OrganizationalModel or PrimaryModel.  Can also be used for models derived from BaseModel, so long as they support custom fields, notes, and relationships.
type BulkWritableJobRequest struct {
	Id string `json:"id"`
	// Human-readable grouping that this job belongs to
	Grouping string `json:"grouping"`
	// Human-readable name of this job
	Name string `json:"name"`
	// Markdown formatting and a limited subset of HTML are supported
	Description *string `json:"description,omitempty"`
	// Whether this job can be executed by users
	Enabled *bool `json:"enabled,omitempty"`
	// Whether this job contains sensitive variables
	HasSensitiveVariables *bool `json:"has_sensitive_variables,omitempty"`
	// Whether the job requires approval from another user before running
	ApprovalRequired *bool `json:"approval_required,omitempty"`
	// Whether the job defaults to not being shown in the UI
	Hidden *bool `json:"hidden,omitempty"`
	// Whether the job defaults to running with dryrun argument set to true
	DryrunDefault *bool `json:"dryrun_default,omitempty"`
	// Maximum runtime in seconds before the job will receive a <code>SoftTimeLimitExceeded</code> exception.<br>Set to 0 to use Nautobot system default
	SoftTimeLimit *float64 `json:"soft_time_limit,omitempty"`
	// Maximum runtime in seconds before the job will be forcibly terminated.<br>Set to 0 to use Nautobot system default
	TimeLimit *float64 `json:"time_limit,omitempty"`
	// Comma separated list of task queues that this job can run on. A blank list will use the default queue
	TaskQueues map[string]interface{} `json:"task_queues,omitempty"`
	// If set, the configured grouping will remain even if the underlying Job source code changes
	GroupingOverride *bool `json:"grouping_override,omitempty"`
	// If set, the configured name will remain even if the underlying Job source code changes
	NameOverride *bool `json:"name_override,omitempty"`
	// If set, the configured description will remain even if the underlying Job source code changes
	DescriptionOverride *bool `json:"description_override,omitempty"`
	// If set, the configured value will remain even if the underlying Job source code changes
	ApprovalRequiredOverride *bool `json:"approval_required_override,omitempty"`
	// If set, the configured value will remain even if the underlying Job source code changes
	DryrunDefaultOverride *bool `json:"dryrun_default_override,omitempty"`
	// If set, the configured value will remain even if the underlying Job source code changes
	HiddenOverride *bool `json:"hidden_override,omitempty"`
	// If set, the configured value will remain even if the underlying Job source code changes
	SoftTimeLimitOverride *bool `json:"soft_time_limit_override,omitempty"`
	// If set, the configured value will remain even if the underlying Job source code changes
	TimeLimitOverride *bool `json:"time_limit_override,omitempty"`
	// If set, the configured value will remain even if the underlying Job source code changes
	HasSensitiveVariablesOverride *bool `json:"has_sensitive_variables_override,omitempty"`
	// If set, the configured value will remain even if the underlying Job source code changes
	TaskQueuesOverride *bool `json:"task_queues_override,omitempty"`
	Tags []BulkWritableCableRequestStatus `json:"tags,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	Relationships *map[string]BulkWritableCableRequestRelationshipsValue `json:"relationships,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BulkWritableJobRequest BulkWritableJobRequest

// NewBulkWritableJobRequest instantiates a new BulkWritableJobRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkWritableJobRequest(id string, grouping string, name string) *BulkWritableJobRequest {
	this := BulkWritableJobRequest{}
	this.Id = id
	this.Grouping = grouping
	this.Name = name
	return &this
}

// NewBulkWritableJobRequestWithDefaults instantiates a new BulkWritableJobRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkWritableJobRequestWithDefaults() *BulkWritableJobRequest {
	this := BulkWritableJobRequest{}
	return &this
}

// GetId returns the Id field value
func (o *BulkWritableJobRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BulkWritableJobRequest) SetId(v string) {
	o.Id = v
}

// GetGrouping returns the Grouping field value
func (o *BulkWritableJobRequest) GetGrouping() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Grouping
}

// GetGroupingOk returns a tuple with the Grouping field value
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetGroupingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Grouping, true
}

// SetGrouping sets field value
func (o *BulkWritableJobRequest) SetGrouping(v string) {
	o.Grouping = v
}

// GetName returns the Name field value
func (o *BulkWritableJobRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BulkWritableJobRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BulkWritableJobRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *BulkWritableJobRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetHasSensitiveVariables returns the HasSensitiveVariables field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetHasSensitiveVariables() bool {
	if o == nil || IsNil(o.HasSensitiveVariables) {
		var ret bool
		return ret
	}
	return *o.HasSensitiveVariables
}

// GetHasSensitiveVariablesOk returns a tuple with the HasSensitiveVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetHasSensitiveVariablesOk() (*bool, bool) {
	if o == nil || IsNil(o.HasSensitiveVariables) {
		return nil, false
	}
	return o.HasSensitiveVariables, true
}

// HasHasSensitiveVariables returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasHasSensitiveVariables() bool {
	if o != nil && !IsNil(o.HasSensitiveVariables) {
		return true
	}

	return false
}

// SetHasSensitiveVariables gets a reference to the given bool and assigns it to the HasSensitiveVariables field.
func (o *BulkWritableJobRequest) SetHasSensitiveVariables(v bool) {
	o.HasSensitiveVariables = &v
}

// GetApprovalRequired returns the ApprovalRequired field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetApprovalRequired() bool {
	if o == nil || IsNil(o.ApprovalRequired) {
		var ret bool
		return ret
	}
	return *o.ApprovalRequired
}

// GetApprovalRequiredOk returns a tuple with the ApprovalRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetApprovalRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.ApprovalRequired) {
		return nil, false
	}
	return o.ApprovalRequired, true
}

// HasApprovalRequired returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasApprovalRequired() bool {
	if o != nil && !IsNil(o.ApprovalRequired) {
		return true
	}

	return false
}

// SetApprovalRequired gets a reference to the given bool and assigns it to the ApprovalRequired field.
func (o *BulkWritableJobRequest) SetApprovalRequired(v bool) {
	o.ApprovalRequired = &v
}

// GetHidden returns the Hidden field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetHidden() bool {
	if o == nil || IsNil(o.Hidden) {
		var ret bool
		return ret
	}
	return *o.Hidden
}

// GetHiddenOk returns a tuple with the Hidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetHiddenOk() (*bool, bool) {
	if o == nil || IsNil(o.Hidden) {
		return nil, false
	}
	return o.Hidden, true
}

// HasHidden returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasHidden() bool {
	if o != nil && !IsNil(o.Hidden) {
		return true
	}

	return false
}

// SetHidden gets a reference to the given bool and assigns it to the Hidden field.
func (o *BulkWritableJobRequest) SetHidden(v bool) {
	o.Hidden = &v
}

// GetDryrunDefault returns the DryrunDefault field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetDryrunDefault() bool {
	if o == nil || IsNil(o.DryrunDefault) {
		var ret bool
		return ret
	}
	return *o.DryrunDefault
}

// GetDryrunDefaultOk returns a tuple with the DryrunDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetDryrunDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.DryrunDefault) {
		return nil, false
	}
	return o.DryrunDefault, true
}

// HasDryrunDefault returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasDryrunDefault() bool {
	if o != nil && !IsNil(o.DryrunDefault) {
		return true
	}

	return false
}

// SetDryrunDefault gets a reference to the given bool and assigns it to the DryrunDefault field.
func (o *BulkWritableJobRequest) SetDryrunDefault(v bool) {
	o.DryrunDefault = &v
}

// GetSoftTimeLimit returns the SoftTimeLimit field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetSoftTimeLimit() float64 {
	if o == nil || IsNil(o.SoftTimeLimit) {
		var ret float64
		return ret
	}
	return *o.SoftTimeLimit
}

// GetSoftTimeLimitOk returns a tuple with the SoftTimeLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetSoftTimeLimitOk() (*float64, bool) {
	if o == nil || IsNil(o.SoftTimeLimit) {
		return nil, false
	}
	return o.SoftTimeLimit, true
}

// HasSoftTimeLimit returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasSoftTimeLimit() bool {
	if o != nil && !IsNil(o.SoftTimeLimit) {
		return true
	}

	return false
}

// SetSoftTimeLimit gets a reference to the given float64 and assigns it to the SoftTimeLimit field.
func (o *BulkWritableJobRequest) SetSoftTimeLimit(v float64) {
	o.SoftTimeLimit = &v
}

// GetTimeLimit returns the TimeLimit field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetTimeLimit() float64 {
	if o == nil || IsNil(o.TimeLimit) {
		var ret float64
		return ret
	}
	return *o.TimeLimit
}

// GetTimeLimitOk returns a tuple with the TimeLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetTimeLimitOk() (*float64, bool) {
	if o == nil || IsNil(o.TimeLimit) {
		return nil, false
	}
	return o.TimeLimit, true
}

// HasTimeLimit returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasTimeLimit() bool {
	if o != nil && !IsNil(o.TimeLimit) {
		return true
	}

	return false
}

// SetTimeLimit gets a reference to the given float64 and assigns it to the TimeLimit field.
func (o *BulkWritableJobRequest) SetTimeLimit(v float64) {
	o.TimeLimit = &v
}

// GetTaskQueues returns the TaskQueues field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetTaskQueues() map[string]interface{} {
	if o == nil || IsNil(o.TaskQueues) {
		var ret map[string]interface{}
		return ret
	}
	return o.TaskQueues
}

// GetTaskQueuesOk returns a tuple with the TaskQueues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetTaskQueuesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.TaskQueues) {
		return map[string]interface{}{}, false
	}
	return o.TaskQueues, true
}

// HasTaskQueues returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasTaskQueues() bool {
	if o != nil && !IsNil(o.TaskQueues) {
		return true
	}

	return false
}

// SetTaskQueues gets a reference to the given map[string]interface{} and assigns it to the TaskQueues field.
func (o *BulkWritableJobRequest) SetTaskQueues(v map[string]interface{}) {
	o.TaskQueues = v
}

// GetGroupingOverride returns the GroupingOverride field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetGroupingOverride() bool {
	if o == nil || IsNil(o.GroupingOverride) {
		var ret bool
		return ret
	}
	return *o.GroupingOverride
}

// GetGroupingOverrideOk returns a tuple with the GroupingOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetGroupingOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.GroupingOverride) {
		return nil, false
	}
	return o.GroupingOverride, true
}

// HasGroupingOverride returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasGroupingOverride() bool {
	if o != nil && !IsNil(o.GroupingOverride) {
		return true
	}

	return false
}

// SetGroupingOverride gets a reference to the given bool and assigns it to the GroupingOverride field.
func (o *BulkWritableJobRequest) SetGroupingOverride(v bool) {
	o.GroupingOverride = &v
}

// GetNameOverride returns the NameOverride field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetNameOverride() bool {
	if o == nil || IsNil(o.NameOverride) {
		var ret bool
		return ret
	}
	return *o.NameOverride
}

// GetNameOverrideOk returns a tuple with the NameOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetNameOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.NameOverride) {
		return nil, false
	}
	return o.NameOverride, true
}

// HasNameOverride returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasNameOverride() bool {
	if o != nil && !IsNil(o.NameOverride) {
		return true
	}

	return false
}

// SetNameOverride gets a reference to the given bool and assigns it to the NameOverride field.
func (o *BulkWritableJobRequest) SetNameOverride(v bool) {
	o.NameOverride = &v
}

// GetDescriptionOverride returns the DescriptionOverride field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetDescriptionOverride() bool {
	if o == nil || IsNil(o.DescriptionOverride) {
		var ret bool
		return ret
	}
	return *o.DescriptionOverride
}

// GetDescriptionOverrideOk returns a tuple with the DescriptionOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetDescriptionOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.DescriptionOverride) {
		return nil, false
	}
	return o.DescriptionOverride, true
}

// HasDescriptionOverride returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasDescriptionOverride() bool {
	if o != nil && !IsNil(o.DescriptionOverride) {
		return true
	}

	return false
}

// SetDescriptionOverride gets a reference to the given bool and assigns it to the DescriptionOverride field.
func (o *BulkWritableJobRequest) SetDescriptionOverride(v bool) {
	o.DescriptionOverride = &v
}

// GetApprovalRequiredOverride returns the ApprovalRequiredOverride field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetApprovalRequiredOverride() bool {
	if o == nil || IsNil(o.ApprovalRequiredOverride) {
		var ret bool
		return ret
	}
	return *o.ApprovalRequiredOverride
}

// GetApprovalRequiredOverrideOk returns a tuple with the ApprovalRequiredOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetApprovalRequiredOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.ApprovalRequiredOverride) {
		return nil, false
	}
	return o.ApprovalRequiredOverride, true
}

// HasApprovalRequiredOverride returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasApprovalRequiredOverride() bool {
	if o != nil && !IsNil(o.ApprovalRequiredOverride) {
		return true
	}

	return false
}

// SetApprovalRequiredOverride gets a reference to the given bool and assigns it to the ApprovalRequiredOverride field.
func (o *BulkWritableJobRequest) SetApprovalRequiredOverride(v bool) {
	o.ApprovalRequiredOverride = &v
}

// GetDryrunDefaultOverride returns the DryrunDefaultOverride field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetDryrunDefaultOverride() bool {
	if o == nil || IsNil(o.DryrunDefaultOverride) {
		var ret bool
		return ret
	}
	return *o.DryrunDefaultOverride
}

// GetDryrunDefaultOverrideOk returns a tuple with the DryrunDefaultOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetDryrunDefaultOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.DryrunDefaultOverride) {
		return nil, false
	}
	return o.DryrunDefaultOverride, true
}

// HasDryrunDefaultOverride returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasDryrunDefaultOverride() bool {
	if o != nil && !IsNil(o.DryrunDefaultOverride) {
		return true
	}

	return false
}

// SetDryrunDefaultOverride gets a reference to the given bool and assigns it to the DryrunDefaultOverride field.
func (o *BulkWritableJobRequest) SetDryrunDefaultOverride(v bool) {
	o.DryrunDefaultOverride = &v
}

// GetHiddenOverride returns the HiddenOverride field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetHiddenOverride() bool {
	if o == nil || IsNil(o.HiddenOverride) {
		var ret bool
		return ret
	}
	return *o.HiddenOverride
}

// GetHiddenOverrideOk returns a tuple with the HiddenOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetHiddenOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.HiddenOverride) {
		return nil, false
	}
	return o.HiddenOverride, true
}

// HasHiddenOverride returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasHiddenOverride() bool {
	if o != nil && !IsNil(o.HiddenOverride) {
		return true
	}

	return false
}

// SetHiddenOverride gets a reference to the given bool and assigns it to the HiddenOverride field.
func (o *BulkWritableJobRequest) SetHiddenOverride(v bool) {
	o.HiddenOverride = &v
}

// GetSoftTimeLimitOverride returns the SoftTimeLimitOverride field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetSoftTimeLimitOverride() bool {
	if o == nil || IsNil(o.SoftTimeLimitOverride) {
		var ret bool
		return ret
	}
	return *o.SoftTimeLimitOverride
}

// GetSoftTimeLimitOverrideOk returns a tuple with the SoftTimeLimitOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetSoftTimeLimitOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.SoftTimeLimitOverride) {
		return nil, false
	}
	return o.SoftTimeLimitOverride, true
}

// HasSoftTimeLimitOverride returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasSoftTimeLimitOverride() bool {
	if o != nil && !IsNil(o.SoftTimeLimitOverride) {
		return true
	}

	return false
}

// SetSoftTimeLimitOverride gets a reference to the given bool and assigns it to the SoftTimeLimitOverride field.
func (o *BulkWritableJobRequest) SetSoftTimeLimitOverride(v bool) {
	o.SoftTimeLimitOverride = &v
}

// GetTimeLimitOverride returns the TimeLimitOverride field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetTimeLimitOverride() bool {
	if o == nil || IsNil(o.TimeLimitOverride) {
		var ret bool
		return ret
	}
	return *o.TimeLimitOverride
}

// GetTimeLimitOverrideOk returns a tuple with the TimeLimitOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetTimeLimitOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.TimeLimitOverride) {
		return nil, false
	}
	return o.TimeLimitOverride, true
}

// HasTimeLimitOverride returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasTimeLimitOverride() bool {
	if o != nil && !IsNil(o.TimeLimitOverride) {
		return true
	}

	return false
}

// SetTimeLimitOverride gets a reference to the given bool and assigns it to the TimeLimitOverride field.
func (o *BulkWritableJobRequest) SetTimeLimitOverride(v bool) {
	o.TimeLimitOverride = &v
}

// GetHasSensitiveVariablesOverride returns the HasSensitiveVariablesOverride field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetHasSensitiveVariablesOverride() bool {
	if o == nil || IsNil(o.HasSensitiveVariablesOverride) {
		var ret bool
		return ret
	}
	return *o.HasSensitiveVariablesOverride
}

// GetHasSensitiveVariablesOverrideOk returns a tuple with the HasSensitiveVariablesOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetHasSensitiveVariablesOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.HasSensitiveVariablesOverride) {
		return nil, false
	}
	return o.HasSensitiveVariablesOverride, true
}

// HasHasSensitiveVariablesOverride returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasHasSensitiveVariablesOverride() bool {
	if o != nil && !IsNil(o.HasSensitiveVariablesOverride) {
		return true
	}

	return false
}

// SetHasSensitiveVariablesOverride gets a reference to the given bool and assigns it to the HasSensitiveVariablesOverride field.
func (o *BulkWritableJobRequest) SetHasSensitiveVariablesOverride(v bool) {
	o.HasSensitiveVariablesOverride = &v
}

// GetTaskQueuesOverride returns the TaskQueuesOverride field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetTaskQueuesOverride() bool {
	if o == nil || IsNil(o.TaskQueuesOverride) {
		var ret bool
		return ret
	}
	return *o.TaskQueuesOverride
}

// GetTaskQueuesOverrideOk returns a tuple with the TaskQueuesOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetTaskQueuesOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.TaskQueuesOverride) {
		return nil, false
	}
	return o.TaskQueuesOverride, true
}

// HasTaskQueuesOverride returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasTaskQueuesOverride() bool {
	if o != nil && !IsNil(o.TaskQueuesOverride) {
		return true
	}

	return false
}

// SetTaskQueuesOverride gets a reference to the given bool and assigns it to the TaskQueuesOverride field.
func (o *BulkWritableJobRequest) SetTaskQueuesOverride(v bool) {
	o.TaskQueuesOverride = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetTags() []BulkWritableCableRequestStatus {
	if o == nil || IsNil(o.Tags) {
		var ret []BulkWritableCableRequestStatus
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetTagsOk() ([]BulkWritableCableRequestStatus, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []BulkWritableCableRequestStatus and assigns it to the Tags field.
func (o *BulkWritableJobRequest) SetTags(v []BulkWritableCableRequestStatus) {
	o.Tags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *BulkWritableJobRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *BulkWritableJobRequest) GetRelationships() map[string]BulkWritableCableRequestRelationshipsValue {
	if o == nil || IsNil(o.Relationships) {
		var ret map[string]BulkWritableCableRequestRelationshipsValue
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkWritableJobRequest) GetRelationshipsOk() (*map[string]BulkWritableCableRequestRelationshipsValue, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *BulkWritableJobRequest) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given map[string]BulkWritableCableRequestRelationshipsValue and assigns it to the Relationships field.
func (o *BulkWritableJobRequest) SetRelationships(v map[string]BulkWritableCableRequestRelationshipsValue) {
	o.Relationships = &v
}

func (o BulkWritableJobRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkWritableJobRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["grouping"] = o.Grouping
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.HasSensitiveVariables) {
		toSerialize["has_sensitive_variables"] = o.HasSensitiveVariables
	}
	if !IsNil(o.ApprovalRequired) {
		toSerialize["approval_required"] = o.ApprovalRequired
	}
	if !IsNil(o.Hidden) {
		toSerialize["hidden"] = o.Hidden
	}
	if !IsNil(o.DryrunDefault) {
		toSerialize["dryrun_default"] = o.DryrunDefault
	}
	if !IsNil(o.SoftTimeLimit) {
		toSerialize["soft_time_limit"] = o.SoftTimeLimit
	}
	if !IsNil(o.TimeLimit) {
		toSerialize["time_limit"] = o.TimeLimit
	}
	if !IsNil(o.TaskQueues) {
		toSerialize["task_queues"] = o.TaskQueues
	}
	if !IsNil(o.GroupingOverride) {
		toSerialize["grouping_override"] = o.GroupingOverride
	}
	if !IsNil(o.NameOverride) {
		toSerialize["name_override"] = o.NameOverride
	}
	if !IsNil(o.DescriptionOverride) {
		toSerialize["description_override"] = o.DescriptionOverride
	}
	if !IsNil(o.ApprovalRequiredOverride) {
		toSerialize["approval_required_override"] = o.ApprovalRequiredOverride
	}
	if !IsNil(o.DryrunDefaultOverride) {
		toSerialize["dryrun_default_override"] = o.DryrunDefaultOverride
	}
	if !IsNil(o.HiddenOverride) {
		toSerialize["hidden_override"] = o.HiddenOverride
	}
	if !IsNil(o.SoftTimeLimitOverride) {
		toSerialize["soft_time_limit_override"] = o.SoftTimeLimitOverride
	}
	if !IsNil(o.TimeLimitOverride) {
		toSerialize["time_limit_override"] = o.TimeLimitOverride
	}
	if !IsNil(o.HasSensitiveVariablesOverride) {
		toSerialize["has_sensitive_variables_override"] = o.HasSensitiveVariablesOverride
	}
	if !IsNil(o.TaskQueuesOverride) {
		toSerialize["task_queues_override"] = o.TaskQueuesOverride
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BulkWritableJobRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"grouping",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBulkWritableJobRequest := _BulkWritableJobRequest{}

	err = json.Unmarshal(data, &varBulkWritableJobRequest)

	if err != nil {
		return err
	}

	*o = BulkWritableJobRequest(varBulkWritableJobRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "grouping")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "has_sensitive_variables")
		delete(additionalProperties, "approval_required")
		delete(additionalProperties, "hidden")
		delete(additionalProperties, "dryrun_default")
		delete(additionalProperties, "soft_time_limit")
		delete(additionalProperties, "time_limit")
		delete(additionalProperties, "task_queues")
		delete(additionalProperties, "grouping_override")
		delete(additionalProperties, "name_override")
		delete(additionalProperties, "description_override")
		delete(additionalProperties, "approval_required_override")
		delete(additionalProperties, "dryrun_default_override")
		delete(additionalProperties, "hidden_override")
		delete(additionalProperties, "soft_time_limit_override")
		delete(additionalProperties, "time_limit_override")
		delete(additionalProperties, "has_sensitive_variables_override")
		delete(additionalProperties, "task_queues_override")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "custom_fields")
		delete(additionalProperties, "relationships")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBulkWritableJobRequest struct {
	value *BulkWritableJobRequest
	isSet bool
}

func (v NullableBulkWritableJobRequest) Get() *BulkWritableJobRequest {
	return v.value
}

func (v *NullableBulkWritableJobRequest) Set(val *BulkWritableJobRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkWritableJobRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkWritableJobRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkWritableJobRequest(val *BulkWritableJobRequest) *NullableBulkWritableJobRequest {
	return &NullableBulkWritableJobRequest{value: val, isSet: true}
}

func (v NullableBulkWritableJobRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkWritableJobRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


